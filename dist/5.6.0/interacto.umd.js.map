{"version":3,"file":"interacto.umd.js","sources":["../node_modules/rxjs/src/internal/util/isFunction.ts","../node_modules/rxjs/src/internal/config.ts","../node_modules/rxjs/src/internal/util/hostReportError.ts","../node_modules/rxjs/src/internal/Observer.ts","../node_modules/rxjs/src/internal/util/isArray.ts","../node_modules/rxjs/src/internal/util/isObject.ts","../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../node_modules/rxjs/src/internal/Subscription.ts","../node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","../node_modules/rxjs/src/internal/Subscriber.ts","../node_modules/rxjs/src/internal/util/canReportError.ts","../node_modules/rxjs/src/internal/util/toSubscriber.ts","../node_modules/rxjs/src/internal/symbol/observable.ts","../node_modules/rxjs/src/internal/util/identity.ts","../node_modules/rxjs/src/internal/util/pipe.ts","../node_modules/rxjs/src/internal/Observable.ts","../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../node_modules/rxjs/src/internal/SubjectSubscription.ts","../node_modules/rxjs/src/internal/Subject.ts","../node_modules/typescript-logging/src/logging/log/LoggerOptions.ts","../node_modules/typescript-logging/src/logging/utils/DataStructures.ts","../node_modules/stackframe/stackframe.js","../node_modules/error-stack-parser/error-stack-parser.js","../node_modules/stack-generator/node_modules/stackframe/stackframe.js","../node_modules/stack-generator/stack-generator.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/binary-search.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/quick-sort.js","../node_modules/source-map/lib/source-map-consumer.js","../node_modules/stacktrace-gps/stacktrace-gps.js","../node_modules/stacktrace-js/stacktrace.js","../node_modules/typescript-logging/src/logging/utils/MessageUtils.ts","../node_modules/typescript-logging/src/logging/log/standard/AbstractLogger.ts","../node_modules/typescript-logging/src/logging/log/standard/ConsoleLoggerImpl.ts","../node_modules/typescript-logging/src/logging/log/standard/MessageBufferLoggerImpl.ts","../node_modules/typescript-logging/src/logging/log/standard/LogGroupRuntimeSettings.ts","../node_modules/typescript-logging/src/logging/log/standard/LoggerFactoryImpl.ts","../node_modules/typescript-logging/src/logging/log/category/AbstractCategoryLogger.ts","../node_modules/typescript-logging/src/logging/log/category/CategoryConsoleLoggerImpl.ts","../node_modules/typescript-logging/src/logging/log/category/CategoryDelegateLoggerImpl.ts","../node_modules/typescript-logging/src/logging/log/category/CategoryExtensionLoggerImpl.ts","../node_modules/typescript-logging/src/logging/log/category/CategoryMessageBufferImpl.ts","../node_modules/typescript-logging/src/logging/log/category/CategoryRuntimeSettings.ts","../node_modules/typescript-logging/src/logging/log/category/CategoryConfiguration.ts","../node_modules/typescript-logging/src/logging/log/category/CategoryService.ts","../node_modules/typescript-logging/src/logging/extension/ExtensionHelper.ts","../node_modules/typescript-logging/src/logging/log/standard/LogGroupRule.ts","../node_modules/typescript-logging/src/logging/log/standard/LoggerFactoryOptions.ts","../node_modules/typescript-logging/src/logging/log/standard/LFService.ts","../node_modules/typescript-logging/src/logging/control/LogGroupControl.ts","../node_modules/typescript-logging/src/logging/control/CategoryServiceControl.ts","../node_modules/typescript-logging/src/logging/log/category/Category.ts","../node_modules/typescript-logging/src/logging/log/category/CategoryServiceFactory.ts","../node_modules/typescript-logging/src/logging/utils/JSONHelper.ts","../node_modules/typescript-logging/src/logging/typescript-logging.ts"],"sourcesContent":["export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (this as any)._ctorUnsubscribe = true;\n      (this as any)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = (this as any);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      // It's only possible to null _unsubscribe - to release the reference to\n      // any teardown function passed in the constructor - if the property was\n      // actually assigned in the constructor, as there are some classes that\n      // are derived from Subscriber (which derives from Subscription) that\n      // implement an _unsubscribe method as a mechanism for obtaining\n      // unsubscription notifications and some of those subscribers are\n      // recycled. Also, in some of those subscribers, _unsubscribe switches\n      // from a prototype method to an instance property - see notifyNext in\n      // RetryWhenSubscriber.\n      if (_ctorUnsubscribe) {\n        (this as any)._unsubscribe = undefined;\n      }\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!teardown) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","/**\n * Log level for a logger.\n */\nexport enum LogLevel {\n\n  Trace,\n  Debug,\n  Info,\n  Warn,\n  Error,\n  Fatal\n}\n\n/* tslint:disable:no-namespace */\nexport namespace LogLevel {\n\n  /**\n   * Returns LogLevel based on string representation\n   * @param val Value\n   * @returns {LogLevel}, Error is thrown if invalid.\n   */\n  export function fromString(val: string): LogLevel {\n    if (val == null) {\n      throw new Error(\"Argument must be set\");\n    }\n\n    switch (val.toLowerCase()) {\n      case \"trace\":\n        return LogLevel.Trace;\n      case \"debug\":\n        return LogLevel.Debug;\n      case \"info\":\n        return LogLevel.Info;\n      case \"warn\":\n        return LogLevel.Warn;\n      case \"error\":\n        return LogLevel.Error;\n      case \"fatal\":\n        return LogLevel.Fatal;\n      default:\n        throw new Error(\"Unsupported value for conversion: \" + val);\n    }\n  }\n\n}\n/* tslint:disable:enable-namespace */\n\n/**\n * Where to log to? Pick one of the constants. Custom requires a callback to be present, see LFService.createLoggerFactory(...)\n * where this comes into play.\n */\nexport enum LoggerType {\n\n  Console,\n  MessageBuffer,\n  Custom\n}\n\n/**\n * Defines several date enums used for formatting a date.\n */\nexport enum DateFormatEnum {\n\n  /**\n   * Displays as: year-month-day hour:minute:second,millis -> 1999-02-12 23:59:59,123\n   * Note the date separator can be set separately.\n   */\n  Default,\n\n    /**\n     * Displays as: year-month-day hour:minute:second -> 1999-02-12 23:59:59\n     * Note the date separator can be set separately.\n     */\n  YearMonthDayTime,\n\n    /**\n     * Displays as: year-day-month hour:minute:second,millis -> 1999-12-02 23:59:59,123\n     * Note the date separator can be set separately.\n     */\n  YearDayMonthWithFullTime,\n\n    /**\n     * Displays as: year-day-month hour:minute:second -> 1999-12-02 23:59:59\n     * Note the date separator can be set separately.\n     */\n  YearDayMonthTime\n}\n\n/* tslint:disable:no-namespace */\nexport namespace DateFormatEnum {\n\n  /**\n   * Returns LogLevel based on string representation\n   * @param val Value\n   * @returns {LogLevel}, Error is thrown if invalid.\n   */\n  export function fromString(val: string): DateFormatEnum {\n    if (val == null) {\n      throw new Error(\"Argument must be set\");\n    }\n\n    switch (val.toLowerCase()) {\n      case \"default\":\n        return DateFormatEnum.Default;\n      case \"yearmonthdayTime\":\n        return DateFormatEnum.YearMonthDayTime;\n      case \"yeardaymonthwithfulltime\":\n        return DateFormatEnum.YearDayMonthWithFullTime;\n      case \"yeardaymonthtime\":\n        return DateFormatEnum.YearDayMonthTime;\n      default:\n        throw new Error(\"Unsupported value for conversion: \" + val);\n    }\n  }\n\n}\n/* tslint:disable:enable-namespace */\n\n/**\n * DateFormat class, stores data on how to format a date.\n */\nexport class DateFormat {\n\n  private _formatEnum: DateFormatEnum;\n  private _dateSeparator: string;\n\n  /**\n   * Constructor to define the dateformat used for logging, can be called empty as it uses defaults.\n   * @param formatEnum DateFormatEnum, use one of the constants from the enum. Defaults to DateFormatEnum.Default\n   * @param dateSeparator Separator used between dates, defaults to -\n   */\n  constructor(formatEnum: DateFormatEnum = DateFormatEnum.Default, dateSeparator: string = \"-\") {\n    this._formatEnum = formatEnum;\n    this._dateSeparator = dateSeparator;\n  }\n\n  get formatEnum(): DateFormatEnum {\n    return this._formatEnum;\n  }\n\n  set formatEnum(value: DateFormatEnum) {\n    this._formatEnum = value;\n  }\n\n  get dateSeparator(): string {\n    return this._dateSeparator;\n  }\n\n  set dateSeparator(value: string) {\n    this._dateSeparator = value;\n  }\n\n  public copy(): DateFormat {\n    return new DateFormat(this._formatEnum, this._dateSeparator);\n  }\n}\n\n/**\n * Information about the log format, what will a log line look like?\n */\nexport class LogFormat {\n\n  private _dateFormat: DateFormat;\n  private _showTimeStamp: boolean = true;\n  private _showLoggerName: boolean = true;\n\n  /**\n   * Constructor to create a LogFormat. Can be created without parameters where it will use sane defaults.\n   * @param dateFormat DateFormat (what needs the date look like in the log line)\n   * @param showTimeStamp Show date timestamp at all?\n   * @param showLoggerName Show the logger name?\n   */\n  constructor(dateFormat: DateFormat = new DateFormat(), showTimeStamp: boolean = true, showLoggerName: boolean = true) {\n    this._dateFormat = dateFormat;\n    this._showTimeStamp = showTimeStamp;\n    this._showLoggerName = showLoggerName;\n  }\n\n  get dateFormat(): DateFormat {\n    return this._dateFormat;\n  }\n\n  get showTimeStamp(): boolean {\n    return this._showTimeStamp;\n  }\n\n  set showTimeStamp(value: boolean) {\n    this._showTimeStamp = value;\n  }\n\n  get showLoggerName(): boolean {\n    return this._showLoggerName;\n  }\n\n  set showLoggerName(value: boolean) {\n    this._showLoggerName = value;\n  }\n}\n\n/**\n * Information about the log format, what will a log line look like?\n */\nexport class CategoryLogFormat {\n\n  private _dateFormat: DateFormat;\n  private _showTimeStamp: boolean;\n  private _showCategoryName: boolean;\n\n  /**\n   * Create an instance defining the category log format used.\n   * @param dateFormat Date format (uses default), for details see DateFormat class.\n   * @param showTimeStamp True to show timestamp in the logging, defaults to true.\n   * @param showCategoryName True to show category name in the logging, defaults to true.\n   */\n  constructor(dateFormat: DateFormat = new DateFormat(), showTimeStamp: boolean = true, showCategoryName: boolean = true) {\n    this._dateFormat = dateFormat;\n    this._showTimeStamp = showTimeStamp;\n    this._showCategoryName = showCategoryName;\n  }\n\n  get dateFormat(): DateFormat {\n    return this._dateFormat;\n  }\n\n  set dateFormat(value: DateFormat) {\n    this._dateFormat = value;\n  }\n\n  get showTimeStamp(): boolean {\n    return this._showTimeStamp;\n  }\n\n  set showTimeStamp(value: boolean) {\n    this._showTimeStamp = value;\n  }\n\n  get showCategoryName(): boolean {\n    return this._showCategoryName;\n  }\n\n  set showCategoryName(value: boolean) {\n    this._showCategoryName = value;\n  }\n\n  public copy(): CategoryLogFormat {\n    return new CategoryLogFormat(this._dateFormat.copy(), this._showTimeStamp, this._showCategoryName);\n  }\n}\n","class LinkedNode<T> {\n\n  private _value: T;\n  private _previous: LinkedNode<T> | null = null;\n  private _next: LinkedNode<T> | null = null;\n\n  constructor(value: T) {\n    this._value = value;\n  }\n\n  get previous(): LinkedNode<T> | null {\n    return this._previous;\n  }\n\n  set previous(value: LinkedNode<T> | null) {\n    this._previous = value;\n  }\n\n  get next(): LinkedNode<T> | null {\n    return this._next;\n  }\n\n  set next(value: LinkedNode<T> | null) {\n    this._next = value;\n  }\n\n  get value(): T {\n    return this._value;\n  }\n}\n\n/**\n * Double linkedlist implementation.\n */\nexport class LinkedList<T> {\n\n  private head: LinkedNode<T> | null = null;\n  private size: number = 0;\n\n  public addHead(value: T): void {\n    if (!this.createHeadIfNeeded(value)) {\n      if (this.head != null) {\n        const nextNode = this.head.next;\n        const newHeadNode = new LinkedNode<T>(value);\n        if (nextNode != null) {\n          nextNode.previous = newHeadNode;\n          newHeadNode.next = nextNode;\n        }\n        this.head = newHeadNode;\n      }\n      else {\n        throw new Error(\"This should never happen, list implementation broken\");\n      }\n    }\n    this.size++;\n  }\n\n  public addTail(value: T): void {\n    if (!this.createHeadIfNeeded(value)) {\n      const oldTailNode = this.getTailNode();\n      if (oldTailNode != null) {\n        const newTailNode = new LinkedNode<T>(value);\n        oldTailNode.next = newTailNode;\n        newTailNode.previous = oldTailNode;\n      }\n      else {\n        throw new Error(\"List implementation broken\");\n      }\n    }\n    this.size++;\n  }\n\n  public clear() {\n    this.head = null;\n    this.size = 0;\n  }\n\n  public getHead(): T | null {\n    if (this.head != null) {\n      return this.head.value;\n    }\n    return null;\n  }\n\n  public removeHead(): T | null {\n    if (this.head != null) {\n      const oldHead = this.head;\n      const value = oldHead.value;\n      this.head = oldHead.next;\n      this.size--;\n      return value;\n    }\n    return null;\n  }\n\n  public getTail(): T | null {\n    const node = this.getTailNode();\n    if (node != null) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public removeTail(): T | null {\n    const node = this.getTailNode();\n    if (node != null) {\n      if (node === this.head) {\n        this.head = null;\n      }\n      else {\n        const previousNode = node.previous;\n        if (previousNode != null) {\n          previousNode.next = null;\n        }\n        else {\n          throw new Error(\"List implementation is broken\");\n        }\n      }\n      this.size--;\n      return node.value;\n    }\n    return null;\n  }\n\n  public getSize(): number {\n    return this.size;\n  }\n\n  public filter(f: (value: T) => boolean): T[] {\n    const recurse = (fn: (value: T) => boolean, node: LinkedNode<T>, values: T[]) => {\n      if (fn(node.value)) {\n        values.push(node.value);\n      }\n\n      const nextNode = node.next;\n      if (nextNode != null) {\n        recurse(fn, nextNode, values);\n      }\n    };\n\n    const result: T[] = [];\n    const currentNode = this.head;\n    if (currentNode != null) {\n      recurse(f, currentNode, result);\n    }\n    return result;\n  }\n\n  private createHeadIfNeeded(value: T): boolean {\n    if (this.head == null) {\n      this.head = new LinkedNode(value);\n      return true;\n    }\n    return false;\n  }\n\n  private getTailNode(): LinkedNode<T> | null {\n    if (this.head == null) {\n      return null;\n    }\n\n    let node = this.head;\n    while (node.next != null) {\n      node = node.next;\n    }\n\n    return node;\n  }\n}\n\n/**\n * Map implementation keyed by string (always).\n */\nexport class SimpleMap<V> {\n\n  private array: {[key: string]: V} = {};\n\n  public put(key: string, value: V): void {\n    this.array[key] = value;\n  }\n\n  public get(key: string): V | undefined {\n    return this.array[key];\n  }\n\n  public exists(key: string): boolean {\n    const value = this.array[key];\n    return (typeof value !== \"undefined\");\n\n  }\n\n  public remove(key: string): V | undefined {\n    const value = this.array[key];\n    if (typeof value !== \"undefined\") {\n      delete this.array[key];\n    }\n    return value;\n  }\n\n  public keys(): string[] {\n    const keys: string[] = [];\n    for (const key in this.array) {\n      // To prevent random stuff to appear\n      if (this.array.hasOwnProperty(key)) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  }\n\n  public values(): V[] {\n    const values: V[] = [];\n    for (const key in this.array) {\n      // To prevent random stuff to appear\n      if (this.array.hasOwnProperty(key)) {\n        values.push(this.get(key) as V);\n      }\n    }\n    return values;\n  }\n\n  public size(): number {\n    return this.keys().length;\n  }\n\n  public isEmpty(): boolean {\n    return this.size() === 0;\n  }\n\n  public clear(): void {\n    this.array = {};\n  }\n\n  public forEach(cbFunction: (key: string, value: V, index: number) => void): void {\n    let count = 0;\n    for (const key in this.array) {\n      // To prevent random stuff to appear\n      if (this.array.hasOwnProperty(key)) {\n        const value = this.array[key];\n        cbFunction(key, value, count);\n        count++;\n      }\n    }\n  }\n\n  public forEachValue(cbFunction: (value: V, index: number) => void): void {\n    let count = 0;\n    for (const key in this.array) {\n      // To prevent random stuff to appear\n      if (this.array.hasOwnProperty(key)) {\n        const value = this.array[key];\n        cbFunction(value, count);\n        count++;\n      }\n    }\n  }\n\n}\n\n/**\n * Tuple to hold two values.\n */\nexport class TuplePair<X, Y> {\n\n  private _x: X;\n  private _y: Y;\n\n  constructor(x: X, y: Y) {\n    this._x = x;\n    this._y = y;\n  }\n\n  get x(): X {\n    return this._x;\n  }\n\n  set x(value: X) {\n    this._x = value;\n  }\n\n  get y(): Y {\n    return this._y;\n  }\n\n  set y(value: Y) {\n    this._y = value;\n  }\n}\n\n/**\n * Utility class to build up a string.\n */\nexport class StringBuilder {\n\n  private data: string[] = [];\n\n  public append(line: string): StringBuilder {\n    if (line === undefined || line == null) {\n      throw new Error(\"String must be set, cannot append null or undefined\");\n    }\n    this.data.push(line);\n    return this;\n  }\n\n  public appendLine(line: string): StringBuilder {\n    this.data.push(line + \"\\n\");\n    return this;\n  }\n\n  public isEmpty(): boolean {\n    return this.data.length === 0;\n  }\n\n  public clear(): void {\n    this.data = [];\n  }\n\n  public toString(separator: string = \"\"): string {\n    return this.data.join(separator);\n  }\n}\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n        if (source !== undefined) {\n            this.setSource(source);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        getSource: function () {\n            return this.source;\n        },\n        setSource: function (v) {\n            this.source = String(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    function _map(array, fn, thisArg) {\n        if (typeof Array.prototype.map === 'function') {\n            return array.map(fn, thisArg);\n        } else {\n            var output = new Array(array.length);\n            for (var i = 0; i < array.length; i++) {\n                output[i] = fn.call(thisArg, array[i]);\n            }\n            return output;\n        }\n    }\n\n    function _filter(array, fn, thisArg) {\n        if (typeof Array.prototype.filter === 'function') {\n            return array.filter(fn, thisArg);\n        } else {\n            var output = [];\n            for (var i = 0; i < array.length; i++) {\n                if (fn.call(thisArg, array[i])) {\n                    output.push(array[i]);\n                }\n            }\n            return output;\n        }\n    }\n\n    function _indexOf(array, target) {\n        if (typeof Array.prototype.indexOf === 'function') {\n            return array.indexOf(target);\n        } else {\n            for (var i = 0; i < array.length; i++) {\n                if (array[i] === target) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = _filter(error.stack.split('\\n'), function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return _map(filtered, function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = _indexOf(['eval', '<anonymous>'], locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = _filter(error.stack.split('\\n'), function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return _map(filtered, function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame(line);\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n                    return new StackFrame(functionName,\n                        undefined,\n                        locationParts[0],\n                        locationParts[1],\n                        locationParts[2],\n                        line);\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame(\n                            match[3] || undefined,\n                            undefined,\n                            match[2],\n                            match[1],\n                            undefined,\n                            lines[i]\n                        )\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = _filter(error.stack.split('\\n'), function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return _map(filtered, function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n                return new StackFrame(\n                    functionName,\n                    args,\n                    locationParts[0],\n                    locationParts[1],\n                    locationParts[2],\n                    line);\n            }, this);\n        }\n    };\n}));\n\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function (StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for(var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = util.toSetString(aStr);\n  var isDuplicate = has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    this._set[sStr] = idx;\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  var sStr = util.toSetString(aStr);\n  return has.call(this._set, sStr);\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  var sStr = util.toSetString(aStr);\n  if (has.call(this._set, sStr)) {\n    return this._set[sStr];\n  }\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace-gps', ['source-map', 'stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map-consumer'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap || root.sourceMap, root.StackFrame);\n    }\n}(this, function(SourceMap, StackFrame) {\n    'use strict';\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param {String} url\n     * @returns {Promise} with response text if fulfilled\n     */\n    function _xdr(url) {\n        return new Promise(function(resolve, reject) {\n            var req = new XMLHttpRequest();\n            req.open('get', url);\n            req.onerror = reject;\n            req.onreadystatechange = function onreadystatechange() {\n                if (req.readyState === 4) {\n                    if (req.status >= 200 && req.status < 300) {\n                        resolve(req.responseText);\n                    } else {\n                        reject(new Error('HTTP status: ' + req.status + ' retrieving ' + url));\n                    }\n                }\n            };\n            req.send();\n        });\n\n    }\n\n    /**\n     * Convert a Base64-encoded string into its original representation.\n     * Used for inline sourcemaps.\n     *\n     * @param {String} b64str Base-64 encoded string\n     * @returns {String} original representation of the base64-encoded string.\n     */\n    function _atob(b64str) {\n        if (typeof window !== 'undefined' && window.atob) {\n            return window.atob(b64str);\n        } else {\n            throw new Error('You must supply a polyfill for window.atob in this environment');\n        }\n    }\n\n    function _parseJson(string) {\n        if (typeof JSON !== 'undefined' && JSON.parse) {\n            return JSON.parse(string);\n        } else {\n            throw new Error('You must supply a polyfill for JSON.parse in this environment');\n        }\n    }\n\n    function _findFunctionName(source, lineNumber/*, columnNumber*/) {\n        // function {name}({args}) m[1]=name m[2]=args\n        var reFunctionDeclaration = /function\\s+([^(]*?)\\s*\\(([^)]*)\\)/;\n        // {name} = function ({args}) TODO args capture\n        var reFunctionExpression = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/;\n        // {name} = eval()\n        var reFunctionEvaluation = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/;\n        var lines = source.split('\\n');\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '';\n        var maxLines = Math.min(lineNumber, 20);\n        var m;\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            var line = lines[lineNumber - i - 1];\n            var commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                m = reFunctionExpression.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionDeclaration.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionEvaluation.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' ||\n            stackframe.lineNumber % 1 !== 0 ||\n            stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' ||\n            stackframe.columnNumber % 1 !== 0 ||\n            stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var m = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)\\s*$/.exec(source);\n        if (m && m[1]) {\n            return m[1];\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _extractLocationInfoFromSourceMap(stackframe, rawSourceMap, sourceCache) {\n        return new Promise(function(resolve, reject) {\n            var mapConsumer = new SourceMap.SourceMapConsumer(rawSourceMap);\n\n            var loc = mapConsumer.originalPositionFor({\n                line: stackframe.lineNumber,\n                column: stackframe.columnNumber\n            });\n\n            if (loc.source) {\n                var mappedSource = mapConsumer.sourceContentFor(loc.source);\n                if (mappedSource) {\n                    sourceCache[loc.source] = mappedSource;\n                }\n                resolve(\n                    new StackFrame(\n                        loc.name || stackframe.functionName,\n                        stackframe.args,\n                        loc.source,\n                        loc.line,\n                        loc.column));\n            } else {\n                reject(new Error('Could not get original source for given stackframe and source map'));\n            }\n        });\n    }\n\n    /**\n     * @constructor\n     * @param {Object} opts\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     *      opts.ajax = Promise returning function to make X-Domain requests\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n\n        this.ajax = opts.ajax || _xdr;\n\n        this._atob = opts.atob || _atob;\n\n        this._get = function _get(location) {\n            return new Promise(function(resolve, reject) {\n                var isDataUrl = location.substr(0, 5) === 'data:';\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline && !isDataUrl) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    if (isDataUrl) {\n                        // data URLs can have parameters.\n                        // see http://tools.ietf.org/html/rfc2397\n                        var supportedEncodingRegexp =\n                            /^data:application\\/json;([\\w=:\"-]+;)*base64,/;\n                        var match = location.match(supportedEncodingRegexp);\n                        if (match) {\n                            var sourceMapStart = match[0].length;\n                            var encodedSource = location.substr(sourceMapStart);\n                            var source = this._atob(encodedSource);\n                            this.sourceCache[location] = source;\n                            resolve(source);\n                        } else {\n                            reject(new Error('The encoding of the inline sourcemap is not supported'));\n                        }\n                    } else {\n                        var xhrPromise = this.ajax(location, {method: 'get'});\n                        // Cache the Promise to prevent duplicate in-flight requests\n                        this.sourceCache[location] = xhrPromise;\n                        xhrPromise.then(resolve, reject);\n                    }\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param {StackFrame} stackframe object\n         * @returns {Promise} that resolves with with source-mapped StackFrame\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return new Promise(function(resolve, reject) {\n                this.getMappedLocation(stackframe).then(function(mappedStackFrame) {\n                    function resolveMappedStackFrame() {\n                        resolve(mappedStackFrame);\n                    }\n\n                    this.findFunctionName(mappedStackFrame)\n                        .then(resolve, resolveMappedStackFrame)\n                        ['catch'](resolveMappedStackFrame);\n                }.bind(this), reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var lineNumber = stackframe.lineNumber;\n                    var columnNumber = stackframe.columnNumber;\n                    var guessedFunctionName = _findFunctionName(source, lineNumber, columnNumber);\n                    // Only replace functionName if we found something\n                    if (guessedFunctionName) {\n                        resolve(new StackFrame(guessedFunctionName,\n                            stackframe.args,\n                            stackframe.fileName,\n                            lineNumber,\n                            columnNumber));\n                    } else {\n                        resolve(stackframe);\n                    }\n                }, reject)['catch'](reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                var sourceCache = this.sourceCache;\n                var fileName = stackframe.fileName;\n                this._get(fileName).then(function(source) {\n                    var sourceMappingURL = _findSourceMappingURL(source);\n                    var isDataUrl = sourceMappingURL.substr(0, 5) === 'data:';\n                    var base = fileName.substring(0, fileName.lastIndexOf('/') + 1);\n\n                    if (sourceMappingURL[0] !== '/' && !isDataUrl && !(/^https?:\\/\\/|^\\/\\//i).test(sourceMappingURL)) {\n                        sourceMappingURL = base + sourceMappingURL;\n                    }\n\n                    this._get(sourceMappingURL).then(function(sourceMap) {\n                        if (typeof sourceMap === 'string') {\n                            sourceMap = _parseJson(sourceMap.replace(/^\\)\\]\\}'/, ''));\n                        }\n                        if (typeof sourceMap.sourceRoot === 'undefined') {\n                            sourceMap.sourceRoot = base;\n                        }\n\n                        _extractLocationInfoFromSourceMap(stackframe, sourceMap, sourceCache)\n                            .then(resolve)['catch'](function() {\n                            resolve(stackframe);\n                        });\n                    }, reject)['catch'](reject);\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace', ['error-stack-parser', 'stack-generator', 'stacktrace-gps'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'));\n    } else {\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS);\n    }\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS) {\n    var _options = {\n        filter: function(stackframe) {\n            // Filter out stackframes for this library by default\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\n        },\n        sourceCache: {}\n    };\n\n    var _generateError = function StackTrace$$GenerateError() {\n        try {\n            // Error must be thrown to get stack in IE\n            throw new Error();\n        } catch (err) {\n            return err;\n        }\n    };\n\n    /**\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\n     * Does not do deep merges.\n     *\n     * @param {Object} first base object\n     * @param {Object} second overrides\n     * @returns {Object} merged first and second\n     * @private\n     */\n    function _merge(first, second) {\n        var target = {};\n\n        [first, second].forEach(function(obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    target[prop] = obj[prop];\n                }\n            }\n            return target;\n        });\n\n        return target;\n    }\n\n    function _isShapedLikeParsableError(err) {\n        return err.stack || err['opera#sourceloc'];\n    }\n\n    function _filtered(stackframes, filter) {\n        if (typeof filter === 'function') {\n            return stackframes.filter(filter);\n        }\n        return stackframes;\n    }\n\n    return {\n        /**\n         * Get a backtrace from invocation point.\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        get: function StackTrace$$get(opts) {\n            var err = _generateError();\n            return _isShapedLikeParsableError(err) ? this.fromError(err, opts) : this.generateArtificially(opts);\n        },\n\n        /**\n         * Get a backtrace from invocation point.\n         * IMPORTANT: Does not handle source maps or guess function names!\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        getSync: function StackTrace$$getSync(opts) {\n            opts = _merge(_options, opts);\n            var err = _generateError();\n            var stack = _isShapedLikeParsableError(err) ? ErrorStackParser.parse(err) : StackGenerator.backtrace(opts);\n            return _filtered(stack, opts.filter);\n        },\n\n        /**\n         * Given an error object, parse it.\n         *\n         * @param {Error} error object\n         * @param {Object} opts\n         * @returns {Promise} for Array[StackFrame}\n         */\n        fromError: function StackTrace$$fromError(error, opts) {\n            opts = _merge(_options, opts);\n            var gps = new StackTraceGPS(opts);\n            return new Promise(function(resolve) {\n                var stackframes = _filtered(ErrorStackParser.parse(error), opts.filter);\n                resolve(Promise.all(stackframes.map(function(sf) {\n                    return new Promise(function(resolve) {\n                        function resolveOriginal() {\n                            resolve(sf);\n                        }\n\n                        gps.pinpoint(sf).then(resolve, resolveOriginal)['catch'](resolveOriginal);\n                    });\n                })));\n            }.bind(this));\n        },\n\n        /**\n         * Use StackGenerator to generate a backtrace.\n         *\n         * @param {Object} opts\n         * @returns {Promise} of Array[StackFrame]\n         */\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\n            opts = _merge(_options, opts);\n            var stackFrames = StackGenerator.backtrace(opts);\n            if (typeof opts.filter === 'function') {\n                stackFrames = stackFrames.filter(opts.filter);\n            }\n            return Promise.resolve(stackFrames);\n        },\n\n        /**\n         * Given a function, wrap it such that invocations trigger a callback that\n         * is called with a stack trace.\n         *\n         * @param {Function} fn to be instrumented\n         * @param {Function} callback function to call with a stack trace on invocation\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\n         * @param {Object} thisArg optional context object (e.g. window)\n         */\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                // Already instrumented, return given Function\n                return fn;\n            }\n\n            var instrumented = function StackTrace$$instrumented() {\n                try {\n                    this.get().then(callback, errback)['catch'](errback);\n                    return fn.apply(thisArg || this, arguments);\n                } catch (e) {\n                    if (_isShapedLikeParsableError(e)) {\n                        this.fromError(e).then(callback, errback)['catch'](errback);\n                    }\n                    throw e;\n                }\n            }.bind(this);\n            instrumented.__stacktraceOriginalFn = fn;\n\n            return instrumented;\n        },\n\n        /**\n         * Given a function that has been instrumented,\n         * revert the function to it's original (non-instrumented) state.\n         *\n         * @param {Function} fn to de-instrument\n         */\n        deinstrument: function StackTrace$$deinstrument(fn) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot de-instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                return fn.__stacktraceOriginalFn;\n            } else {\n                // Function not instrumented, return original\n                return fn;\n            }\n        },\n\n        /**\n         * Given an error message and Array of StackFrames, serialize and POST to given URL.\n         *\n         * @param {Array} stackframes\n         * @param {String} url\n         * @param {String} errorMsg\n         */\n        report: function StackTrace$$report(stackframes, url, errorMsg) {\n            return new Promise(function(resolve, reject) {\n                var req = new XMLHttpRequest();\n                req.onerror = reject;\n                req.onreadystatechange = function onreadystatechange() {\n                    if (req.readyState === 4) {\n                        if (req.status >= 200 && req.status < 400) {\n                            resolve(req.responseText);\n                        } else {\n                            reject(new Error('POST to ' + url + ' failed with status: ' + req.status));\n                        }\n                    }\n                };\n                req.open('post', url);\n                req.setRequestHeader('Content-Type', 'application/json');\n\n                var reportPayload = {stack: stackframes};\n                if (errorMsg !== undefined) {\n                    reportPayload.message = errorMsg;\n                }\n\n                req.send(JSON.stringify(reportPayload));\n            });\n        }\n    };\n}));\n","import * as ST from \"stacktrace-js\";\nimport {CategoryLogMessage} from \"../log/category/AbstractCategoryLogger\";\nimport {DateFormat, DateFormatEnum, LogLevel} from \"../log/LoggerOptions\";\nimport {LogMessage} from \"../log/standard/AbstractLogger\";\nimport {Category} from \"../log/category/Category\";\n\n/**\n * Some utilities to format messages.\n */\nexport class MessageFormatUtils {\n\n  /**\n   * Render given date in given DateFormat and return as String.\n   * @param date Date\n   * @param dateFormat Format\n   * @returns {string} Formatted date\n   */\n  public static renderDate(date: Date, dateFormat: DateFormat): string {\n    const lpad = (value: string, chars: number, padWith: string): string => {\n      const howMany = chars - value.length;\n      if (howMany > 0) {\n        let res: string = \"\";\n        for (let i = 0; i < howMany; i++) {\n          res += padWith;\n        }\n        res += value;\n        return res;\n      }\n      return value;\n    };\n\n    const fullYear = (d: Date): string => {\n      return lpad(d.getFullYear().toString(), 4, \"0\");\n    };\n\n    const month = (d: Date): string => {\n      return lpad((d.getMonth() + 1).toString(), 2, \"0\");\n    };\n\n    const day = (d: Date): string => {\n      return lpad(d.getDate().toString(), 2, \"0\");\n    };\n\n    const hours = (d: Date): string => {\n      return lpad(d.getHours().toString(), 2, \"0\");\n    };\n\n    const minutes = (d: Date): string => {\n      return lpad(d.getMinutes().toString(), 2, \"0\");\n    };\n\n    const seconds = (d: Date): string => {\n      return lpad(d.getSeconds().toString(), 2, \"0\");\n    };\n\n    const millis = (d: Date): string => {\n      return lpad(d.getMilliseconds().toString(), 3, \"0\");\n    };\n\n    const dateSeparator = dateFormat.dateSeparator;\n    let ds: string = \"\";\n    switch (dateFormat.formatEnum) {\n      case DateFormatEnum.Default:\n        // yyyy-mm-dd hh:mm:ss,m\n        ds = fullYear(date) + dateSeparator + month(date) + dateSeparator + day(date) + \" \" +\n          hours(date) + \":\" + minutes(date) + \":\" + seconds(date) + \",\" + millis(date);\n        break;\n      case DateFormatEnum.YearMonthDayTime:\n        ds = fullYear(date) + dateSeparator + month(date) + dateSeparator + day(date) + \" \" +\n          hours(date) + \":\" + minutes(date) + \":\" + seconds(date);\n        break;\n      case DateFormatEnum.YearDayMonthWithFullTime:\n        ds = fullYear(date) + dateSeparator + day(date) + dateSeparator + month(date) + \" \" +\n          hours(date) + \":\" + minutes(date) + \":\" + seconds(date) + \",\" + millis(date);\n        break;\n      case DateFormatEnum.YearDayMonthTime:\n        ds = fullYear(date) + dateSeparator + day(date) + dateSeparator + month(date) + \" \" +\n          hours(date) + \":\" + minutes(date) + \":\" + seconds(date);\n        break;\n      default:\n        throw new Error(\"Unsupported date format enum: \" + dateFormat.formatEnum);\n    }\n    return ds;\n  }\n\n  /**\n   * Renders given category log message in default format.\n   * @param msg Message to format\n   * @param addStack If true adds the stack to the output, otherwise skips it\n   * @returns {string} Formatted message\n   */\n  public static renderDefaultMessage(msg: CategoryLogMessage, addStack: boolean): string {\n    let result: string = \"\";\n\n    const logFormat = msg.logFormat;\n    if (logFormat.showTimeStamp) {\n      result += MessageFormatUtils.renderDate(msg.date, logFormat.dateFormat) + \" \";\n    }\n\n    result += LogLevel[msg.level].toUpperCase();\n    if (msg.isResolvedErrorMessage) {\n      result += \" (resolved)\";\n    }\n    result += \" \";\n\n    if (logFormat.showCategoryName) {\n      result += \"[\";\n      msg.categories.forEach((value: Category, idx: number) => {\n        if (idx > 0) {\n          result += \", \";\n        }\n        result += value.name;\n      });\n      result += \"]\";\n    }\n\n    // Get the normal string message first\n    let actualStringMsg: string = \"\";\n    let dataString: string = \"\";\n\n    const messageOrLogData = msg.message;\n\n    if (typeof messageOrLogData === \"string\") {\n      actualStringMsg = messageOrLogData;\n    }\n    else {\n      const logData = messageOrLogData;\n      actualStringMsg = logData.msg;\n\n      // We do have data?\n      if (logData.data) {\n        dataString = \" [data]: \" + (logData.ds ? logData.ds(logData.data) : JSON.stringify(logData.data));\n      }\n    }\n\n    result += \" \" + actualStringMsg + \"\" + dataString;\n    if (addStack && msg.errorAsStack !== null) {\n      result += \"\\n\" + msg.errorAsStack;\n    }\n\n    return result;\n  }\n\n  /**\n   * Renders given log4j log message in default format.\n   * @param msg Message to format\n   * @param addStack If true adds the stack to the output, otherwise skips it\n   * @returns {string} Formatted message\n   */\n  public static renderDefaultLog4jMessage(msg: LogMessage, addStack: boolean): string {\n    const format = msg.logGroupRule.logFormat;\n    let result = \"\";\n    if (format.showTimeStamp) {\n      result += MessageFormatUtils.renderDate(msg.date, format.dateFormat) + \" \";\n    }\n\n    result += LogLevel[msg.level].toUpperCase() + \" \";\n    if (format.showLoggerName) {\n      result += \"[\" + msg.loggerName + \"]\";\n    }\n\n    // Get the normal string message first\n    let actualStringMsg: string = \"\";\n    let dataString: string = \"\";\n\n    if (typeof msg.message === \"string\") {\n      actualStringMsg = msg.message;\n    }\n    else {\n      const logData = msg.message;\n      actualStringMsg = logData.msg;\n\n      // We do have data?\n      if (logData.data) {\n        dataString = \" [data]: \" + (logData.ds ? logData.ds(logData.data) : JSON.stringify(logData.data));\n      }\n    }\n\n    result += \" \" + actualStringMsg + \"\" + dataString;\n    if (addStack && msg.errorAsStack !== null) {\n      result += \"\\n\" + msg.errorAsStack;\n    }\n    return result;\n  }\n\n  /**\n   * Render error as stack\n   * @param error Return error as Promise\n   * @returns {Promise<string>|Promise} Promise for stack\n   */\n  public static renderError(error: Error): Promise<string> {\n    let result = error.name + \": \" + error.message + \"\\n@\";\n    return new Promise<string>((resolve: any) => {\n\n      // This one has a promise too\n      ST.fromError(error, {offline: true}).then((frames: ST.StackFrame[]) => {\n        const stackStr = (frames.map((frame: ST.StackFrame) => {\n          return frame.toString();\n        }) ).join(\"\\n  \");\n\n        result += \"\\n\" + stackStr;\n\n        // This resolves our returned promise\n        resolve(result);\n      }).catch(() => {\n        result = \"Unexpected error object was passed in. \";\n        try {\n          result += \"Could not resolve it, stringified object: \" + JSON.stringify(error);\n        }\n        catch (e) {\n          // Cannot stringify can only tell something was wrong.\n          result += \"Could not resolve it or stringify it.\";\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n","import {LogLevel} from \"../LoggerOptions\";\nimport {ErrorType, Logger, MessageType} from \"./Logger\";\nimport {LinkedList} from \"../../utils/DataStructures\";\nimport {MessageFormatUtils} from \"../../utils/MessageUtils\";\nimport {LogData} from \"../LogData\";\nimport {LogGroupRule} from \"./LogGroupRule\";\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\n\n/**\n * Log message, providing all data for a single message.\n */\nexport interface LogMessage {\n\n  /**\n   * Name of the logger.\n   */\n  readonly loggerName: string;\n\n  /**\n   * Original, unformatted message or LogData.\n   */\n  readonly message: string | LogData;\n\n  /**\n   * Returns the resolved stack (based on error).\n   * Available only when error is present, null otherwise.\n   */\n  readonly errorAsStack: string | null;\n\n  /**\n   * Error when present, or null.\n   */\n  readonly error: Error | null;\n\n  /**\n   * Which LogGroupRule matched for this message.\n   */\n  readonly logGroupRule: LogGroupRule;\n\n  /**\n   * Time for message.\n   */\n  readonly date: Date;\n\n  /**\n   * LogLevel used\n   */\n  readonly level: LogLevel;\n\n  /**\n   * True if message represents LogData (false for a string message).\n   */\n  readonly isMessageLogData: boolean;\n\n  /**\n   * Always retrieves the message, from either the string directly\n   * or in case of LogData from LogData itself.\n   */\n  readonly messageAsString: string;\n\n  /**\n   * If present returns LogData, otherwise null.\n   */\n  readonly logData: LogData | null;\n}\n\ninterface LogMessageInternal extends LogMessage {\n\n  /**\n   * True if the message is done (ready), if false\n   * we wait for a promise.\n   */\n  ready: boolean;\n}\n\nclass LogMessageInternalImpl implements LogMessageInternal {\n\n  private _loggerName: string;\n  private _message: string | LogData;\n  private _errorAsStack: string | null = null;\n  private _error: Error | null = null;\n  private _logGroupRule: LogGroupRule;\n  private _date: Date;\n  private _level: LogLevel;\n  private _ready: boolean;\n\n  constructor(loggerName: string, message: string | LogData, errorAsStack: string | null, error: Error | null, logGroupRule: LogGroupRule, date: Date, level: LogLevel, ready: boolean) {\n    this._loggerName = loggerName;\n    this._message = message;\n    this._errorAsStack = errorAsStack;\n    this._error = error;\n    this._logGroupRule = logGroupRule;\n    this._date = date;\n    this._level = level;\n    this._ready = ready;\n  }\n\n  get loggerName(): string {\n    return this._loggerName;\n  }\n\n  get message(): string | LogData {\n    return this._message;\n  }\n\n  set message(value: string | LogData) {\n    this._message = value;\n  }\n\n  get errorAsStack(): string | any {\n    return this._errorAsStack;\n  }\n\n  set errorAsStack(value: string | any) {\n    this._errorAsStack = value;\n  }\n\n  get error(): Error | any {\n    return this._error;\n  }\n\n  set error(value: Error | any) {\n    this._error = value;\n  }\n\n  get logGroupRule(): LogGroupRule {\n    return this._logGroupRule;\n  }\n\n  set logGroupRule(value: LogGroupRule) {\n    this._logGroupRule = value;\n  }\n\n  get date(): Date {\n    return this._date;\n  }\n\n  set date(value: Date) {\n    this._date = value;\n  }\n\n  get level(): LogLevel {\n    return this._level;\n  }\n\n  set level(value: LogLevel) {\n    this._level = value;\n  }\n\n  get isMessageLogData(): boolean {\n    return typeof(this._message) !== \"string\";\n  }\n\n  get ready(): boolean {\n    return this._ready;\n  }\n\n  set ready(value: boolean) {\n    this._ready = value;\n  }\n\n  get messageAsString(): string {\n    if (typeof(this._message) === \"string\") {\n      return this._message;\n    }\n    return this._message.msg;\n  }\n\n  get logData(): LogData | null {\n    let result: LogData | null = null;\n    if (typeof(this._message) !== \"string\") {\n      result = this.message as LogData;\n    }\n    return result;\n  }\n}\n\n/**\n * Abstract base logger, extend to easily implement a custom logger that\n * logs wherever you want. You only need to implement doLog(msg: LogMessage) and\n * log that somewhere (it will contain format and everything else).\n */\nexport abstract class AbstractLogger implements Logger {\n\n  private _logGroupRuntimeSettings: LogGroupRuntimeSettings;\n  private _allMessages: LinkedList<LogMessageInternal> = new LinkedList<LogMessageInternal>();\n\n  protected _name: string;\n  protected _open: boolean = true;\n\n  constructor(name: string, logGroupRuntimeSettings: LogGroupRuntimeSettings) {\n    this._name = name;\n    this._logGroupRuntimeSettings = logGroupRuntimeSettings;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  public trace(msg: MessageType, error: ErrorType = null): void {\n    this._log(LogLevel.Trace, msg, error);\n  }\n\n  public debug(msg: MessageType, error: ErrorType = null): void {\n    this._log(LogLevel.Debug, msg, error);\n  }\n\n  public info(msg: MessageType, error: ErrorType = null): void {\n    this._log(LogLevel.Info, msg, error);\n  }\n\n  public warn(msg: MessageType, error: ErrorType = null): void {\n    this._log(LogLevel.Warn, msg, error);\n  }\n\n  public error(msg: MessageType, error: ErrorType = null): void {\n    this._log(LogLevel.Error, msg, error);\n  }\n\n  public fatal(msg: MessageType, error: ErrorType = null): void {\n    this._log(LogLevel.Fatal, msg, error);\n  }\n\n  public isTraceEnabled(): boolean {\n    return this._logGroupRuntimeSettings.level === LogLevel.Trace;\n  }\n\n  public isDebugEnabled(): boolean {\n    return this._logGroupRuntimeSettings.level <= LogLevel.Debug;\n  }\n\n  public isInfoEnabled(): boolean {\n    return this._logGroupRuntimeSettings.level <= LogLevel.Info;\n  }\n\n  public isWarnEnabled(): boolean {\n    return this._logGroupRuntimeSettings.level <= LogLevel.Warn;\n  }\n\n  public isErrorEnabled(): boolean {\n    return this._logGroupRuntimeSettings.level <= LogLevel.Error;\n  }\n\n  public isFatalEnabled(): boolean {\n    return this._logGroupRuntimeSettings.level <= LogLevel.Fatal;\n  }\n\n  public getLogLevel(): LogLevel {\n    return this._logGroupRuntimeSettings.level;\n  }\n\n  public isOpen(): boolean {\n    return this._open;\n  }\n\n  public close(): void {\n    this._open = false;\n    this._allMessages.clear();\n  }\n\n  protected createDefaultLogMessage(msg: LogMessage): string {\n    return MessageFormatUtils.renderDefaultLog4jMessage(msg, true);\n  }\n\n  /**\n   * Return optional message formatter. All LoggerTypes (except custom) will see if\n   * they have this, and if so use it to log.\n   * @returns {((message:LogMessage)=>string)|null}\n   */\n  protected _getMessageFormatter(): ((message: LogMessage) => string) | null {\n    return this._logGroupRuntimeSettings.formatterLogMessage;\n  }\n\n  protected abstract doLog(msg: LogMessage): void;\n\n  private _log(level: LogLevel, msg: MessageType, error: ErrorType = null): void {\n    if (this._open && this._logGroupRuntimeSettings.level <= level) {\n      const functionMessage = (): string | LogData => {\n        if (typeof msg === \"function\") {\n          return msg();\n        }\n        return msg;\n      };\n      const functionError = (): Error | null => {\n        if (typeof error === \"function\") {\n          return error();\n        }\n        return error;\n      };\n      this._allMessages.addTail(this.createMessage(level, functionMessage, functionError, new Date()));\n      this.processMessages();\n    }\n  }\n\n  private createMessage(level: LogLevel, msg: () => string | LogData, error: () => Error | null, date: Date): LogMessageInternal {\n    const errorResult = error();\n    if (errorResult !== null) {\n      const message = new LogMessageInternalImpl(this._name, msg(), null, errorResult, this._logGroupRuntimeSettings.logGroupRule, date, level, false);\n      MessageFormatUtils.renderError(errorResult).then((stack: string) => {\n        message.errorAsStack = stack;\n        message.ready = true;\n        this.processMessages();\n      }).catch(() => {\n        message.errorAsStack = \"<UNKNOWN> unable to get stack.\";\n        message.ready = true;\n        this.processMessages();\n      });\n      return message;\n    }\n    return new LogMessageInternalImpl(this._name, msg(), null, errorResult, this._logGroupRuntimeSettings.logGroupRule, date, level, true);\n  }\n\n  private processMessages(): void {\n    // Basically we wait until errors are resolved (those messages\n    // may not be ready).\n    const msgs = this._allMessages;\n    if (msgs.getSize() > 0) {\n      do {\n        const msg = msgs.getHead();\n        if (msg != null) {\n          if (!msg.ready) {\n            break;\n          }\n          msgs.removeHead();\n          // This can never be null normally, but strict null checking ...\n          if (msg.message !== null) {\n            this.doLog(msg);\n          }\n        }\n      }\n      while (msgs.getSize() > 0);\n    }\n  }\n}\n","import {AbstractLogger, LogMessage} from \"./AbstractLogger\";\nimport {LogLevel} from \"../LoggerOptions\";\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\n\n/**\n * Simple logger, that logs to the console. If the console is unavailable will throw exception.\n */\nexport class ConsoleLoggerImpl extends AbstractLogger {\n\n  constructor(name: string, logGroupRuntimeSettings: LogGroupRuntimeSettings) {\n    super(name, logGroupRuntimeSettings);\n  }\n\n  protected doLog(message: LogMessage): void {\n    if (console !== undefined) {\n      let logged = false;\n      const logLevel = message.level;\n\n      const messageFormatter = this._getMessageFormatter();\n      let msg: string;\n      if (messageFormatter === null) {\n        msg = this.createDefaultLogMessage(message);\n      }\n      else {\n        msg = messageFormatter(message);\n      }\n\n      /* tslint:disable:no-console */\n      switch (logLevel) {\n        case LogLevel.Trace:\n          // Do not try trace we don't want a stack\n          break;\n        case LogLevel.Debug:\n          // Don't try, too much differences of consoles.\n          break;\n        case LogLevel.Info:\n          if (console.info) {\n            console.info(msg);\n            logged = true;\n          }\n          break;\n        case LogLevel.Warn:\n          if (console.warn) {\n            console.warn(msg);\n            logged = true;\n          }\n          break;\n        case LogLevel.Error:\n        case LogLevel.Fatal:\n          if (console.error) {\n            console.error(msg);\n            logged = true;\n          }\n          break;\n        default:\n          throw new Error(\"Log level not supported: \" + logLevel);\n      }\n      if (!logged) {\n        console.log(msg);\n      }\n      /* tslint:enable:no-console */\n    }\n    else {\n      throw new Error(\"Console is not defined, cannot log msg: \" + message.message);\n    }\n  }\n}\n","import {AbstractLogger, LogMessage} from \"./AbstractLogger\";\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\n\n/**\n * Logger which buffers all messages, use with care due to possible high memory footprint.\n * Can be convenient in some cases. Call toString() for full output, or cast to this class\n * and call getMessages() to do something with it yourself.\n */\nexport class MessageBufferLoggerImpl extends AbstractLogger {\n\n  private messages: string[] = [];\n\n  constructor(name: string, logGroupRuntimeSettings: LogGroupRuntimeSettings) {\n    super(name, logGroupRuntimeSettings);\n  }\n\n  public close(): void {\n    this.messages = [];\n    super.close();\n  }\n\n  public getMessages(): string[] {\n    return this.messages;\n  }\n\n  public toString(): string {\n    return this.messages.map((msg) => {\n      return msg;\n    }).join(\"\\n\");\n  }\n\n  protected doLog(message: LogMessage): void {\n    const messageFormatter = this._getMessageFormatter();\n    let fullMsg: string;\n    if (messageFormatter === null) {\n      fullMsg = this.createDefaultLogMessage(message);\n    }\n    else {\n      fullMsg = messageFormatter(message);\n    }\n    this.messages.push(fullMsg);\n  }\n}\n","import {Logger} from \"./Logger\";\nimport {LogGroupRule} from \"./LogGroupRule\";\nimport {DateFormat, LogFormat, LoggerType, LogLevel} from \"../LoggerOptions\";\nimport {LogMessage} from \"./AbstractLogger\";\n\n/**\n * Represents the runtime settings for a LogGroup (LogGroupRule).\n */\nexport class LogGroupRuntimeSettings {\n\n  // Store the original\n  private _logGroupRule: LogGroupRule;\n\n  // Store current runtime\n  private _level: LogLevel;\n  private _loggerType: LoggerType;\n  private _logFormat: LogFormat;\n  private _callBackLogger: ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null;\n  private _formatterLogMessage: ((message: LogMessage) => string) | null = null;\n\n  constructor(logGroupRule: LogGroupRule) {\n    this._logGroupRule = logGroupRule;\n    this._level = logGroupRule.level;\n    this._loggerType = logGroupRule.loggerType;\n    this._logFormat = new LogFormat(new DateFormat(logGroupRule.logFormat.dateFormat.formatEnum, logGroupRule.logFormat.dateFormat.dateSeparator),\n      logGroupRule.logFormat.showTimeStamp, logGroupRule.logFormat.showLoggerName);\n    this._callBackLogger = logGroupRule.callBackLogger;\n    this._formatterLogMessage = logGroupRule.formatterLogMessage;\n  }\n\n  /**\n   * Returns original LogGroupRule (so not runtime settings!)\n   * @return {LogGroupRule}\n   */\n  get logGroupRule(): LogGroupRule {\n    return this._logGroupRule;\n  }\n\n  get level(): LogLevel {\n    return this._level;\n  }\n\n  set level(value: LogLevel) {\n    this._level = value;\n  }\n\n  get loggerType(): LoggerType {\n    return this._loggerType;\n  }\n\n  set loggerType(value: LoggerType) {\n    this._loggerType = value;\n  }\n\n  get logFormat(): LogFormat {\n    return this._logFormat;\n  }\n\n  set logFormat(value: LogFormat) {\n    this._logFormat = value;\n  }\n\n  get callBackLogger(): ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null {\n    return this._callBackLogger;\n  }\n\n  set callBackLogger(value: ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null) {\n    this._callBackLogger = value;\n  }\n\n  get formatterLogMessage(): ((message: LogMessage) => string) | null {\n    return this._formatterLogMessage;\n  }\n\n  set formatterLogMessage(value: ((message: LogMessage) => string) | null) {\n    this._formatterLogMessage = value;\n  }\n}\n","import {SimpleMap} from \"../../utils/DataStructures\";\nimport {LoggerType} from \"../LoggerOptions\";\nimport {Logger} from \"./Logger\";\nimport {LoggerFactory} from \"./LoggerFactory\";\nimport {LoggerFactoryRuntimeSettings} from \"./LoggerFactoryRuntimeSettings\";\nimport {ConsoleLoggerImpl} from \"./ConsoleLoggerImpl\";\nimport {MessageBufferLoggerImpl} from \"./MessageBufferLoggerImpl\";\nimport {AbstractLogger} from \"./AbstractLogger\";\nimport {LoggerFactoryOptions} from \"./LoggerFactoryOptions\";\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\n\nexport class LoggerFactoryImpl implements LoggerFactory, LoggerFactoryRuntimeSettings {\n\n  private _name: string;\n  private _options: LoggerFactoryOptions;\n  private _loggers: SimpleMap<Logger> = new SimpleMap<Logger>();\n\n  private _logGroupRuntimeSettingsIndexed: LogGroupRuntimeSettings[] = [];\n  private _loggerToLogGroupSettings: SimpleMap<LogGroupRuntimeSettings> = new SimpleMap<LogGroupRuntimeSettings>();\n\n  constructor(name: string, options: LoggerFactoryOptions) {\n    this._name = name;\n    this.configure(options);\n  }\n\n  public configure(options: LoggerFactoryOptions): void {\n    this._options = options;\n\n    // Close any current open loggers.\n    this.closeLoggers();\n    this._loggerToLogGroupSettings.clear();\n    this._logGroupRuntimeSettingsIndexed = [];\n\n    const logGroupRules = this._options.logGroupRules;\n    /* tslint:disable:prefer-for-of */\n    for (let i = 0; i < logGroupRules.length; i++) {\n      this._logGroupRuntimeSettingsIndexed.push(new LogGroupRuntimeSettings(logGroupRules[i]));\n    }\n    /* tslint:enable:prefer-for-of */\n  }\n\n  public getLogger(named: string): Logger {\n    if (!this._options.enabled) {\n      throw new Error(\"LoggerFactory is not enabled, please check your options passed in\");\n    }\n\n    let logger = this._loggers.get(named);\n    if (typeof logger !== \"undefined\") {\n      return logger;\n    }\n\n    // Initialize logger with appropriate level\n    logger = this.loadLogger(named);\n    this._loggers.put(named, logger);\n    return logger;\n  }\n\n  public isEnabled(): boolean {\n    return this._options.enabled;\n  }\n\n  public closeLoggers(): void {\n    this._loggers.forEachValue((logger) => {\n      // We can only close if AbstractLogger is used (our loggers, but user loggers may not extend it, even though unlikely).\n      if (logger instanceof AbstractLogger) {\n        logger.close();\n      }\n    });\n    this._loggers.clear();\n  }\n\n  public getName(): string {\n    return this._name;\n  }\n\n  public getLogGroupRuntimeSettingsByIndex(idx: number): LogGroupRuntimeSettings | null {\n    if (idx >= 0 && idx < this._logGroupRuntimeSettingsIndexed.length) {\n      return this._logGroupRuntimeSettingsIndexed[idx];\n    }\n    return null;\n  }\n\n  public getLogGroupRuntimeSettingsByLoggerName(nameLogger: string): LogGroupRuntimeSettings | null {\n    const result = this._loggerToLogGroupSettings.get(nameLogger);\n    if (typeof result === \"undefined\") {\n      return null;\n    }\n    return result;\n  }\n\n  public getLogGroupRuntimeSettings(): LogGroupRuntimeSettings[] {\n    return this._logGroupRuntimeSettingsIndexed.slice(0);\n  }\n\n  private loadLogger(named: string): Logger {\n    const logGroupRules = this._options.logGroupRules;\n\n    for (let i = 0; i < logGroupRules.length; i++) {\n      const logGroupRule = logGroupRules[i];\n      if (logGroupRule.regExp.test(named)) {\n        const logGroupRuntimeSettings = this._logGroupRuntimeSettingsIndexed[i];\n\n        let logger: Logger;\n        switch (logGroupRule.loggerType) {\n          case LoggerType.Console:\n            logger = new ConsoleLoggerImpl(named, logGroupRuntimeSettings);\n            break;\n          case LoggerType.MessageBuffer:\n            logger = new MessageBufferLoggerImpl(named, logGroupRuntimeSettings);\n            break;\n          case LoggerType.Custom:\n            if (logGroupRule.callBackLogger != null) {\n              logger = logGroupRule.callBackLogger(named, logGroupRuntimeSettings);\n            }\n            else {\n              throw new Error(\"Cannot create a custom logger, custom callback is null\");\n            }\n            break;\n          default:\n            throw new Error(\"Cannot create a Logger for LoggerType: \" + logGroupRule.loggerType);\n        }\n\n        // For a new logger map it by its name\n        this._loggerToLogGroupSettings.put(named, logGroupRuntimeSettings);\n        return logger;\n      }\n    }\n    throw new Error(\"Failed to find a match to create a Logger for: \" + named);\n  }\n\n}\n","import {LinkedList} from \"../../utils/DataStructures\";\nimport {MessageFormatUtils} from \"../../utils/MessageUtils\";\nimport {LogData} from \"../LogData\";\nimport {CategoryLogFormat, LogLevel} from \"../LoggerOptions\";\nimport {ErrorType, MessageType} from \"../standard/Logger\";\nimport {CategoryLogger} from \"./CategoryLogger\";\nimport {Category} from \"./Category\";\nimport {RuntimeSettings} from \"./RuntimeSettings\";\n\n/**\n * Contains information about a single log message.\n */\nexport interface CategoryLogMessage {\n\n  readonly message: string | LogData;\n\n  /**\n   * Returns the resolved stack (based on error).\n   * Available only when error is present.\n   */\n  readonly errorAsStack: string | null;\n\n  readonly error: Error | null;\n\n  readonly categories: Category[];\n\n  readonly date: Date;\n\n  readonly level: LogLevel;\n\n  readonly logFormat: CategoryLogFormat;\n\n  readonly isResolvedErrorMessage: boolean;\n\n  /**\n   * True if message represents LogData (false for a string message).\n   */\n  readonly isMessageLogData: boolean;\n\n  /**\n   * Always retrieves the message, from either the string directly\n   * or in case of LogData from LogData itself.\n   */\n  readonly messageAsString: string;\n\n  /**\n   * If present returns LogData, otherwise null.\n   */\n  readonly logData: LogData | null;\n}\n\nclass CategoryLogMessageImpl implements CategoryLogMessage {\n\n  private _message: string | LogData;\n  private _error: Error | null;\n  private _categories: Category[];\n  private _date: Date;\n  private _level: LogLevel;\n  private _logFormat: CategoryLogFormat;\n  private _ready: boolean;\n\n  private _resolvedErrorMessage: boolean = false;\n  private _errorAsStack: string | null = null;\n\n  constructor(message: string | LogData, error: Error | null, categories: Category[], date: Date, level: LogLevel, logFormat: CategoryLogFormat, ready: boolean) {\n    this._message = message;\n    this._error = error;\n    this._categories = categories;\n    this._date = date;\n    this._level = level;\n    this._logFormat = logFormat;\n    this._ready = ready;\n  }\n\n  get message(): string | LogData {\n    return this._message;\n  }\n\n  get error(): Error | null {\n    return this._error;\n  }\n\n  get categories(): Category[] {\n    return this._categories;\n  }\n\n  get date(): Date {\n    return this._date;\n  }\n\n  get level(): LogLevel {\n    return this._level;\n  }\n\n  get logFormat(): CategoryLogFormat {\n    return this._logFormat;\n  }\n\n  get isMessageLogData(): boolean {\n    return typeof(this._message) !== \"string\";\n  }\n\n  get messageAsString(): string {\n    if (typeof(this._message) === \"string\") {\n      return this._message;\n    }\n    return this._message.msg;\n  }\n\n  get logData(): LogData | null {\n    let result: LogData | null = null;\n    if (typeof(this._message) !== \"string\") {\n      result = this.message as LogData;\n    }\n    return result;\n  }\n\n  get isResolvedErrorMessage(): boolean {\n    return this._resolvedErrorMessage;\n  }\n\n  get errorAsStack(): string | null {\n    return this._errorAsStack;\n  }\n\n  set errorAsStack(stack: string | null) {\n    this._errorAsStack = stack;\n  }\n\n  public isReady(): boolean {\n    return this._ready;\n  }\n\n  public setReady(value: boolean): void {\n    this._ready = value;\n  }\n\n  get resolvedErrorMessage(): boolean {\n    return this._resolvedErrorMessage;\n  }\n\n  set resolvedErrorMessage(value: boolean) {\n    this._resolvedErrorMessage = value;\n  }\n\n}\n\n/**\n * Abstract category logger, use as your base class for new type of loggers (it\n * saves you a lot of work) and override doLog(CategoryLogMessage). The message argument\n * provides full access to anything related to the logging event.\n * If you just want the standard line of logging, call: this.createDefaultLogMessage(msg) on\n * this class which will return you the formatted log message as string (e.g. the\n * default loggers all use this).\n */\nexport abstract class AbstractCategoryLogger implements CategoryLogger {\n\n  private rootCategory: Category;\n  private runtimeSettings: RuntimeSettings;\n\n  private allMessages: LinkedList<CategoryLogMessageImpl> = new LinkedList<CategoryLogMessageImpl>();\n\n  constructor(rootCategory: Category, runtimeSettings: RuntimeSettings) {\n    this.rootCategory = rootCategory;\n    this.runtimeSettings = runtimeSettings;\n  }\n\n  public trace(msg: MessageType, ...categories: Category[]): void {\n    this._log(LogLevel.Trace, msg, null, false, ...categories);\n  }\n\n  public debug(msg: MessageType, ...categories: Category[]): void {\n    this._log(LogLevel.Debug, msg, null, false, ...categories);\n  }\n\n  public info(msg: MessageType, ...categories: Category[]): void {\n    this._log(LogLevel.Info, msg, null, false, ...categories);\n  }\n\n  public warn(msg: MessageType, ...categories: Category[]): void {\n    this._log(LogLevel.Warn, msg, null, false, ...categories);\n  }\n\n  public error(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\n    this._log(LogLevel.Error, msg, error, false, ...categories);\n  }\n\n  public fatal(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\n    this._log(LogLevel.Fatal, msg, error, false, ...categories);\n  }\n\n  public resolved(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\n    this._log(LogLevel.Error, msg, error, true, ...categories);\n  }\n\n  public log(level: LogLevel, msg: MessageType, error: ErrorType, ...categories: Category[]): void {\n    this._log(level, msg, error, false, ...categories);\n  }\n\n  protected getRootCategory(): Category {\n    return this.rootCategory;\n  }\n\n  /**\n   * Implement this method in your custom logger\n   * @param msg Message\n   */\n  protected abstract doLog(msg: CategoryLogMessage): void;\n\n  protected createDefaultLogMessage(msg: CategoryLogMessage): string {\n    return MessageFormatUtils.renderDefaultMessage(msg, true);\n  }\n\n  /**\n   * Return optional message formatter. All LoggerTypes (except custom) will see if\n   * they have this, and if so use it to log.\n   * @returns {((message:CategoryLogMessage)=>string)|null}\n   */\n  protected _getMessageFormatter(): ((message: CategoryLogMessage) => string) | null {\n    const categorySettings = this.runtimeSettings.getCategorySettings(this.rootCategory);\n    // Should not happen but make ts happy\n    if (categorySettings === null) {\n      throw new Error(\"Did not find CategorySettings for rootCategory: \" + this.rootCategory.name);\n    }\n    return categorySettings.formatterLogMessage;\n  }\n\n  private _log(level: LogLevel, msg: MessageType, error: ErrorType = null, resolved: boolean = false, ...categories: Category[]): void {\n    // this._logInternal(level, () => msg, () => error, resolved, ...categories);\n    const functionMessage = (): string | LogData => {\n      if (typeof msg === \"function\") {\n        return msg();\n      }\n      return msg;\n    };\n    const functionError = (): Error | null => {\n      if (typeof error === \"function\") {\n        return error();\n      }\n      return error;\n    };\n    this._logInternal(level, functionMessage, functionError, resolved, ...categories);\n  }\n\n  private _logInternal(level: LogLevel, msg: () => string | LogData, error: () => Error | null, resolved: boolean, ...categories: Category[]): void {\n    let logCategories: Category[] = [this.rootCategory];\n\n    // Log root category by default if none present\n    if (typeof categories !== \"undefined\" && categories.length > 0) {\n      logCategories = logCategories.concat(categories.filter((c) => c !== this.rootCategory));\n    }\n\n    // Get the runtime levels for given categories. If their level is lower than given level, we log.\n    // In addition we pass along which category/categories we log this statement for.\n    for (let i = 0; i < logCategories.length; i++) {\n      const category = logCategories[i];\n      if (category === null) {\n        throw new Error(\"Cannot have a null element within categories, at index=\" + i);\n      }\n      const settings = this.runtimeSettings.getCategorySettings(category);\n      if (settings === null) {\n        throw new Error(\"Category with path: \" + category.getCategoryPath() + \" is not registered with this logger, maybe \" +\n          \"you registered it with a different root logger?\");\n      }\n\n      if (settings.logLevel <= level) {\n        const actualError = error !== null ? error() : null;\n        if (actualError === null) {\n          const logMessage = new CategoryLogMessageImpl(msg(), actualError, logCategories, new Date(), level, settings.logFormat, true);\n          logMessage.resolvedErrorMessage = resolved;\n          this.allMessages.addTail(logMessage);\n          this.processMessages();\n        }\n        else {\n          const logMessage = new CategoryLogMessageImpl(msg(), actualError, logCategories, new Date(), level, settings.logFormat, false);\n          logMessage.resolvedErrorMessage = resolved;\n          this.allMessages.addTail(logMessage);\n          MessageFormatUtils.renderError(actualError).then((stack: string) => {\n            logMessage.errorAsStack = stack;\n            logMessage.setReady(true);\n            this.processMessages();\n          }).catch(() => {\n            logMessage.errorAsStack = \"<UNKNOWN> unable to get stack.\";\n            logMessage.setReady(true);\n            this.processMessages();\n          });\n        }\n        break;\n      }\n    }\n\n  }\n\n  private processMessages(): void {\n    // Basically we wait until errors are resolved (those messages\n    // may not be ready).\n    const msgs = this.allMessages;\n    if (msgs.getSize() > 0) {\n      do {\n        const msg = msgs.getHead();\n        if (msg != null) {\n          if (!msg.isReady()) {\n            break;\n          }\n          msgs.removeHead();\n          this.doLog(msg);\n        }\n      }\n      while (msgs.getSize() > 0);\n    }\n  }\n\n}\n","import {LogLevel} from \"../LoggerOptions\";\nimport {AbstractCategoryLogger, CategoryLogMessage} from \"./AbstractCategoryLogger\";\nimport {Category} from \"./Category\";\nimport {RuntimeSettings} from \"./RuntimeSettings\";\n\n/**\n * Simple logger, that logs to the console. If the console is unavailable will throw an exception.\n */\nexport class CategoryConsoleLoggerImpl extends AbstractCategoryLogger {\n\n  constructor(rootCategory: Category, runtimeSettings: RuntimeSettings) {\n    super(rootCategory, runtimeSettings);\n  }\n\n  protected doLog(msg: CategoryLogMessage): void {\n    if (console !== undefined) {\n      const messageFormatter = this._getMessageFormatter();\n      let fullMsg: string;\n      if (messageFormatter === null) {\n        fullMsg = this.createDefaultLogMessage(msg);\n      }\n      else {\n        fullMsg = messageFormatter(msg);\n      }\n\n      let logged = false;\n\n      /* tslint:disable:no-console */\n      switch (msg.level) {\n        case LogLevel.Trace:\n          // Don't try trace we don't want stacks\n          break;\n        case LogLevel.Debug:\n          // Don't try, too much differences of consoles.\n          break;\n        case LogLevel.Info:\n          if (console.info) {\n            console.info(fullMsg);\n            logged = true;\n          }\n          break;\n        case LogLevel.Warn:\n          if (console.warn) {\n            console.warn(fullMsg);\n            logged = true;\n          }\n          break;\n        case LogLevel.Error:\n        case LogLevel.Fatal:\n          if (console.error) {\n            console.error(fullMsg);\n            logged = true;\n          }\n          break;\n        default:\n          throw new Error(\"Unsupported level: \" + msg.level);\n      }\n\n      if (!logged) {\n        console.log(fullMsg);\n      }\n      /* tslint:enable:no-console */\n    }\n    else {\n      throw new Error(\"Console is not defined, cannot log msg: \" + msg.messageAsString);\n    }\n  }\n}\n","import {LogLevel} from \"../LoggerOptions\";\nimport {MessageType} from \"../standard/Logger\";\nimport {CategoryLogger} from \"./CategoryLogger\";\nimport {Category} from \"./Category\";\n\n/**\n * Delegate logger, delegates logging to given logger (constructor).\n */\nexport class CategoryDelegateLoggerImpl implements CategoryLogger {\n\n  private _delegate: CategoryLogger;\n\n  constructor(delegate: CategoryLogger) {\n    this._delegate = delegate;\n  }\n\n  get delegate(): CategoryLogger {\n    return this._delegate;\n  }\n\n  set delegate(value: CategoryLogger) {\n    this._delegate = value;\n  }\n\n  public trace(msg: MessageType, ...categories: Category[]): void {\n    this._delegate.trace(msg, ...categories);\n  }\n\n  public debug(msg: MessageType, ...categories: Category[]): void {\n    this._delegate.debug(msg, ...categories);\n  }\n\n  public info(msg: MessageType, ...categories: Category[]): void {\n    this._delegate.info(msg, ...categories);\n  }\n\n  public warn(msg: MessageType, ...categories: Category[]): void {\n    this._delegate.warn(msg, ...categories);\n  }\n\n  public error(msg: MessageType, error: Error, ...categories: Category[]): void {\n    this._delegate.error(msg, error, ...categories);\n  }\n\n  public fatal(msg: MessageType, error: Error, ...categories: Category[]): void {\n    this._delegate.fatal(msg, error, ...categories);\n  }\n\n  public resolved(msg: MessageType, error: Error, ...categories: Category[]): void {\n    this._delegate.resolved(msg, error, ...categories);\n  }\n\n  public log(level: LogLevel, msg: MessageType, error: Error, ...categories: Category[]): void {\n    this._delegate.log(level, msg, error, ...categories);\n  }\n}\n","import {ExtensionHelper} from \"../../extension/ExtensionHelper\";\nimport {AbstractCategoryLogger, CategoryLogMessage} from \"./AbstractCategoryLogger\";\nimport {Category} from \"./Category\";\nimport {RuntimeSettings} from \"./RuntimeSettings\";\n\n/**\n * This class should not be used directly, it is used for communication with the extension only.\n */\nexport class CategoryExtensionLoggerImpl extends AbstractCategoryLogger {\n\n  constructor(rootCategory: Category, runtimeSettings: RuntimeSettings) {\n    super(rootCategory, runtimeSettings);\n  }\n\n  protected doLog(msg: CategoryLogMessage): void {\n    if (typeof window !== \"undefined\") {\n      ExtensionHelper.sendCategoryLogMessage(msg);\n    }\n    else {\n      /* tslint:disable:no-console */\n      console.log(\"window is not available, you must be running in a browser for this. Dropped message.\");\n      /* tslint:enable:no-console */\n    }\n  }\n\n}\n","import {AbstractCategoryLogger, CategoryLogMessage} from \"./AbstractCategoryLogger\";\n\n/**\n * Logger which buffers all messages, use with care due to possible high memory footprint.\n * Can be convenient in some cases. Call toString() for full output, or cast to this class\n * and call getMessages() to do something with it yourself.\n */\nexport class CategoryMessageBufferLoggerImpl extends AbstractCategoryLogger {\n\n  private messages: string[] = [];\n\n  public getMessages(): string[] {\n    return this.messages;\n  }\n\n  public toString(): string {\n    return this.messages.map((msg: string) => {\n      return msg;\n    }).join(\"\\n\");\n  }\n\n  protected doLog(msg: CategoryLogMessage): void {\n    const messageFormatter = this._getMessageFormatter();\n    let fullMsg: string;\n    if (messageFormatter === null) {\n      fullMsg = this.createDefaultLogMessage(msg);\n    }\n    else {\n      fullMsg = messageFormatter(msg);\n    }\n    this.messages.push(fullMsg);\n  }\n}\n","import {CategoryLogger} from \"./CategoryLogger\";\nimport {Category} from \"./Category\";\nimport {RuntimeSettings} from \"./RuntimeSettings\";\nimport {CategoryLogFormat, LoggerType, LogLevel} from \"../LoggerOptions\";\nimport {CategoryLogMessage} from \"./AbstractCategoryLogger\";\n\n/**\n * RuntimeSettings for a category, at runtime these are associated to a category.\n */\nexport class CategoryRuntimeSettings {\n\n  private _category: Category;\n  private _logLevel: LogLevel;\n  private _loggerType: LoggerType;\n  private _logFormat: CategoryLogFormat;\n\n  private _callBackLogger: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null;\n  private _formatterLogMessage: ((message: CategoryLogMessage) => string) | null = null;\n\n  constructor(category: Category, logLevel: LogLevel = LogLevel.Error, loggerType: LoggerType = LoggerType.Console,\n              logFormat: CategoryLogFormat = new CategoryLogFormat(),\n              callBackLogger: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null = null,\n              formatterLogMessage: ((message: CategoryLogMessage) => string) | null = null) {\n    this._category = category;\n    this._logLevel = logLevel;\n    this._loggerType = loggerType;\n    this._logFormat = logFormat;\n    this._callBackLogger = callBackLogger;\n    this._formatterLogMessage = formatterLogMessage;\n  }\n\n  get category(): Category {\n    return this._category;\n  }\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(value: LogLevel) {\n    this._logLevel = value;\n  }\n\n  get loggerType(): LoggerType {\n    return this._loggerType;\n  }\n\n  set loggerType(value: LoggerType) {\n    this._loggerType = value;\n  }\n\n  get logFormat(): CategoryLogFormat {\n    return this._logFormat;\n  }\n\n  set logFormat(value: CategoryLogFormat) {\n    this._logFormat = value;\n  }\n\n  get callBackLogger(): ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null {\n    return this._callBackLogger;\n  }\n\n  set callBackLogger(value: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null) {\n    this._callBackLogger = value;\n  }\n\n  get formatterLogMessage(): ((message: CategoryLogMessage) => string) | null {\n    return this._formatterLogMessage;\n  }\n\n  set formatterLogMessage(value: ((message: CategoryLogMessage) => string) | null) {\n    this._formatterLogMessage = value;\n  }\n}\n","import {CategoryLogger} from \"./CategoryLogger\";\nimport {Category} from \"./Category\";\nimport {RuntimeSettings} from \"./RuntimeSettings\";\nimport {CategoryLogFormat, LoggerType, LogLevel} from \"../LoggerOptions\";\nimport {CategoryLogMessage} from \"./AbstractCategoryLogger\";\n\n/**\n * Default configuration, can be used to initially set a different default configuration\n * on the CategoryServiceFactory. This will be applied to all categories already registered (or\n * registered in the future). Can also be applied to one Category (and childs).\n */\nexport class CategoryConfiguration {\n\n  private _logLevel: LogLevel;\n  private _loggerType: LoggerType;\n  private _logFormat: CategoryLogFormat;\n\n  private _callBackLogger: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null;\n  private _formatterLogMessage: ((message: CategoryLogMessage) => string) | null = null;\n\n  /**\n   * Create a new instance\n   * @param logLevel Log level for all loggers, default is LogLevel.Error\n   * @param loggerType Where to log, default is LoggerType.Console\n   * @param logFormat What logging format to use, use default instance, for default values see CategoryLogFormat.\n   * @param callBackLogger Optional callback, if LoggerType.Custom is used as loggerType. In that case must return a new Logger instance.\n   *            It is recommended to extend AbstractCategoryLogger to make your custom logger.\n   */\n  constructor(logLevel: LogLevel = LogLevel.Error, loggerType: LoggerType = LoggerType.Console,\n              logFormat: CategoryLogFormat = new CategoryLogFormat(),\n              callBackLogger: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null = null) {\n    this._logLevel = logLevel;\n    this._loggerType = loggerType;\n    this._logFormat = logFormat;\n    this._callBackLogger = callBackLogger;\n\n    if (this._loggerType === LoggerType.Custom && this.callBackLogger === null) {\n      throw new Error(\"If you specify loggerType to be Custom, you must provide the callBackLogger argument\");\n    }\n  }\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  get loggerType(): LoggerType {\n    return this._loggerType;\n  }\n\n  get logFormat(): CategoryLogFormat {\n    return this._logFormat;\n  }\n\n  get callBackLogger(): ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null {\n    return this._callBackLogger;\n  }\n\n  /**\n   * Get the formatterLogMessage function, see comment on the setter.\n   * @returns {((message:CategoryLogMessage)=>string)|null}\n   */\n  get formatterLogMessage(): ((message: CategoryLogMessage) => string) | null {\n    return this._formatterLogMessage;\n  }\n\n  /**\n   * Set the default formatterLogMessage function, if set it is applied to all type of loggers except for a custom logger.\n   * By default this is null (not set). You can assign a function to allow custom formatting of a log message.\n   * Each log message will call this function then and expects your function to format the message and return a string.\n   * Will throw an error if you attempt to set a formatterLogMessage if the LoggerType is custom.\n   * @param value The formatter function, or null to reset it.\n   */\n  set formatterLogMessage(value: ((message: CategoryLogMessage) => string) | null) {\n    if (value !== null && this._loggerType === LoggerType.Custom) {\n      throw new Error(\"You cannot specify a formatter for log messages if your loggerType is Custom\");\n    }\n    this._formatterLogMessage = value;\n  }\n\n  public copy(): CategoryConfiguration {\n    const config = new CategoryConfiguration(this.logLevel, this.loggerType, this.logFormat.copy(), this.callBackLogger);\n    config.formatterLogMessage = this.formatterLogMessage;\n    return config;\n  }\n}\n","import {SimpleMap} from \"../../utils/DataStructures\";\nimport {LoggerType} from \"../LoggerOptions\";\nimport {CategoryConsoleLoggerImpl} from \"./CategoryConsoleLoggerImpl\";\nimport {CategoryDelegateLoggerImpl} from \"./CategoryDelegateLoggerImpl\";\nimport {CategoryExtensionLoggerImpl} from \"./CategoryExtensionLoggerImpl\";\nimport {CategoryMessageBufferLoggerImpl} from \"./CategoryMessageBufferImpl\";\nimport {ExtensionHelper} from \"../../extension/ExtensionHelper\";\nimport {Category} from \"./Category\";\nimport {CategoryLogger} from \"./CategoryLogger\";\nimport {RuntimeSettings} from \"./RuntimeSettings\";\nimport {CategoryRuntimeSettings} from \"./CategoryRuntimeSettings\";\nimport {CategoryConfiguration} from \"./CategoryConfiguration\";\n\n/**\n * The service (only available as singleton) for all category related stuff as\n * retrieving, registering a logger. You should normally NOT use this,\n * instead use CategoryServiceFactory which is meant for end users.\n */\nexport class CategoryServiceImpl implements RuntimeSettings {\n\n  // Singleton category service, used by CategoryServiceFactory as well as Categories.\n  // Loaded on demand. Do NOT change as webpack may pack things in wrong order otherwise.\n  private static _INSTANCE: CategoryServiceImpl | null = null;\n  private _defaultConfig: CategoryConfiguration = new CategoryConfiguration();\n\n  private _mapState = new SimpleMap<CategoryState>();\n\n  private constructor() {\n    // Private constructor\n    ExtensionHelper.register();\n  }\n\n  public static getInstance(): CategoryServiceImpl {\n    // Load on-demand, to assure webpack ordering of module usage doesn't screw things over\n    // for us when we accidentally change the order.\n    if (CategoryServiceImpl._INSTANCE === null) {\n      CategoryServiceImpl._INSTANCE = new CategoryServiceImpl();\n    }\n    return CategoryServiceImpl._INSTANCE;\n  }\n\n  public getLogger(category: Category): CategoryLogger {\n    return this.createOrGetCategoryState(category).logger;\n  }\n\n  /**\n   * Clears everything, including a default configuration you may have set.\n   * After this you need to re-register your categories etc.\n   */\n  public clear(): void {\n    this._mapState.clear();\n    this.setDefaultConfiguration(new CategoryConfiguration());\n  }\n\n  public getCategorySettings(category: Category): CategoryRuntimeSettings {\n    return this.createOrGetCategoryState(category).currentRuntimeSettings;\n  }\n\n  public getOriginalCategorySettings(category: Category): CategoryRuntimeSettings {\n    return this.createOrGetCategoryState(category).originalRuntimeSettings;\n  }\n\n  /**\n   * Set the default configuration. New root loggers created get this\n   * applied. If you want to reset all current loggers to have this\n   * applied as well, pass in reset=true (the default is false). All\n   * categories will be reset then as well.\n   * @param config New config\n   * @param reset Defaults to true. Set to true to reset all loggers and current runtimesettings.\n   */\n  public setDefaultConfiguration(config: CategoryConfiguration, reset: boolean = true): void {\n    this._defaultConfig = config;\n    if (reset) {\n      this._mapState.forEachValue((state) => {\n        state.updateSettings(config);\n      });\n    }\n  }\n\n  /**\n   * Set new configuration settings for a category (and possibly its child categories)\n   * @param config Config\n   * @param category Category\n   * @param applyChildren True to apply to child categories, defaults to false.\n   */\n  public setConfigurationCategory(config: CategoryConfiguration, category: Category, applyChildren: boolean = false): void {\n    this.createOrGetCategoryState(category).updateSettings(config);\n\n    // Apply the settings to children recursive if requested\n    if (applyChildren) {\n      category.children.forEach((child) => {\n        // False flag, a child cannot reset a rootlogger\n        this.setConfigurationCategory(config, child, applyChildren);\n      });\n    }\n  }\n\n  public registerCategory(category: Category): void {\n    if (category === null || typeof category === \"undefined\") {\n      throw new Error(\"Category CANNOT be null/undefined\");\n    }\n\n    if (this._mapState.exists(CategoryServiceImpl.getCategoryKey(category))) {\n      throw new Error(\"Cannot add this root category with name: \" + category.name + \", it already exists (same name in hierarchy).\");\n    }\n\n    this.createOrGetCategoryState(category);\n  }\n\n  /**\n   * Used to enable integration with chrome extension. Do not use manually, the\n   * extension and the logger framework deal with this.\n   */\n  public enableExtensionIntegration(): void {\n    this._mapState.forEachValue((state) => state.enableForExtension(this));\n  }\n\n  /**\n   * Return all root categories currently registered.\n   */\n  public getRootCategories(): Category[] {\n    return this._mapState.values().filter((state) => state.category.parent == null).map((state) => state.category);\n  }\n\n  /**\n   * Return Category by id\n   * @param id The id of the category to find\n   * @returns {Category} or null if not found\n   */\n  public getCategoryById(id: number): Category | null {\n    const result = this._mapState.values().filter((state) => state.category.id === id).map((state) => state.category);\n    if (result.length === 1) {\n      return result[0];\n    }\n    return null;\n  }\n\n  private createOrGetCategoryState(category: Category): CategoryState {\n    const key = CategoryServiceImpl.getCategoryKey(category);\n    const state = this._mapState.get(key);\n    if (typeof state !== \"undefined\") {\n      return state;\n    }\n\n    const newState = this.createState(category);\n    this._mapState.put(key, newState);\n    return newState;\n  }\n\n  private createState(category: Category): CategoryState {\n    return new CategoryState(category, () => this._defaultConfig, (config: CategoryConfiguration, cat: Category) => this.createLogger(config, cat));\n  }\n\n  private createLogger(config: CategoryConfiguration, category: Category): CategoryLogger {\n    // Default is always a console logger\n    switch (config.loggerType) {\n      case LoggerType.Console:\n        return new CategoryConsoleLoggerImpl(category, this);\n      case LoggerType.MessageBuffer:\n        return new CategoryMessageBufferLoggerImpl(category, this);\n      case LoggerType.Custom:\n        if (config.callBackLogger === null) {\n          throw new Error(\"Cannot create custom logger, custom callback is null\");\n        }\n        else {\n          return config.callBackLogger(category, this);\n        }\n      default:\n        throw new Error(\"Cannot create a Logger for LoggerType: \" + config.loggerType);\n    }\n  }\n\n  private static getCategoryKey(category: Category): string {\n    return category.getCategoryPath();\n  }\n}\n\nclass CategoryState {\n\n  private readonly _category: Category;\n  private readonly _lazyState: LazyState;\n\n  constructor(category: Category, defaultConfig: () => CategoryConfiguration, createLogger: (config: CategoryConfiguration, category: Category) => CategoryLogger) {\n    this._category = category;\n    this._lazyState = new LazyState(category, defaultConfig, createLogger);\n  }\n\n  get category(): Category {\n    return this._category;\n  }\n\n  get logger(): CategoryLogger {\n    return this._lazyState.getLogger();\n  }\n\n  get originalRuntimeSettings(): CategoryRuntimeSettings {\n    return this._lazyState.getOriginalRuntimeSettings();\n  }\n\n  get currentRuntimeSettings(): CategoryRuntimeSettings {\n    return this._lazyState.getCurrentRuntimeSettings();\n  }\n\n  public enableForExtension(runtimeSettings: RuntimeSettings) {\n    this._lazyState.enableForExtension(runtimeSettings);\n  }\n\n  public updateSettings(config: CategoryConfiguration) {\n    this._lazyState.updateSettings(config);\n  }\n}\n\nclass LazyState {\n\n  private readonly _category: Category;\n  private _defaultConfig: () => CategoryConfiguration;\n  private readonly _createLogger: (config: CategoryConfiguration, category: Category) => CategoryLogger;\n\n  private _logger: CategoryLogger; // Original real logger\n  private _wrappedLogger: CategoryLogger;  // Wrapped logger, initially _logger - can be changed if extension is enabled.\n  private _delegateLogger: CategoryDelegateLoggerImpl;\n\n  private _originalRuntimeSettings: CategoryRuntimeSettings;\n  private _currentRuntimeSettings: CategoryRuntimeSettings;\n\n  constructor(category: Category, defaultConfig: () => CategoryConfiguration, createLogger: (config: CategoryConfiguration, category: Category) => CategoryLogger) {\n    this._category = category;\n    this._defaultConfig = defaultConfig;\n    this._createLogger = createLogger;\n  }\n\n  public isLoaded(): boolean {\n    return (typeof this._logger !== \"undefined\");\n  }\n\n  public getLogger(): CategoryLogger {\n    this.loadLoggerOnDemand();\n    return this._delegateLogger;\n  }\n\n  public getOriginalRuntimeSettings(): CategoryRuntimeSettings {\n    this.loadLoggerOnDemand();\n    return this._originalRuntimeSettings;\n  }\n\n  public getCurrentRuntimeSettings(): CategoryRuntimeSettings {\n    this.loadLoggerOnDemand();\n    return this._currentRuntimeSettings;\n  }\n\n  public enableForExtension(runtimeSettings: RuntimeSettings) {\n    this.loadLoggerOnDemand();\n    if (!(this._wrappedLogger instanceof CategoryExtensionLoggerImpl)) {\n      /* tslint:disable no-console */\n      console.log(\"Reconfiguring logger for extension for category: \" + this._category.name);\n      /* tslint:enable no-console */\n\n      this._wrappedLogger = new CategoryExtensionLoggerImpl(this._category, runtimeSettings);\n      this._delegateLogger.delegate = this._wrappedLogger;\n    }\n  }\n\n  public updateSettings(config: CategoryConfiguration) {\n    if (this.isLoaded()) {\n      this._currentRuntimeSettings.logLevel = config.logLevel;\n      this._currentRuntimeSettings.loggerType = config.loggerType;\n      this._currentRuntimeSettings.logFormat = config.logFormat;\n      this._currentRuntimeSettings.callBackLogger = config.callBackLogger;\n      this._currentRuntimeSettings.formatterLogMessage = config.formatterLogMessage;\n\n      // Replace the real logger, it may have changed.\n      this._logger = this._createLogger(config, this._category);\n      if (!(this._wrappedLogger instanceof CategoryExtensionLoggerImpl)) {\n        this._wrappedLogger = this._logger;\n      }\n      this._delegateLogger.delegate = this._wrappedLogger;\n    }\n    else {\n      // Set this config, it may be for the category specific, the default is therefore not good enough.\n      this._defaultConfig = () => config;\n    }\n  }\n\n  private loadLoggerOnDemand(): void {\n    if (!this.isLoaded()) {\n      this._logger = this._createLogger(this._defaultConfig(), this._category);\n      this._wrappedLogger = this._logger;\n      this._delegateLogger = new CategoryDelegateLoggerImpl(this._wrappedLogger);\n      this._originalRuntimeSettings = this.initNewSettings();\n      this._currentRuntimeSettings = this.initNewSettings();\n    }\n  }\n\n  private initNewSettings(): CategoryRuntimeSettings {\n    const defSettings = this._defaultConfig().copy();\n    return new CategoryRuntimeSettings(this._category, defSettings.logLevel, defSettings.loggerType, defSettings.logFormat, defSettings.callBackLogger, defSettings.formatterLogMessage);\n  }\n}\n","import {CategoryLogMessage} from \"../log/category/AbstractCategoryLogger\";\nimport {CategoryServiceImpl} from \"../log/category/CategoryService\";\nimport {LogLevel} from \"../log/LoggerOptions\";\nimport {MessageFormatUtils} from \"../utils/MessageUtils\";\nimport {ExtensionMessageContentJSON, ExtensionMessageJSON} from \"./ExtensionMessageJSON\";\nimport {ExtensionRequestChangeLogLevelJSON} from \"./MessagesFromExtensionJSON\";\nimport {\n  ExtensionCategoriesUpdateMessageJSON,\n  ExtensionCategoryJSON,\n  ExtensionCategoryLogMessageJSON,\n} from \"./MessagesToExtensionJSON\";\nimport {Category} from \"../log/category/Category\";\n\nexport class ExtensionHelper {\n\n  private static registered: boolean = false;\n\n  private constructor() {\n    // Private constructor\n  }\n\n  /**\n   * Enables the window event listener to listen to messages (from extensions).\n   * Can be registered/enabled only once.\n   */\n  public static register(): void {\n    if (!ExtensionHelper.registered) {\n      const listener = (evt: MessageEvent) => {\n        const msg = evt.data as ExtensionMessageJSON<any>;\n        if (msg !== null) {\n          ExtensionHelper.processMessageFromExtension(msg);\n        }\n      };\n\n      if (typeof window !== \"undefined\" && typeof window.removeEventListener !== \"undefined\" && typeof window.addEventListener !== \"undefined\") {\n        window.removeEventListener(\"message\", listener);\n        window.addEventListener(\"message\", listener);\n\n        ExtensionHelper.registered = true;\n      }\n    }\n  }\n\n  public static processMessageFromExtension(msg: ExtensionMessageJSON<any>): void {\n    if (!ExtensionHelper.registered) {\n      return;\n    }\n    /* tslint:disable:no-console */\n    if (msg.from === \"tsl-extension\") {\n      const data = msg.data;\n      switch (data.type) {\n        case \"register\":\n          ExtensionHelper.enableExtensionIntegration();\n          break;\n        case \"request-change-loglevel\":\n          const valueRequest = data.value as ExtensionRequestChangeLogLevelJSON;\n          const catsApplied = ExtensionHelper.applyLogLevel(valueRequest.categoryId, valueRequest.logLevel, valueRequest.recursive);\n          if (catsApplied.length > 0) {\n            // Send changes back\n            ExtensionHelper.sendCategoriesRuntimeUpdateMessage(catsApplied);\n          }\n          break;\n        default:\n          console.log(\"Unknown command to process message from extension, command was: \" + data.type);\n          break;\n      }\n    }\n    /* tslint:enable:no-console */\n  }\n\n  public static sendCategoryLogMessage(msg: CategoryLogMessage): void {\n    if (!ExtensionHelper.registered) {\n      return;\n    }\n\n    const categoryIds = msg.categories.map((cat: Category) => {\n      return cat.id;\n    });\n\n    const content = {\n      type: \"log-message\",\n      value: {\n        categories: categoryIds,\n        errorAsStack: msg.errorAsStack,\n        formattedMessage: MessageFormatUtils.renderDefaultMessage(msg, false),\n        logLevel: LogLevel[msg.level].toString(),\n        message: msg.messageAsString,\n        resolvedErrorMessage: msg.isResolvedErrorMessage\n      }\n    } as ExtensionMessageContentJSON<ExtensionCategoryLogMessageJSON>;\n\n    const message = {\n      data: content,\n      from: \"tsl-logging\",\n    } as ExtensionMessageJSON<ExtensionCategoryLogMessageJSON>;\n\n    ExtensionHelper.sendMessage(message);\n  }\n\n  private static sendCategoriesRuntimeUpdateMessage(categories: Category[]): void {\n    if (!ExtensionHelper.registered) {\n      return;\n    }\n    const service = CategoryServiceImpl.getInstance();\n    const catLevels = {categories: Array<{id: number, logLevel: string}>()} as ExtensionCategoriesUpdateMessageJSON;\n\n    categories.forEach((cat: Category) => {\n      const catSettings = service.getCategorySettings(cat);\n      if (catSettings != null) {\n        catLevels.categories.push({id: cat.id, logLevel: LogLevel[catSettings.logLevel].toString()});\n      }\n    });\n\n    const content = {\n      type: \"categories-rt-update\",\n      value: catLevels,\n    } as ExtensionMessageContentJSON<ExtensionCategoriesUpdateMessageJSON>;\n\n    const message = {\n      data: content,\n      from: \"tsl-logging\"\n    } as ExtensionMessageJSON<ExtensionCategoriesUpdateMessageJSON>;\n\n    ExtensionHelper.sendMessage(message);\n  }\n\n  private static sendRootCategoriesToExtension(): void {\n    if (!ExtensionHelper.registered) {\n      return;\n    }\n\n    const categories = CategoryServiceImpl.getInstance().getRootCategories().map((cat: Category) => {\n      return ExtensionHelper.getCategoryAsJSON(cat);\n    });\n\n    const content = {\n      type: \"root-categories-tree\",\n      value: categories\n    } as ExtensionMessageContentJSON<ExtensionCategoryJSON[]>;\n\n    const message = {\n      data: content,\n      from: \"tsl-logging\"\n    } as ExtensionMessageJSON<ExtensionCategoryJSON[]>;\n\n    ExtensionHelper.sendMessage(message);\n  }\n\n  /**\n   * If extension integration is enabled, will send the root categories over to the extension.\n   * Otherwise does nothing.\n   */\n  private static getCategoryAsJSON(cat: Category): ExtensionCategoryJSON {\n    const childCategories = cat.children.map((child) => {\n      return ExtensionHelper.getCategoryAsJSON(child);\n    });\n\n    return {\n      children: childCategories,\n      id: cat.id,\n      logLevel: LogLevel[cat.logLevel].toString(),\n      name: cat.name,\n      parentId: (cat.parent != null ? cat.parent.id : null),\n    } as ExtensionCategoryJSON;\n  }\n\n  private static applyLogLevel(categoryId: number, logLevel: string, recursive: boolean): Category[] {\n    const cats: Category[] = [];\n\n    const category = CategoryServiceImpl.getInstance().getCategoryById(categoryId);\n    if (category != null) {\n      ExtensionHelper._applyLogLevelRecursive(category, LogLevel.fromString(logLevel), recursive, cats);\n    }\n    else {\n      /* tslint:disable:no-console */\n      console.log(\"Could not change log level, failed to find category with id: \" + categoryId);\n      /* tslint:enable:no-console */\n    }\n\n    return cats;\n  }\n\n  private static _applyLogLevelRecursive(category: Category, logLevel: LogLevel, recursive: boolean, cats: Category[]): void {\n    const categorySettings = CategoryServiceImpl.getInstance().getCategorySettings(category);\n    if (categorySettings != null) {\n      categorySettings.logLevel = logLevel;\n\n      cats.push(category);\n\n      if (recursive) {\n        category.children.forEach((child: Category) => {\n          ExtensionHelper._applyLogLevelRecursive(child, logLevel, recursive, cats);\n        });\n      }\n    }\n  }\n\n  private static getAllCategories(): Category[] {\n    const cats: Category[] = [];\n\n    const addCats = (cat: Category, allCats: Category[]) => {\n      allCats.push(cat);\n\n      cat.children.forEach((catChild: Category) => {\n        addCats(catChild, allCats);\n      });\n    };\n\n    CategoryServiceImpl.getInstance().getRootCategories().forEach((cat: Category) => {\n      addCats(cat, cats);\n    });\n\n    return cats;\n  }\n\n  private static sendMessage(msg: ExtensionMessageJSON<any>): void {\n    if (!ExtensionHelper.registered) {\n      return;\n    }\n\n    if (typeof window !== \"undefined\" && typeof window.postMessage !== \"undefined\") {\n      window.postMessage(msg, \"*\");\n    }\n  }\n\n  /**\n   *  Extension framework will call this to enable the integration between two,\n   *  after this call the framework will respond with postMessage() messages.\n   */\n  private static enableExtensionIntegration(): void {\n    if (!ExtensionHelper.registered) {\n      return;\n    }\n\n    const instance = CategoryServiceImpl.getInstance();\n    instance.enableExtensionIntegration();\n\n    // Send over all categories\n    ExtensionHelper.sendRootCategoriesToExtension();\n\n    // Send over the current runtime levels\n    const cats = ExtensionHelper.getAllCategories();\n    ExtensionHelper.sendCategoriesRuntimeUpdateMessage(cats);\n  }\n}\n","import {Logger} from \"./Logger\";\nimport {LogFormat, LoggerType, LogLevel} from \"../LoggerOptions\";\nimport {LogMessage} from \"./AbstractLogger\";\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\n\n/**\n * Defines a LogGroupRule, this allows you to either have everything configured the same way\n * or for example loggers that start with name model. It allows you to group loggers together\n * to have a certain loglevel and other settings. You can configure this when creating the\n * LoggerFactory (which accepts multiple LogGroupRules).\n */\nexport class LogGroupRule {\n\n  private _regExp: RegExp;\n  private _level: LogLevel;\n  private _loggerType: LoggerType;\n  private _logFormat: LogFormat;\n  private _callBackLogger: ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null;\n  private _formatterLogMessage: ((message: LogMessage) => string) | null = null;\n\n  /**\n   * Create a LogGroupRule. Basically you define what logger name(s) match for this group, what level should be used what logger type (where to log)\n   * and what format to write in. If the loggerType is custom, then the callBackLogger must be supplied as callback function to return a custom logger.\n   * @param regExp Regular expression, what matches for your logger names for this group\n   * @param level LogLevel\n   * @param logFormat LogFormat\n   * @param loggerType Type of logger, if Custom, make sure to implement callBackLogger and pass in, this will be called so you can return your own logger.\n   * @param callBackLogger Callback function to return a new clean custom logger (yours!)\n   */\n  constructor(regExp: RegExp, level: LogLevel, logFormat: LogFormat = new LogFormat(),\n              loggerType: LoggerType = LoggerType.Console,\n              callBackLogger: ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null = null) {\n    this._regExp = regExp;\n    this._level = level;\n    this._logFormat = logFormat;\n    this._loggerType = loggerType;\n    this._callBackLogger = callBackLogger;\n  }\n\n  get regExp(): RegExp {\n    return this._regExp;\n  }\n\n  get level(): LogLevel {\n    return this._level;\n  }\n\n  get loggerType(): LoggerType {\n    return this._loggerType;\n  }\n\n  get logFormat(): LogFormat {\n    return this._logFormat;\n  }\n\n  get callBackLogger(): ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null {\n    return this._callBackLogger;\n  }\n\n  /**\n   * Get the formatterLogMessage function, see comment on the setter.\n   * @returns {((message:LogMessage)=>string)|null}\n   */\n  get formatterLogMessage(): ((message: LogMessage) => string) | null {\n    return this._formatterLogMessage;\n  }\n\n  /**\n   * Set the default formatterLogMessage function, if set it is applied to all type of loggers except for a custom logger.\n   * By default this is null (not set). You can assign a function to allow custom formatting of a log message.\n   * Each log message will call this function then and expects your function to format the message and return a string.\n   * Will throw an error if you attempt to set a formatterLogMessage if the LoggerType is custom.\n   * @param value The formatter function, or null to reset it.\n   */\n  set formatterLogMessage(value: ((message: LogMessage) => string) | null) {\n    if (value !== null && this._loggerType === LoggerType.Custom) {\n      throw new Error(\"You cannot specify a formatter for log messages if your loggerType is Custom\");\n    }\n    this._formatterLogMessage = value;\n  }\n}\n","import {LogGroupRule} from \"./LogGroupRule\";\n\n/**\n * Options object you can use to configure the LoggerFactory you create at LFService.\n */\nexport class LoggerFactoryOptions {\n\n  private _logGroupRules: LogGroupRule[] = [];\n  private _enabled: boolean = true;\n\n  /**\n   * Add LogGroupRule, see {LogGroupRule) for details\n   * @param rule Rule to add\n   * @returns {LoggerFactoryOptions} returns itself\n   */\n  public addLogGroupRule(rule: LogGroupRule): LoggerFactoryOptions {\n    this._logGroupRules.push(rule);\n    return this;\n  }\n\n  /**\n   * Enable or disable logging completely for the LoggerFactory.\n   * @param enabled True for enabled (default)\n   * @returns {LoggerFactoryOptions} returns itself\n   */\n  public setEnabled(enabled: boolean): LoggerFactoryOptions {\n    this._enabled = enabled;\n    return this;\n  }\n\n  get logGroupRules(): LogGroupRule[] {\n    return this._logGroupRules;\n  }\n\n  get enabled(): boolean {\n    return this._enabled;\n  }\n}\n","import {SimpleMap} from \"../../utils/DataStructures\";\nimport {LogLevel} from \"../LoggerOptions\";\nimport {LoggerFactory} from \"./LoggerFactory\";\nimport {LoggerFactoryImpl} from \"./LoggerFactoryImpl\";\nimport {LoggerFactoryRuntimeSettings} from \"./LoggerFactoryRuntimeSettings\";\nimport {ExtensionHelper} from \"../../extension/ExtensionHelper\";\nimport {LogGroupRule} from \"./LogGroupRule\";\nimport {LoggerFactoryOptions} from \"./LoggerFactoryOptions\";\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\nimport {LFServiceRuntimeSettings} from \"./LFServiceRuntimeSettings\";\n\nclass LFServiceImpl implements LFServiceRuntimeSettings {\n\n  // Loaded on demand. Do NOT change as webpack may pack things in wrong order otherwise.\n  private static _INSTANCE: LFServiceImpl | null = null;\n\n  private _nameCounter: number = 1;\n  private _mapFactories: SimpleMap<LoggerFactoryImpl> = new SimpleMap<LoggerFactoryImpl>();\n\n  private constructor() {\n    // Private constructor.\n\n    ExtensionHelper.register();\n  }\n\n  public static getInstance(): LFServiceImpl {\n    // Loaded on demand. Do NOT change as webpack may pack things in wrong order otherwise.\n    if (LFServiceImpl._INSTANCE === null) {\n      LFServiceImpl._INSTANCE = new LFServiceImpl();\n    }\n    return LFServiceImpl._INSTANCE;\n  }\n\n  /**\n   * Create a new LoggerFactory with given options (if any). If no options\n   * are specified, the LoggerFactory, will accept any named logger and will\n   * log on info level by default for, to the console.\n   * @param options Options, optional.\n   * @returns {LoggerFactory}\n   */\n  public createLoggerFactory(options: LoggerFactoryOptions | null = null): LoggerFactory {\n    const name = \"LoggerFactory\" + this._nameCounter++;\n    return this.createNamedLoggerFactory(name, options);\n  }\n\n  /**\n   * Create a new LoggerFactory using given name (used for console api/extension).\n   * @param name Name Pick something short but distinguishable.\n   * @param options Options, optional\n   * @return {LoggerFactory}\n   */\n  public createNamedLoggerFactory(name: string, options: LoggerFactoryOptions | null = null): LoggerFactory {\n    if (this._mapFactories.exists(name)) {\n      throw new Error(\"LoggerFactory with name \" + name + \" already exists.\");\n    }\n\n    let factory: LoggerFactoryImpl;\n\n    if (options !== null) {\n      factory = new LoggerFactoryImpl(name, options);\n    }\n    else {\n      factory = new LoggerFactoryImpl(name, LFServiceImpl.createDefaultOptions());\n    }\n    this._mapFactories.put(name, factory);\n\n    return factory;\n  }\n\n  /**\n   * Closes all Loggers for LoggerFactories that were created.\n   * After this call, all previously fetched Loggers (from their\n   * factories) are unusable. The factories remain as they were.\n   */\n  public closeLoggers(): void {\n    this._mapFactories.values().forEach((factory: LoggerFactoryImpl) => {\n      factory.closeLoggers();\n    });\n\n    this._mapFactories.clear();\n    this._nameCounter = 1;\n  }\n\n  public getRuntimeSettingsForLoggerFactories(): LoggerFactoryRuntimeSettings[] {\n    const result: LoggerFactoryRuntimeSettings[] = [];\n    this._mapFactories.forEachValue((factory) => result.push(factory));\n    return result;\n  }\n\n  public getLogGroupSettings(nameLoggerFactory: string, idLogGroupRule: number): LogGroupRuntimeSettings | null {\n    const factory = this._mapFactories.get(nameLoggerFactory);\n    if (typeof factory === \"undefined\") {\n      return null;\n    }\n    return factory.getLogGroupRuntimeSettingsByIndex(idLogGroupRule);\n  }\n\n  public getLoggerFactoryRuntimeSettingsByName(nameLoggerFactory: string): LoggerFactoryRuntimeSettings | null {\n    const result = this._mapFactories.get(nameLoggerFactory);\n    if (typeof result === \"undefined\") {\n      return null;\n    }\n    return result;\n  }\n\n  private static createDefaultOptions(): LoggerFactoryOptions {\n    return new LoggerFactoryOptions().addLogGroupRule(new LogGroupRule(new RegExp(\".+\"), LogLevel.Info));\n  }\n}\n\n/**\n * Create and configure your LoggerFactory from here.\n */\nexport class LFService {\n\n  private static DEFAULT_LOGGER_FACTORY_NAME = \"DEFAULT\";\n\n  private static INSTANCE_SERVICE = LFServiceImpl.getInstance();\n  private static DEFAULT_LOGGER_FACTORY: LoggerFactory | null = null;\n\n  /**\n   * Create a new LoggerFactory with given options (if any). If no options\n   * are specified, the LoggerFactory, will accept any named logger and will\n   * log on info level by default for, to the console.\n   * @param options Options, optional.\n   * @returns {LoggerFactory}\n   */\n  public static createLoggerFactory(options: LoggerFactoryOptions | null = null): LoggerFactory {\n    return LFService.INSTANCE_SERVICE.createLoggerFactory(options);\n  }\n\n  /**\n   * Create a new LoggerFactory using given name (used for console api/extension).\n   * @param name Name Pick something short but distinguishable. The word \"DEFAULT\" is reserved and cannot be taken, it is used\n   * for the default LoggerFactory.\n   * @param options Options, optional\n   * @return {LoggerFactory}\n   */\n  public static createNamedLoggerFactory(name: string, options: LoggerFactoryOptions | null = null): LoggerFactory {\n    if (name === LFService.DEFAULT_LOGGER_FACTORY_NAME) {\n      throw new Error(\"LoggerFactory name: \" + LFService.DEFAULT_LOGGER_FACTORY_NAME + \" is reserved and cannot be used.\");\n    }\n    return LFService.INSTANCE_SERVICE.createNamedLoggerFactory(name, options);\n  }\n\n  /**\n   * Closes all Loggers for LoggerFactories that were created.\n   * After this call, all previously fetched Loggers (from their\n   * factories) are unusable. The factories remain as they were.\n   */\n  public static closeLoggers(): void {\n    return LFService.INSTANCE_SERVICE.closeLoggers();\n  }\n\n  /**\n   * Return LFServiceRuntimeSettings to retrieve information loggerfactories\n   * and their runtime settings.\n   * @returns {LFServiceRuntimeSettings}\n   */\n  public static getRuntimeSettings(): LFServiceRuntimeSettings {\n    return LFService.INSTANCE_SERVICE;\n  }\n\n  /**\n   * This property returns the default LoggerFactory (if not yet initialized it is initialized).\n   * This LoggerFactory can be used to share among multiple\n   * applications/libraries - that way you can enable/change logging over everything from\n   * your own application when required.\n   * It is recommended to be used by library developers to make logging easily available for the\n   * consumers of their libraries.\n   * It is highly recommended to use Loggers from the LoggerFactory with unique grouping/names to prevent\n   * clashes of Loggers between multiple projects.\n   * @returns {LoggerFactory} Returns the default LoggerFactory\n   */\n  public static get DEFAULT(): LoggerFactory {\n    return LFService.getDefault();\n  }\n\n  private static getDefault(): LoggerFactory {\n    if (LFService.DEFAULT_LOGGER_FACTORY === null) {\n      LFService.DEFAULT_LOGGER_FACTORY = LFService.DEFAULT_LOGGER_FACTORY = LFService.INSTANCE_SERVICE.createNamedLoggerFactory(\n        LFService.DEFAULT_LOGGER_FACTORY_NAME,\n        new LoggerFactoryOptions().addLogGroupRule(new LogGroupRule(new RegExp(\".+\"), LogLevel.Error))\n      );\n    }\n    return LFService.DEFAULT_LOGGER_FACTORY;\n  }\n}\n","import {DateFormatEnum, LoggerType, LogLevel} from \"../log/LoggerOptions\";\nimport {LoggerFactoryRuntimeSettings} from \"../log/standard/LoggerFactoryRuntimeSettings\";\nimport {LFService} from \"../log/standard/LFService\";\nimport {StringBuilder, TuplePair} from \"../utils/DataStructures\";\nimport {LogGroupRuntimeSettings} from \"../log/standard/LogGroupRuntimeSettings\";\nimport {LFServiceRuntimeSettings} from \"../log/standard/LFServiceRuntimeSettings\";\n\n/**\n * Allows to change the settings for one or all LogGroups.\n * Options will be applied only if set, undefined options are ignored.\n *\n * The only property really required is group.\n */\nexport interface LogGroupControlSettings {\n\n  /**\n   * Apply to specific group, or \"all\".\n   */\n  group: number | \"all\";\n\n  /**\n   * Set log level, undefined will not change the setting.\n   */\n  logLevel: \"Fatal\" | \"Error\" | \"Warn\" | \"Info\" | \"Debug\" | \"Trace\" | undefined;\n\n  /**\n   * Set the log format, undefined will not change the setting.\n   */\n  logFormat: \"Default\" | \"YearMonthDayTime\" | \"YearDayMonthWithFullTime\" | \"YearDayMonthTime\" | undefined;\n\n  /**\n   * Whether to show timestamp, undefined will not change the setting.\n   */\n  showTimestamp: boolean | undefined;\n\n  /**\n   * Whether to show the logger name, undefined will not change the setting.\n   */\n  showLoggerName: boolean | undefined;\n}\n\n/**\n *  Interface to control LoggerFactories (LoggerFactory and related loggers) through\n *  ordinary console (in browsers).\n */\nexport interface LoggerControl {\n\n  /**\n   * Shows help for this object.\n   */\n  help(): void;\n\n  /**\n   * Lists all registered logger factories with associated log groups with respective ids\n   */\n  listFactories(): void;\n\n  /**\n   * Show settings for LoggerFactory id (see listFactories() to get it) or null, for all.\n   * @param idFactory LoggerFactory id or all\n   */\n  showSettings(idFactory: number | \"all\"): void;\n\n  /**\n   * Reset one or all factories back to original values.\n   * @param idFactory Id factory or \"all\" for all.\n   */\n  reset(idFactory: number | \"all\"): void;\n\n  /**\n   * Return LoggerFactoryControl object. Throws error when number is invalid.\n   * @param idFactory Id factory\n   * @returns {LoggerFactoryControl}\n   */\n  getLoggerFactoryControl(idFactory: number): LoggerFactoryControl;\n\n}\n\n/**\n * Interface to control LoggerFactory.\n */\nexport interface LoggerFactoryControl {\n\n  /**\n   * Shows help\n   */\n  help(): void;\n\n  /**\n   * Shows an example of usage.\n   */\n  example(): void;\n\n  /**\n   * Prints settings for given group id, \"all\" for all group.\n   */\n  showSettings(id: number | \"all\"): void;\n\n  /**\n   * Apply new settings, see LogGroupControlSettings for details.\n   * @param settings Settings to set\n   */\n  change(settings: LogGroupControlSettings): void;\n\n  /**\n   * Resets everything to original values, for one specific or for all groups.\n   */\n  reset(id: number | \"all\"): void;\n}\n\nexport class LoggerControlImpl implements LoggerControl {\n\n  private static _help: string =\n`\n  help(): void\n    ** Shows this help.\n\n  listFactories(): void\n    ** List all registered LoggerFactories with associated log groups with respective ids (ids can be used to target a factory and/or group).\n\n  showSettings(idFactory: number | \"all\"): void\n    ** Show log group settings for idFactory (use listFactories to find id for a LoggerFactory). If idFactory is \"all\" shows all factories.\n\n  getLoggerFactoryControl(idFactory: number): LoggerFactoryControl\n    ** Return LoggerFactoryControl when found for given idFactory or throws Error if invalid or null, get the id by using listFactories()\n\n  reset(idFactory: number | \"all\"): void\n    ** Resets given factory or all factories back to original values.\n`;\n\n  public help(): void {\n    /* tslint:disable:no-console */\n    console.log(LoggerControlImpl._help);\n    /* tslint:enable:no-console */\n  }\n\n  public listFactories(): void {\n    const rtSettingsFactories = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\n    const result = new StringBuilder();\n    result.appendLine(\"Registered LoggerFactories (index / name)\");\n    for (let i = 0; i < rtSettingsFactories.length; i++) {\n      const rtSettingsFactory = rtSettingsFactories[i];\n      result.append(\"  \" + i).append(\": \" + rtSettingsFactory.getName() + \"\\n\");\n    }\n    /* tslint:disable:no-console */\n    console.log(result.toString());\n    /* tslint:enable:no-console */\n  }\n\n  public showSettings(id: number | \"all\" = \"all\"): void {\n    const result: Array<TuplePair<number, LoggerFactoryRuntimeSettings>> = [];\n\n    if (id === \"all\") {\n      let idx = 0;\n      LoggerControlImpl._getRuntimeSettingsLoggerFactories().forEach((item) => {\n        result.push(new TuplePair(idx++, item));\n      });\n    }\n    else {\n      const settings = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\n      if (id >= 0 && id < settings.length) {\n        result.push(new TuplePair(id, settings[id]));\n      }\n      else {\n        throw new Error(\"Requested number: \" + id + \" was not found.\");\n      }\n    }\n\n    for (const setting of result) {\n      /* tslint:disable:no-console */\n      console.log(\"  LoggerFactory: \" + setting.y.getName() + \" (id=\" + setting.x + \")\");\n      const logGroupRuntimeSettings = setting.y.getLogGroupRuntimeSettings();\n      for (let g = 0; g < logGroupRuntimeSettings.length; g++) {\n        const groupSetting = logGroupRuntimeSettings[g];\n        console.log(\"     LogGroup: (id=\" + g + \")\");\n        console.log(\"       RegExp: \" + groupSetting.logGroupRule.regExp.source);\n        console.log(\"       Level: \" + LogLevel[groupSetting.level].toString());\n        console.log(\"       LoggerType: \" + LoggerType[groupSetting.loggerType].toString());\n      }\n      /* tslint:enable:no-console */\n    }\n  }\n\n  public reset(idFactory: number | \"all\" = \"all\"): void {\n    const loggerFactoriesSettings = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\n    let result: LoggerFactoryRuntimeSettings[] = [];\n    if (idFactory === \"all\") {\n      result = loggerFactoriesSettings;\n    }\n    else {\n      if (idFactory >= 0 && idFactory < loggerFactoriesSettings.length) {\n        result.push(loggerFactoriesSettings[idFactory]);\n      }\n    }\n\n    result.forEach((setting) => {\n      /* tslint:disable:no-console */\n      console.log(\"Reset all settings for factory \" + idFactory);\n      /* tslint:enable:no-console */\n      const control = new LoggerFactoryControlImpl(setting);\n      control.reset();\n    });\n  }\n\n  public getLoggerFactoryControl(idFactory: number): LoggerFactoryControl {\n    const loggerFactoriesSettings = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\n    if (idFactory >= 0 &&  idFactory < loggerFactoriesSettings.length) {\n      return new LoggerFactoryControlImpl(loggerFactoriesSettings[idFactory]);\n    }\n    throw new Error(\"idFactory is invalid (less than 0) or non existing id.\");\n  }\n\n  private static _getRuntimeSettingsLoggerFactories(): LoggerFactoryRuntimeSettings[] {\n    return LoggerControlImpl._getSettings().getRuntimeSettingsForLoggerFactories();\n  }\n\n  private static _getSettings(): LFServiceRuntimeSettings {\n    return LFService.getRuntimeSettings();\n  }\n}\n\nclass LoggerFactoryControlImpl implements LoggerFactoryControl {\n\n  private static _help: string =\n    `\n  help(): void\n    ** Shows this help.\n\n  example(): void\n    ** Shows an example of usage.\n\n  showSettings(id: number | \"all\"): void\n    ** Prints settings for given group id, \"all\" for all group.\n\n  change(settings: LogGroupControlSettings): void\n    ** Changes the current settings for one or all log groups.\n    **\n       LogGroupControlSettings, properties of object:\n         group: number | \"all\"\n           ** Apply to specific group, or \"all\".\n           ** Required\n\n         logLevel: \"Fatal\" | \"Error\" | \"Warn\" | \"Info\" | \"Debug\" | \"Trace\" | undefined\n           ** Set log level, undefined will not change the setting.\n           ** Optional\n\n         logFormat: \"Default\" | \"YearMonthDayTime\" | \"YearDayMonthWithFullTime\" | \"YearDayMonthTime\" | undefined\n           ** Set the log format, undefined will not change the setting.\n           ** Optional\n\n         showTimestamp: boolean | undefined\n           ** Whether to show timestamp, undefined will not change the setting.\n           ** Optional\n\n         showLoggerName: boolean | undefined\n           ** Whether to show the logger name, undefined will not change the setting.\n           ** Optional\n\n  reset(id: number | \"all\"): void\n    ** Resets everything to original values, for one specific or for all groups.\n\n  help():\n    ** Shows this help.\n`;\n\n  private static _example: string =\n    `\n  Examples:\n    change({group: \"all\", logLevel: \"Info\"})\n      ** Change loglevel to Info for all groups.\n\n    change({group: 1, recursive:false, logLevel: \"Warn\"})\n      ** Change logLevel for group 1 to Warn.\n\n    change({group: \"all\", logLevel: \"Debug\", logFormat: \"YearDayMonthTime\", showTimestamp:false, showLoggerName:false})\n      ** Change loglevel to Debug for all groups, apply format, do not show timestamp and logger names.\n`;\n\n  private _settings: LoggerFactoryRuntimeSettings;\n\n  public constructor(settings: LoggerFactoryRuntimeSettings) {\n    this._settings = settings;\n  }\n\n  public help(): void {\n    /* tslint:disable:no-console */\n    console.log(LoggerFactoryControlImpl._help);\n    /* tslint:enable:no-console */\n  }\n\n  public example(): void {\n    /* tslint:disable:no-console */\n    console.log(LoggerFactoryControlImpl._example);\n    /* tslint:enable:no-console */\n  }\n\n  public showSettings(id: number | \"all\" = \"all\"): void {\n    const result = new StringBuilder();\n    const logGroupRuntimeSettings = this._settings.getLogGroupRuntimeSettings();\n\n    result.appendLine(\"Registered LogGroups (index / expression)\");\n    for (let i = 0; i < logGroupRuntimeSettings.length; i++) {\n      const logGroupRuntimeSetting = logGroupRuntimeSettings[i];\n      result.appendLine(\"  \" + i + \": \" + logGroupRuntimeSetting.logGroupRule.regExp.source + \", logLevel=\" +\n        LogLevel[logGroupRuntimeSetting.level].toString() + \", showTimestamp=\" + logGroupRuntimeSetting.logFormat.showTimeStamp +\n        \", showLoggerName=\" + logGroupRuntimeSetting.logFormat.showLoggerName +\n        \", format=\" + DateFormatEnum[logGroupRuntimeSetting.logFormat.dateFormat.formatEnum].toString());\n    }\n    /* tslint:disable:no-console */\n    console.log(result.toString());\n    /* tslint:enable:no-console */\n  }\n\n  public change(settings: LogGroupControlSettings): void {\n\n    const logGroupRuntimeSettings = this._getLogGroupRunTimeSettingsFor(settings.group);\n\n    let logLevel: LogLevel | null = null;\n    let formatEnum: DateFormatEnum | null = null;\n    let showLoggerName: boolean | null = null;\n    let showTimestamp: boolean | null = null;\n\n    let result: string | null = null;\n\n    const addResult = (value: string) => {\n      if (result !== null) {\n        result += \", \";\n      }\n      if (result === null) {\n        result = value;\n      }\n      else {\n        result += value;\n      }\n    };\n\n    if (typeof settings.logLevel === \"string\") {\n      logLevel = LogLevel.fromString(settings.logLevel);\n      addResult(\"logLevel=\" + settings.logLevel);\n    }\n    if (typeof settings.logFormat === \"string\") {\n      formatEnum = DateFormatEnum.fromString(settings.logFormat);\n      addResult(\"logFormat=\" + settings.logFormat);\n    }\n    if (typeof settings.showLoggerName === \"boolean\") {\n      showLoggerName = settings.showLoggerName;\n      addResult(\"showLoggerName=\" + settings.showLoggerName);\n    }\n    if (typeof settings.showTimestamp === \"boolean\") {\n      showTimestamp = settings.showTimestamp;\n      addResult(\"showTimestamp=\" + settings.showTimestamp);\n    }\n\n    logGroupRuntimeSettings.forEach((s) => {\n      if (logLevel !== null) {\n        s.level = logLevel;\n      }\n      if (formatEnum !== null) {\n        s.logFormat.dateFormat.formatEnum = formatEnum;\n      }\n      if (showTimestamp !== null) {\n        s.logFormat.showTimeStamp = showTimestamp;\n      }\n      if (showLoggerName !== null) {\n        s.logFormat.showLoggerName = showLoggerName;\n      }\n    });\n\n    /* tslint:disable:no-console */\n    console.log(\"Applied changes: \" + result + \" to log groups '\" + settings.group + \"'.\");\n    /* tslint:enable:no-console */\n  }\n\n  public reset(idGroup: number | \"all\" = \"all\"): void {\n    const settings = this._getLogGroupRunTimeSettingsFor(idGroup);\n    for (const setting of settings) {\n      setting.level = setting.logGroupRule.level;\n      setting.logFormat.showTimeStamp = setting.logGroupRule.logFormat.showTimeStamp;\n      setting.logFormat.showLoggerName = setting.logGroupRule.logFormat.showLoggerName;\n      setting.logFormat.dateFormat.formatEnum = setting.logGroupRule.logFormat.dateFormat.formatEnum;\n    }\n    /* tslint:disable:no-console */\n    console.log(\"Reset all settings for group \" + idGroup);\n    /* tslint:enable:no-console */\n  }\n\n  private _getLogGroupRunTimeSettingsFor(idGroup: number | \"all\"): LogGroupRuntimeSettings[] {\n    let settings: LogGroupRuntimeSettings[] = [];\n    if (idGroup === \"all\") {\n      settings = this._settings.getLogGroupRuntimeSettings();\n    }\n    else {\n      this._checkIndex(idGroup);\n      settings.push(this._settings.getLogGroupRuntimeSettings()[idGroup]);\n    }\n    return settings;\n  }\n\n  private _checkIndex(index: number): void {\n    if (index < 0 || index >= this._settings.getLogGroupRuntimeSettings().length) {\n      throw new Error(\"Invalid index, use listLogGroups to find out a valid one.\");\n    }\n  }\n}\n","import {CategoryServiceImpl} from \"../log/category/CategoryService\";\nimport {DateFormatEnum, LoggerType, LogLevel} from \"../log/LoggerOptions\";\nimport {StringBuilder} from \"../utils/DataStructures\";\nimport {Category} from \"../log/category/Category\";\n\n/**\n * Allows to change the settings for one or all Categories.\n * Options will be applied only if set, undefined options are ignored.\n *\n * The only properties required are recursive (to apply recursively to child categories or not) and idCategory.\n */\nexport interface CategoryServiceControlSettings {\n\n  /**\n   * Apply to child categories (true) or not.\n   */\n  recursive: boolean;\n\n  /**\n   * Apply to specific category, or \"all\".\n   */\n  category: number | \"all\";\n\n  /**\n   * Set log level, undefined will not change the setting.\n   */\n  logLevel: \"Fatal\" | \"Error\" | \"Warn\" | \"Info\" | \"Debug\" | \"Trace\" | undefined;\n\n  /**\n   * Set the log format, undefined will not change the setting.\n   */\n  logFormat: \"Default\" | \"YearMonthDayTime\" | \"YearDayMonthWithFullTime\" | \"YearDayMonthTime\" | undefined;\n\n  /**\n   * Whether to show timestamp, undefined will not change the setting.\n   */\n  showTimestamp: boolean | undefined;\n\n  /**\n   * Whether to show the category name, undefined will not change the setting.\n   */\n  showCategoryName: boolean | undefined;\n}\n\n/**\n * Interface to control CategoryService and relatedm, through\n * ordinary console in browsers.\n */\nexport interface CategoryServiceControl {\n\n  /**\n   * Shows help\n   */\n  help(): void;\n\n  /**\n   * Shows an example of usage.\n   */\n  example(): void;\n\n  /**\n   * Prints settings for given category id, when \"all\" for all categories.\n   */\n  showSettings(id: number | \"all\"): void;\n\n  /**\n   * Apply new settings, see CategoryServiceControlSettings for details.\n   * @param settings Settings to set\n   */\n  change(settings: CategoryServiceControlSettings): void;\n\n  /**\n   * Resets everything to original values, for one specific or for all categories.\n   */\n  reset(id: number | \"all\"): void;\n}\n\n/**\n * Implementation class for CategoryServiceControl.\n */\nexport class CategoryServiceControlImpl implements CategoryServiceControl {\n\n  private static _help: string =\n    `\n  help(): void\n    ** Shows this help.\n\n  example(): void\n    ** Shows an example on how to use this.\n\n  showSettings(id: number | \"all\" = \"all\"): void\n    ** Shows settings for a specific category, or for all. The id of categories can be found by calling this method without parameter.\n\n  change(settings: CategoryServiceControlSettings): void\n    ** Changes the current settings for one or all categories.\n    **\n       CategoryServiceControlSettings, properties of object:\n         category: number | \"all\"\n           ** Apply to specific category, or \"all\".\n           ** Required\n\n         recursive: boolean\n           ** Apply to child categories (true) or not.\n           ** Required\n\n         logLevel: \"Fatal\" | \"Error\" | \"Warn\" | \"Info\" | \"Debug\" | \"Trace\" | undefined\n           ** Set log level, undefined will not change the setting.\n           ** Optional\n\n         logFormat: \"Default\" | \"YearMonthDayTime\" | \"YearDayMonthWithFullTime\" | \"YearDayMonthTime\" | undefined\n           ** Set the log format, undefined will not change the setting.\n           ** Optional\n\n         showTimestamp: boolean | undefined\n           ** Whether to show timestamp, undefined will not change the setting.\n           ** Optional\n\n         showCategoryName: boolean | undefined\n           ** Whether to show the category name, undefined will not change the setting.\n           ** Optional\n\n   reset(id: number | \"all\"): void\n     ** Resets everything to original values, for one specific or for all categories.\n`;\n\n  private static _example: string =\n`\n  Examples:\n    change({category: \"all\", recursive:true, logLevel: \"Info\"})\n      ** Change loglevel to Info for all categories, apply to child categories as well.\n\n    change({category: 1, recursive:false, logLevel: \"Warn\"})\n      ** Change logLevel for category 1, do not recurse.\n\n    change({category: \"all\", recursive:true, logLevel: \"Debug\", logFormat: \"YearDayMonthTime\", showTimestamp:false, showCategoryName:false})\n      ** Change loglevel to Debug for all categories, apply format, do not show timestamp and category names - recursively to child categories.\n\n`;\n\n  public help(): void {\n    /* tslint:disable:no-console */\n    console.log(CategoryServiceControlImpl._help);\n    /* tslint:enable:no-console */\n  }\n\n  public example(): void {\n    /* tslint:disable:no-console */\n    console.log(CategoryServiceControlImpl._example);\n    /* tslint:enable:no-console */\n  }\n\n  public showSettings(id: number | \"all\" = \"all\"): void {\n    const result = new StringBuilder();\n    const service = CategoryServiceControlImpl._getCategoryService();\n    const categories = CategoryServiceControlImpl._getCategories(id);\n\n    categories.forEach((category) => {\n      CategoryServiceControlImpl._processCategory(service, category, result, 0);\n    });\n\n    /* tslint:disable:no-console */\n    console.log(result.toString());\n    /* tslint:enable:no-console */\n  }\n\n  public change(settings: CategoryServiceControlSettings): void {\n    const service = CategoryServiceControlImpl._getCategoryService();\n    const categories = CategoryServiceControlImpl._getCategories(settings.category);\n\n    let logLevel: LogLevel | null = null;\n    let formatEnum: DateFormatEnum | null = null;\n    let showCategoryName: boolean | null = null;\n    let showTimestamp: boolean | null = null;\n\n    let result: string | null = null;\n\n    const addResult = (value: string) => {\n      if (result !== null) {\n        result += \", \";\n      }\n      if (result === null) {\n        result = value;\n      }\n      else {\n        result += value;\n      }\n    };\n\n    addResult(\"recursive=\" + settings.recursive);\n\n    if (typeof settings.logLevel === \"string\") {\n      logLevel = LogLevel.fromString(settings.logLevel);\n      addResult(\"logLevel=\" + settings.logLevel);\n    }\n    if (typeof settings.logFormat === \"string\") {\n      formatEnum = DateFormatEnum.fromString(settings.logFormat);\n      addResult(\"logFormat=\" + settings.logFormat);\n    }\n    if (typeof settings.showCategoryName === \"boolean\") {\n      showCategoryName = settings.showCategoryName;\n      addResult(\"showCategoryName=\" + settings.showCategoryName);\n    }\n    if (typeof settings.showTimestamp === \"boolean\") {\n      showTimestamp = settings.showTimestamp;\n      addResult(\"showTimestamp=\" + settings.showTimestamp);\n    }\n\n    const applyChanges = (cat: Category) => {\n      const categorySettings = service.getCategorySettings(cat);\n      // Should not happen but make tslint happy\n      if (categorySettings !== null) {\n        if (logLevel !== null) {\n          categorySettings.logLevel = logLevel;\n        }\n        if (formatEnum !== null) {\n          categorySettings.logFormat.dateFormat.formatEnum = formatEnum;\n        }\n        if (showTimestamp !== null) {\n          categorySettings.logFormat.showTimeStamp = showTimestamp;\n        }\n        if (showCategoryName !== null) {\n          categorySettings.logFormat.showCategoryName = showCategoryName;\n        }\n      }\n    };\n    categories.forEach((cat) => CategoryServiceControlImpl._applyToCategory(cat, settings.recursive, applyChanges));\n\n    /* tslint:disable:no-console */\n    console.log(\"Applied changes: \" + result + \" to categories '\" + settings.category + \"'.\");\n    /* tslint:enable:no-console */\n  }\n\n  public reset(id: number | \"all\" = \"all\"): void {\n    const service = CategoryServiceControlImpl._getCategoryService();\n    const categories = CategoryServiceControlImpl._getCategories(id);\n\n    const applyChanges = (cat: Category) => {\n      const categorySettings = service.getCategorySettings(cat);\n      const original = service.getOriginalCategorySettings(cat);\n\n      // Should not happen but make tslint happy\n      if (categorySettings !== null && original !== null) {\n        categorySettings.logLevel = original.logLevel;\n        categorySettings.logFormat.dateFormat.formatEnum = original.logFormat.dateFormat.formatEnum;\n        categorySettings.logFormat.showTimeStamp = original.logFormat.showTimeStamp;\n        categorySettings.logFormat.showCategoryName = original.logFormat.showCategoryName;\n      }\n    };\n\n    categories.forEach((cat) => CategoryServiceControlImpl._applyToCategory(cat, true, applyChanges));\n\n    /* tslint:disable:no-console */\n    console.log(\"Applied reset to category: \" + id + \".\");\n    /* tslint:enable:no-console */\n  }\n\n  private static _processCategory(service: CategoryServiceImpl, category: Category, result: StringBuilder, indent: number): void {\n    const settings = service.getCategorySettings(category);\n    if (settings !== null) {\n      result.append(\"  \" + category.id + \": \");\n      if (indent > 0) {\n        for (let i = 0; i < indent; i++) {\n          result.append(\"  \");\n        }\n      }\n      result.append(category.name + \" (\" + LogLevel[settings.logLevel].toString() + \"@\" + LoggerType[settings.loggerType].toString() + \")\\n\");\n\n      if (category.children.length > 0) {\n        category.children.forEach((child) => {\n          CategoryServiceControlImpl._processCategory(service, child, result, indent + 1);\n        });\n      }\n    }\n  }\n\n  private static _applyToCategory(category: Category, recursive: boolean, apply: (cat: Category) => void) {\n    apply(category);\n    if (recursive) {\n      category.children.forEach((child) => {\n        CategoryServiceControlImpl._applyToCategory(child, recursive, apply);\n      });\n    }\n  }\n\n  private static _getCategoryService(): CategoryServiceImpl {\n    return CategoryServiceImpl.getInstance();\n  }\n\n  private static _getCategories(idCategory: number | \"all\"): Category[] {\n    const service = CategoryServiceControlImpl._getCategoryService();\n\n    let categories: Category[] = [];\n    if (idCategory === \"all\") {\n      categories = service.getRootCategories();\n    }\n    else {\n      const category = service.getCategoryById(idCategory);\n      if (category === null) {\n        throw new Error(\"Failed to find category with id \" + idCategory);\n      }\n      categories.push(category);\n    }\n    return categories;\n  }\n\n}\n","import {LogLevel} from \"../LoggerOptions\";\nimport {CategoryLogger} from \"./CategoryLogger\";\nimport {CategoryServiceImpl} from \"./CategoryService\";\nimport {ErrorType, MessageType} from \"../standard/Logger\";\n\n/**\n * Category for use with categorized logging.\n * At minimum you need one category, which will serve as the root category.\n * You can create child categories (like a tree). You can have multiple root\n * categories.\n */\nexport class Category implements CategoryLogger {\n\n  private static currentId: number = 1;\n\n  private _id: number;\n\n  private _name: string;\n  private _parent: Category | null;\n  private _children: Category[] = [];\n  private _logLevel: LogLevel = LogLevel.Error;\n\n  private _logger: CategoryLogger;\n\n  public constructor(name: string, parent: Category | null = null) {\n    if (name.indexOf(\"#\") !== -1) {\n      throw new Error(\"Cannot use # in a name of a Category\");\n    }\n\n    this._id = Category.nextId();\n    this._name = name;\n    this._parent = parent;\n    if (this._parent !== null) {\n      this._parent._children.push(this);\n    }\n    CategoryServiceImpl.getInstance().registerCategory(this);\n  }\n\n  public get name(): string {\n    return this._name;\n  }\n\n  public get parent(): Category | null {\n    return this._parent;\n  }\n\n  public get children(): Category[] {\n    return this._children;\n  }\n\n  public get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  public trace(msg: MessageType, ...categories: Category[]): void {\n    this.loadCategoryLogger();\n    this._logger.trace(msg, ...categories);\n  }\n\n  public debug(msg: MessageType, ...categories: Category[]): void {\n    this.loadCategoryLogger();\n    this._logger.debug(msg, ...categories);\n  }\n\n  public info(msg: MessageType, ...categories: Category[]): void {\n    this.loadCategoryLogger();\n    this._logger.info(msg, ...categories);\n  }\n\n  public warn(msg: MessageType, ...categories: Category[]): void {\n    this.loadCategoryLogger();\n    this._logger.warn(msg, ...categories);\n  }\n\n  public error(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\n    this.loadCategoryLogger();\n    this._logger.error(msg, error, ...categories);\n  }\n\n  public fatal(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\n    this.loadCategoryLogger();\n    this._logger.fatal(msg, error, ...categories);\n  }\n\n  public resolved(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\n    this.loadCategoryLogger();\n    this._logger.resolved(msg, error, ...categories);\n  }\n\n  public log(level: LogLevel, msg: MessageType, error: ErrorType, ...categories: Category[]): void {\n    this.loadCategoryLogger();\n    this._logger.log(level, msg, error, ...categories);\n  }\n\n  public getCategoryPath(): string {\n    let result = this.name;\n    let cat: Category | null = this.parent;\n\n    while (cat != null) {\n      result = cat.name + \"#\" + result;\n\n      cat = cat.parent;\n    }\n    return result;\n  }\n\n  /**\n   * Returns the id for this category (this\n   * is for internal purposes only).\n   * @returns {number} Id\n   */\n  public get id(): number {\n    return this._id;\n  }\n\n  private loadCategoryLogger() {\n    if (!this._logger) {\n      this._logger = CategoryServiceImpl.getInstance().getLogger(this);\n    }\n\n    if (typeof this._logger === \"undefined\" || this._logger === null) {\n      throw new Error(\"Failed to load a logger for category (should not happen): \" + this.name);\n    }\n  }\n\n  private static nextId(): number {\n    return Category.currentId++;\n  }\n}\n","import {CategoryLogger} from \"./CategoryLogger\";\nimport {Category} from \"./Category\";\nimport {RuntimeSettings} from \"./RuntimeSettings\";\nimport {CategoryConfiguration} from \"./CategoryConfiguration\";\nimport {CategoryServiceImpl} from \"./CategoryService\";\n\n/**\n * Categorized service for logging, where logging is bound to categories which\n * can log horizontally through specific application logic (services, group(s) of components etc).\n * For the standard way of logging like most frameworks do these days, use LFService instead.\n * If you want fine grained control to divide sections of your application in\n * logical units to enable/disable logging for, this is the service you want to use instead.\n * Also for this type a browser plugin will be available.\n */\nexport class CategoryServiceFactory {\n\n  private constructor() {\n    // Private constructor.\n  }\n\n  /**\n   * Return a CategoryLogger for given ROOT category (thus has no parent).\n   * You can only retrieve loggers for their root, when logging\n   * you specify to log for what (child)categories.\n   * @param root Category root (has no parent)\n   * @returns {CategoryLogger}\n   */\n  public static getLogger(root: Category): CategoryLogger {\n    return CategoryServiceImpl.getInstance().getLogger(root);\n  }\n\n  /**\n   * Clears everything, any registered (root)categories and loggers\n   * are discarded. Resets to default configuration.\n   */\n  public static clear() {\n    return CategoryServiceImpl.getInstance().clear();\n  }\n\n  /**\n   * Set the default configuration. New root loggers created get this\n   * applied. If you want to reset all current loggers to have this\n   * applied as well, pass in reset=true (the default is false). All\n   * categories runtimesettings will be reset then as well.\n   * @param config The new default configuration\n   * @param reset If true, will reset *all* runtimesettings for all loggers/categories to these. Default is true.\n   */\n  public static setDefaultConfiguration(config: CategoryConfiguration, reset: boolean = true): void {\n    CategoryServiceImpl.getInstance().setDefaultConfiguration(config, reset);\n  }\n\n  /**\n   * Set new configuration settings for a category (and possibly its child categories)\n   * @param config Config\n   * @param category Category\n   * @param applyChildren True to apply to child categories, defaults to false.\n   */\n  public static setConfigurationCategory(config: CategoryConfiguration, category: Category, applyChildren: boolean = false): void {\n    CategoryServiceImpl.getInstance().setConfigurationCategory(config, category, applyChildren);\n  }\n}\n","/**\n * Module containing bunch of JSON related stuff.\n */\nimport {LogLevel} from \"../log/LoggerOptions\";\nimport {SimpleMap, StringBuilder} from \"./DataStructures\";\nimport {Category} from \"../log/category/Category\";\n\nexport interface JSONType<T> {\n\n  getValue(): T;\n  toString(): string;\n\n}\n\nexport type ArrayType = boolean | string | number | JSONObject | null;\n\nabstract class JSONTypeImpl<T> implements JSONType<T> {\n\n  private _value: T;\n\n  constructor(value: T) {\n    this._value = value;\n  }\n\n  public getValue(): T {\n    return this._value;\n  }\n\n  public toString(): string {\n    const value = this.getValue();\n    if (value != null) {\n      return value.toString();\n    }\n    return \"null\";\n  }\n\n}\n\nclass JSONBooleanType extends JSONTypeImpl<boolean> {\n\n  constructor(value: boolean) {\n    super(value);\n  }\n}\n\nclass JSONNumberType extends JSONTypeImpl<number> {\n\n  constructor(value: number) {\n    super(value);\n  }\n\n}\n\nclass JSONStringType extends JSONTypeImpl<string> {\n\n  constructor(value: string) {\n    super(value);\n  }\n\n  public toString(): string {\n    const value = this.getValue();\n    if (value != null) {\n      return JSON.stringify(value.toString());\n    }\n    return \"null\";\n  }\n}\n\nclass JSONObjectType extends JSONTypeImpl<JSONObject> {\n\n  constructor(value: JSONObject) {\n    super(value);\n  }\n}\n\nclass JSONArrayType extends JSONTypeImpl<JSONArray<ArrayType>> {\n\n  constructor(value: JSONArray<ArrayType>) {\n    super(value);\n  }\n\n  public toString(): string {\n    const value = this.getValue();\n    if (value != null) {\n      return value.toString();\n    }\n    return \"null\";\n  }\n}\n\nclass JSONNullType extends JSONTypeImpl<null> {\n\n  constructor() {\n    super(null);\n  }\n\n  public toString(): string {\n    return \"null\";\n  }\n}\n\nclass JSONTypeConverter {\n\n  public static toJSONType(value: ArrayType): JSONType<ArrayType> {\n    if (value === null) {\n      return new JSONNullType();\n    }\n    if (typeof value === \"string\") {\n      return new JSONStringType(value);\n    }\n    if (typeof value === \"number\") {\n      return new JSONNumberType(value);\n    }\n    if (typeof value === \"boolean\") {\n      return new JSONBooleanType(value);\n    }\n    if (value instanceof JSONObject) {\n      return new JSONObjectType(value);\n    }\n    throw new Error(\"Type not supported for value: \" + value);\n  }\n}\n\nexport class JSONObject {\n\n  private values: SimpleMap<JSONTypeImpl<any>> = new SimpleMap<JSONTypeImpl<any>>();\n\n  public addBoolean(name: string, value: boolean): JSONObject {\n    this.checkName(name);\n    JSONObject.checkValue(value);\n    this.values.put(name, new JSONBooleanType(value));\n    return this;\n  }\n\n  public addNumber(name: string, value: number): JSONObject {\n    this.checkName(name);\n    JSONObject.checkValue(value);\n    this.values.put(name, new JSONNumberType(value));\n    return this;\n  }\n\n  public addString(name: string, value: string): JSONObject {\n    this.checkName(name);\n    JSONObject.checkValue(value);\n    this.values.put(name, new JSONStringType(value));\n    return this;\n  }\n\n  public addNull(name: string): JSONObject {\n    this.checkName(name);\n    this.values.put(name, new JSONNullType());\n    return this;\n  }\n\n  public addArray(name: string, array: JSONArray<ArrayType>): JSONObject {\n    this.checkName(name);\n    JSONObject.checkValue(array);\n    if (array == null) {\n      throw new Error(\"Cannot add array as null\");\n    }\n    this.values.put(name, new JSONArrayType(array));\n    return this;\n  }\n\n  public addObject(name: string, object: JSONObject): JSONObject {\n    this.checkName(name);\n    JSONObject.checkValue(object);\n    if (object == null) {\n      throw new Error(\"Cannot add object as null\");\n    }\n    this.values.put(name, new JSONObjectType(object));\n    return this;\n  }\n\n  public toString(pretty: boolean = false): string {\n    let comma = false;\n    const buffer = new StringBuilder();\n    buffer.append(\"{\");\n    this.values.keys().forEach((key: string) => {\n      const value = this.values.get(key);\n      if (value != null) {\n        if (comma) {\n          buffer.append(\",\");\n        }\n\n        buffer.append('\"').append(key).append('\":').append(value.toString());\n        comma = true;\n      }\n    });\n    buffer.append(\"}\");\n    return buffer.toString();\n  }\n\n  private checkName(name: string): void {\n    if (name == null || name === undefined) {\n      throw new Error(\"Name is null or undefined\");\n    }\n    if (this.values.exists(name)) {\n      throw new Error(\"Name \" + name + \" is already present for this object\");\n    }\n  }\n\n  private static checkValue(value: any): void {\n    if (value === undefined) {\n      throw new Error(\"Value is undefined\");\n    }\n  }\n}\n\nexport class JSONArray<T extends ArrayType> {\n\n  private objects: Array<JSONType<ArrayType>> = [];\n\n  public add(object: T): JSONArray<T> {\n    if (object === undefined) {\n      throw new Error(\"Object is not allowed to be undefined\");\n    }\n    this.objects.push(JSONTypeConverter.toJSONType(object));\n    return this;\n  }\n\n  public toString(pretty: boolean = false): string {\n    const buffer = new StringBuilder();\n    buffer.append(\"[\");\n    this.objects.forEach((value: JSONType<T>, index: number) => {\n      if (index > 0) {\n        buffer.append(\",\");\n      }\n      buffer.append(value.toString());\n    });\n    buffer.append(\"]\");\n\n    return buffer.toString();\n  }\n}\n\n/**\n * Utility class that helps us convert things to and from json (not for normal usage).\n */\nexport class JSONHelper {\n\n  public static categoryToJSON(cat: Category, recursive: boolean): JSONObject {\n    /*\n     {\n     \"categories\":\n     [\n     { id=1,\n     name: \"x\",\n     parent: null,\n     logLevel: \"Error\"\n     },\n     { id=2,\n     name: \"y\",\n     parent: 1,\n     logLevel: \"Error\"\n     }\n     ]\n     }\n     */\n\n    const arr = new JSONArray<JSONObject>();\n    JSONHelper._categoryToJSON(cat, arr, recursive);\n    const object = new JSONObject();\n    object.addArray(\"categories\", arr);\n    return object;\n  }\n\n  private static _categoryToJSON(cat: Category, arr: JSONArray<JSONObject>, recursive: boolean): void {\n    const object = new JSONObject();\n    object.addNumber(\"id\", cat.id);\n    object.addString(\"name\", cat.name);\n    object.addString(\"logLevel\", LogLevel[cat.logLevel].toString());\n    if (cat.parent != null) {\n      object.addNumber(\"parent\", cat.parent.id);\n    }\n    else {\n      object.addNull(\"parent\");\n    }\n\n    arr.add(object);\n\n    if (recursive) {\n      cat.children.forEach((child: Category) => {\n        JSONHelper._categoryToJSON(child, arr, recursive);\n      });\n    }\n  }\n}\n","import {ExtensionHelper} from \"./extension/ExtensionHelper\";\nimport {LoggerControl, LoggerControlImpl} from \"./control/LogGroupControl\";\nimport {CategoryServiceControl, CategoryServiceControlImpl} from \"./control/CategoryServiceControl\";\n\n// Public stuff we export for extension\nexport * from \"./extension/MessagesToExtensionJSON\";\nexport * from \"./extension/MessagesFromExtensionJSON\";\nexport * from \"./extension/ExtensionMessageJSON\";\nexport {ExtensionHelper} from \"./extension/ExtensionHelper\";\n\n// Category related\nexport {AbstractCategoryLogger, CategoryLogMessage} from \"./log/category/AbstractCategoryLogger\";\nexport {CategoryConsoleLoggerImpl} from \"./log/category/CategoryConsoleLoggerImpl\";\nexport {CategoryDelegateLoggerImpl} from \"./log/category/CategoryDelegateLoggerImpl\";\nexport {Category} from \"./log/category/Category\";\nexport {CategoryLogger} from \"./log/category/CategoryLogger\";\nexport {CategoryRuntimeSettings} from \"./log/category/CategoryRuntimeSettings\";\nexport {CategoryConfiguration} from \"./log/category/CategoryConfiguration\";\nexport {RuntimeSettings} from \"./log/category/RuntimeSettings\";\nexport {CategoryMessageBufferLoggerImpl} from \"./log/category/CategoryMessageBufferImpl\";\nexport {CategoryServiceFactory} from \"./log/category/CategoryServiceFactory\";\n\n// LoggerFactory related.\nexport {Logger, MessageType, ErrorType} from \"./log/standard/Logger\";\nexport {LoggerFactory} from \"./log/standard/LoggerFactory\";\nexport {LoggerFactoryOptions} from \"./log/standard/LoggerFactoryOptions\";\nexport {LogGroupRule} from \"./log/standard/LogGroupRule\";\nexport {LFService} from \"./log/standard/LFService\";\nexport {AbstractLogger, LogMessage} from \"./log/standard/AbstractLogger\";\nexport {ConsoleLoggerImpl} from \"./log/standard/ConsoleLoggerImpl\";\nexport {MessageBufferLoggerImpl} from \"./log/standard/MessageBufferLoggerImpl\";\nexport {CategoryLogFormat, DateFormat, DateFormatEnum, LogFormat, LoggerType, LogLevel} from \"./log/LoggerOptions\";\nexport {LogData} from \"./log/LogData\";\n\n// Console controller related\nexport {CategoryServiceControl, CategoryServiceControlSettings} from \"./control/CategoryServiceControl\";\nexport {LoggerControl, LoggerFactoryControl, LogGroupControlSettings} from \"./control/LogGroupControl\";\n\n// Utilities\nexport {SimpleMap, LinkedList} from \"./utils/DataStructures\";\nexport * from \"./utils/JSONHelper\";\nexport {MessageFormatUtils} from \"./utils/MessageUtils\";\n\n/*\n Functions to export on TSL libarary var.\n*/\n\n// Export help function\nexport function help(): void {\n  /* tslint:disable:no-console */\n  console.log(\n`help()\n   ** Shows this help\n\n getLogControl(): LoggerControl\n   ** Returns LoggerControl Object, use to dynamically change loglevels for log4j logging.\n   ** Call .help() on LoggerControl object for available options.\n\n getCategoryControl(): CategoryServiceControl\n   ** Returns CategoryServiceControl Object, use to dynamically change loglevels for category logging.\n   ** Call .help() on CategoryServiceControl object for available options.\n`\n  );\n  /* tslint:enable:no-console */\n}\n\n// Export LogControl function (log4j)\nexport function getLogControl(): LoggerControl {\n  return new LoggerControlImpl();\n}\n\n// Export CategoryControl function\nexport function getCategoryControl(): CategoryServiceControl {\n  return new CategoryServiceControlImpl();\n}\n"],"names":["tslib_1.__extends","this","require$$0","ArraySet","quickSort","require$$1","base64VLQ","require$$2","LoggerOptions_1","ST","DataStructures_1","MessageUtils_1","CategoryMessageBufferImpl_1","CategoryService_1","LogGroupControl_1","CategoryServiceControl_1"],"mappings":"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}