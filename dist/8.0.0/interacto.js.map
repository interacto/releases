{"version":3,"file":"interacto.js","sources":["../src/api/binder/BaseBinderBuilder.ts","../src/api/binder/When.ts","../src/api/binding/Bindings.ts","../src/api/fsm/EventType.ts","../src/api/fsm/OutputState.ts","../src/api/undo/TreeUndoHistory.ts","../src/api/undo/UndoHistory.ts","../src/api/undo/Undoable.ts","../src/impl/animation/DwellSpringAnimation.ts","../src/impl/command/CommandBase.ts","../src/impl/command/AnonCmd.ts","../src/impl/binder/Binder.ts","../src/impl/binding/MustBeUndoableCmdError.ts","../src/impl/binding/BindingImpl.ts","../src/impl/fsm/CancelFSMError.ts","../src/impl/binding/AnonBinding.ts","../src/impl/binder/UpdateBinder.ts","../src/impl/interaction/InteractionDataBase.ts","../src/impl/interaction/KeyDataImpl.ts","../src/impl/interaction/KeysDataImpl.ts","../src/impl/binder/KeysBinder.ts","../src/impl/fsm/TransitionBase.ts","../src/impl/fsm/MouseTransition.ts","../src/impl/fsm/ClickTransition.ts","../src/impl/fsm/StateBase.ts","../src/impl/fsm/CancellingState.ts","../src/impl/fsm/Events.ts","../src/impl/fsm/OutputStateBase.ts","../src/impl/fsm/InitState.ts","../src/impl/fsm/StdState.ts","../src/impl/fsm/TerminalState.ts","../src/impl/fsm/TimeoutTransition.ts","../src/impl/util/ArrayUtil.ts","../src/impl/fsm/FSMImpl.ts","../src/impl/interaction/InteractionBase.ts","../src/impl/interaction/PointingDataBase.ts","../src/impl/interaction/PointDataImpl.ts","../src/impl/interaction/library/Click.ts","../src/impl/interaction/PointsDataImpl.ts","../src/impl/interaction/MousePointsDataImpl.ts","../src/impl/interaction/library/Clicks.ts","../src/impl/fsm/SubFSMTransition.ts","../src/impl/interaction/library/DoubleClick.ts","../src/impl/fsm/KeyTransition.ts","../src/impl/fsm/EscapeKeyPressureTransition.ts","../src/impl/interaction/SrcTgtDataBase.ts","../src/impl/interaction/SrcTgtPointsDataImpl.ts","../src/impl/interaction/library/DragLock.ts","../src/impl/interaction/library/KeyDown.ts","../src/impl/interaction/library/KeysTyped.ts","../src/impl/interaction/library/KeyTyped.ts","../src/impl/interaction/library/KeyUp.ts","../src/impl/interaction/library/LongMouseDown.ts","../src/impl/interaction/library/MouseDown.ts","../src/impl/interaction/library/MouseUp.ts","../src/impl/fsm/TouchTransition.ts","../src/impl/interaction/TouchDataImpl.ts","../src/impl/interaction/SrcTgtTouchDataImpl.ts","../src/impl/interaction/library/TouchDnD.ts","../src/impl/fsm/ConcurrentAndFSM.ts","../src/impl/interaction/ConcurrentInteraction.ts","../src/impl/interaction/MultiTouchDataImpl.ts","../src/impl/interaction/library/MultiTouch.ts","../src/impl/interaction/InteractionBuilderImpl.ts","../src/impl/interaction/library/Pans.ts","../src/impl/interaction/TwoTouchDataImpl.ts","../src/impl/interaction/RotationTouchDataImpl.ts","../src/impl/interaction/ScaleTouchDataImpl.ts","../src/impl/interaction/TwoPanDataImpl.ts","../src/impl/interaction/GeneralTwoTouchDataImpl.ts","../src/impl/interaction/ThreeTouchDataImpl.ts","../src/impl/interaction/FourTouchDataImpl.ts","../src/impl/interaction/library/XTouch.ts","../src/impl/interaction/library/TwoPans.ts","../src/impl/checker/CheckerImpl.ts","../src/impl/binding/BindingsContext.ts","../src/impl/command/library/Redo.ts","../src/impl/command/library/Undo.ts","../src/impl/fsm/BoxCheckPressedTransition.ts","../src/impl/interaction/WidgetDataImpl.ts","../src/impl/interaction/library/BoxChecked.ts","../src/impl/fsm/ButtonPressedTransition.ts","../src/impl/interaction/library/ButtonPressed.ts","../src/impl/fsm/ColorPickedTransition.ts","../src/impl/interaction/library/ColorPicked.ts","../src/impl/fsm/ComboBoxTransition.ts","../src/impl/interaction/library/ComboBoxSelected.ts","../src/impl/fsm/DatePickedTransition.ts","../src/impl/interaction/library/DatePicked.ts","../src/impl/interaction/library/DnD.ts","../src/impl/fsm/HyperLinkTransition.ts","../src/impl/interaction/library/HyperLinkClicked.ts","../src/impl/interaction/library/KeysDown.ts","../src/impl/interaction/library/LongTouch.ts","../src/impl/interaction/library/MouseEnter.ts","../src/impl/interaction/library/MouseLeave.ts","../src/impl/interaction/library/MouseMove.ts","../src/impl/fsm/ScrollTransition.ts","../src/impl/interaction/ScrollDataImpl.ts","../src/impl/interaction/library/Scroll.ts","../src/impl/fsm/SpinnerChangedTransition.ts","../src/impl/interaction/library/SpinnerChanged.ts","../src/impl/interaction/TapDataImpl.ts","../src/impl/interaction/library/Tap.ts","../src/impl/fsm/TextInputChangedTransition.ts","../src/impl/interaction/library/TextInputChanged.ts","../src/impl/interaction/library/TouchStart.ts","../src/impl/interaction/library/TwoTouch.ts","../src/impl/fsm/WheelTransition.ts","../src/impl/interaction/WheelDataImpl.ts","../src/impl/interaction/library/Wheel.ts","../src/impl/fsm/ConcurrentXOrFSM.ts","../src/impl/interaction/Or.ts","../src/impl/interaction/ThenDataImpl.ts","../src/impl/fsm/ThenFSM.ts","../src/impl/interaction/Then.ts","../src/impl/logging/LoggerImpl.ts","../src/impl/binding/BindingsImpl.ts","../src/impl/command/UndoableCommand.ts","../src/impl/command/library/FocusHTMLElement.ts","../src/impl/command/library/RedoNTimes.ts","../src/impl/command/library/SetProperty.ts","../src/impl/command/library/SetProperties.ts","../src/impl/command/library/TransferArrayItem.ts","../src/impl/command/library/UndoNTimes.ts","../src/impl/fsm/NotFSM.ts","../src/impl/fsm/VisitorFSMDepthFirst.ts","../src/impl/interaction/Not.ts","../src/impl/interaction/library/TimedClick.ts","../src/impl/interaction/library/TimedTap.ts","../src/impl/logging/FittsLaw.ts","../src/impl/undo/TreeUndoHistoryImpl.ts","../src/impl/undo/UndoHistoryImpl.ts"],"sourcesContent":["/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\nimport type {WhenType} from \"./When\";\nimport type {RuleName, Severity} from \"../checker/Checker\";\nimport type {LogLevel} from \"../logging/LogLevel\";\n\n/**\n * For supporting Angular ElementReference without any dependency to Angular.\n * @category Helper\n */\nexport interface EltRef<T> {\n    /**\n     * The native element that refers to the widget.\n     */\n    nativeElement: T;\n}\n\n/**\n * Checks whether the given object matches the EltRef structure.\n * @param obj - The object to check\n * @returns The casted object if is an EltRef.\n * @category Helper\n */\nexport function isEltRef(obj: unknown): obj is EltRef<EventTarget> {\n    if (obj === undefined || obj === null) {\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return (obj as EltRef<unknown>).nativeElement instanceof EventTarget;\n}\n\n/**\n * This alias refers to either an EvenTarget object or a reference to an EvenTarget object.\n * @category Helper\n */\nexport type Widget<T> = EltRef<T> | T;\n\n/**\n * The base interface for building bindings (what we call in Interacto a binder).\n * @category Helper\n */\nexport interface BaseBinderBuilder {\n    /**\n     * Specifies the widgets on which the binding will operate.\n     * When a widget is added to this list, this widget is binded to this binding.\n     * When widget is removed from this list, this widget is unbinded from this binding.\n     * @param widget - The mandatory first widget\n     * @param widgets - The list of the widgets involved in the bindings.\n     * @returns A clone of the current binder to chain the building configuration.\n     */\n    on<W>(widget: ReadonlyArray<Widget<W>> | Widget<W>, ...widgets: ReadonlyArray<Widget<W>>): BaseBinderBuilder;\n\n    /**\n     * Specifies the node the binding will observe its children.\n     * The binding observes its children list, so that additions and removals from it are managed by the binding.\n     * @param node - The binding will observe the children of this node.\n     * @returns A clone of the current binder to chain the building configuration.\n     */\n    onDynamic(node: Widget<Node>): BaseBinderBuilder;\n\n    /**\n     * Specifies the conditions to fulfill to initialise, update, or execute the command while the interaction is running.\n     * A binder can have several cummulative 'when' routines.\n     * @param fn - The predicate that checks whether the command can be initialised, updated, or executed.\n     * @param mode -- The execution mode of the 'when' predicate. If not defined, the non-strict mode will be used.\n     * @returns A clone of the current binder to chain the building configuration.\n     */\n    when(fn: () => boolean, mode?: WhenType): BaseBinderBuilder;\n\n    /**\n     * Defines actions to perform when a binding ends.\n     * A binder can have several cummulative 'end' routines.\n     * @param fn - The command to execute on each binding end.\n     * @returns A clone of the current builder to chain the building configuration.\n     */\n    end(fn: () => void): BaseBinderBuilder;\n\n    /**\n     * Specifies the logging level to use.\n     * A binder can have several cummulative 'log' routines, eg:\n     * log(LogLevel.INTERACTION).log(LogLevel.COMMAND)\n     * @param level - The logging level to use.\n     * @returns A clone of the current binder to chain the building configuration.\n     */\n    log(...level: ReadonlyArray<LogLevel>): BaseBinderBuilder;\n\n    /**\n     * If called, all the events the interaction will process will be consumed and\n     * not propagated to next listeners.\n     * @returns A clone of the current binder to chain the building configuration.\n     */\n    stopImmediatePropagation(): BaseBinderBuilder;\n\n    /**\n     * The default behavior associated to the event will be ignored.\n     * @returns A clone of the current binder to chain the building configuration.\n     */\n    preventDefault(): BaseBinderBuilder;\n\n    /**\n     * Allows the processing of errors during the execution of the binding.\n     * Errors reported here are errors thrown in arrow functions provided to the\n     * the different routines of the binder and errors triggered by the command.\n     * A binder can have several cummulative 'catch' routines.\n     * @param fn - The function to process the error caught by the binding during its execution\n     * @returns A clone of the current binder to chain the building configuration.\n     */\n    catch(fn: (ex: unknown) => void): BaseBinderBuilder;\n\n    /**\n     * Specifies the name of the Interacto binding.\n     * This name will be used in the logging system.\n     * It should be unique, but no mechanism will check that.\n     * @param name - The name of the binding\n     * @returns A clone of the current binder to chain the building configuration.\n     */\n    name(name: string): BaseBinderBuilder;\n\n    /**\n     * Configures a linter rule specifically for the binding.\n     * @param ruleName - The name of the rule.\n     * @param severity - The severity level of the rule.\n     * @returns A clone of the current binder to chain the building configuration.\n     */\n    configureRules(ruleName: RuleName, severity: Severity): BaseBinderBuilder;\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * The different mode that define when the 'when' predicate must be executed.\n * Note that there is no 'strictEnd' since the end of a binding execution is by default strict.\n * Note that there is no 'start' (just 'strictStart') since 'then' encompasses 'start'.\n * Strict modes cancel the binding execution, while non-strict modes just prevent the creation/execution of the\n * command at a given instant.\n * @category API Binding\n */\nexport type WhenType =\n/** The predicate will be executed at the end and will cancel the binding execution if not fulfilled. */\n\"end\" |\n/** The predicate will be executed at start/then/end without cancelling the binding execution. */\n\"nonStrict\" |\n/** The predicate will be executed at start/then/end and will cancel the binding execution if not fulfilled. */\n\"strict\" |\n/** The predicate will be executed at start and will cancel the binding execution if not fulfilled. */\n\"strictStart\" |\n/** The predicate will be executed at start and at each update and will cancel the binding execution if not fulfilled. */\n\"strictThen\" |\n/** The predicate will be executed at start and at each update without cancelling the binding execution. */\n\"then\";\n\n/**\n * States whether the WhenType concerns the beginning of a binding execution (at start).\n * Not that 'then' is included since 'then' is called at start. This includes both strict and non strict mode.\n * @param type -- The WhenType to test\n * @returns True: when executed at start\n * @category Helper\n */\nexport function isWhenAtStart(type: WhenType): boolean {\n    // 'then' is triggered at 'start' so used here\n    return type === \"strictStart\" || type === \"then\" || type === \"nonStrict\" || type === \"strict\";\n}\n\n/**\n * States whether the WhenType concerns the running of a binding execution.\n * This includes both strict and non strict mode.\n * @param type -- The WhenType to test\n * @returns True: when executed at then\n * @category Helper\n */\nexport function isWhenAtThen(type: WhenType): boolean {\n    return type === \"strictThen\" || type === \"then\" || type === \"nonStrict\" || type === \"strict\";\n}\n\n/**\n * States whether the WhenType concerns the end of a binding execution.\n * This includes both strict and non strict mode.\n * @param type -- The WhenType to test\n * @returns True: when executed at end\n * @category Helper\n */\nexport function isWhenAtEnd(type: WhenType): boolean {\n    return type === \"end\" || type === \"nonStrict\" || type === \"strict\";\n}\n\n/**\n * States whether the WhenType is a strict mode.\n * @param type -- The WhenType to test\n * @returns True: when is strict\n * @category Helper\n */\nexport function isWhenStrict(type: WhenType): boolean {\n    // 'end' is always strict\n    return type === \"end\" || type === \"strict\" || type === \"strictThen\" || type === \"strictStart\";\n}\n\n/**\n * The type of a when condition: it contains both the predicate and the mode (ie when the predicate must be checked).\n * @typeParam D -- The interaction data type\n * @category API Binding\n */\nexport interface When<D, A> {\n    /**\n     * The predicate.\n     * @param i -- The interaction data.\n     */\n    fn: (i: D, acc: Readonly<A>) => boolean;\n\n    /**\n     * The type of the when\n     */\n    type: WhenType;\n}\n\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General export function License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General export function License for more details.\n * You should have received a copy of the GNU General export function License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {Binding} from \"./Binding\";\nimport type {BindingsObserver} from \"./BindingsObserver\";\nimport type {VisitorBinding} from \"./VisitorBinding\";\nimport type {EltRef, Widget} from \"../binder/BaseBinderBuilder\";\nimport type {BaseUpdateBinder} from \"../binder/BaseUpdateBinder\";\nimport type {InteractionBinder} from \"../binder/InteractionBinder\";\nimport type {InteractionUpdateBinder} from \"../binder/InteractionUpdateBinder\";\nimport type {KeyInteractionBinder} from \"../binder/KeyInteractionBinder\";\nimport type {KeyInteractionUpdateBinder} from \"../binder/KeyInteractionUpdateBinder\";\nimport type {Command} from \"../command/Command\";\nimport type {FourTouchData} from \"../interaction/FourTouchData\";\nimport type {Interaction, InteractionsDataTypes} from \"../interaction/Interaction\";\nimport type {InteractionData} from \"../interaction/InteractionData\";\nimport type {KeyData} from \"../interaction/KeyData\";\nimport type {KeysData} from \"../interaction/KeysData\";\nimport type {LineTouchData} from \"../interaction/LineTouchData\";\nimport type {MousePointsData} from \"../interaction/MousePointsData\";\nimport type {MultiTouchData} from \"../interaction/MultiTouchData\";\nimport type {PointData} from \"../interaction/PointData\";\nimport type {PointsData} from \"../interaction/PointsData\";\nimport type {RotationTouchData} from \"../interaction/RotationTouchData\";\nimport type {ScaleTouchData} from \"../interaction/ScaleTouchData\";\nimport type {ScrollData} from \"../interaction/ScrollData\";\nimport type {SrcTgtPointsData} from \"../interaction/SrcTgtPointsData\";\nimport type {TapsData} from \"../interaction/TapsData\";\nimport type {ThenData} from \"../interaction/ThenData\";\nimport type {ThreeTouchData} from \"../interaction/ThreeTouchData\";\nimport type {TouchData} from \"../interaction/TouchData\";\nimport type {GeneralTwoTouchData, TwoTouchData} from \"../interaction/TwoTouchData\";\nimport type {WheelData} from \"../interaction/WheelData\";\nimport type {WidgetData} from \"../interaction/WidgetData\";\nimport type {Logger} from \"../logging/Logger\";\nimport type {UndoHistoryBase} from \"../undo/UndoHistoryBase\";\n\n/**\n * Defines a partly defined binder for buttons\n * @category API Binding\n */\nexport type PartialButtonTypedBinder<A = unknown> = InteractionBinder<Interaction<WidgetData<HTMLButtonElement>>, A>;\n/**\n * Defines a partly defined binder for inputs\n * @category API Binding\n */\nexport type PartialInputTypedBinder<A = unknown> = InteractionBinder<Interaction<WidgetData<HTMLInputElement>>, A>;\n/**\n * Defines a partly defined binder for selects\n * @category API Binding\n */\nexport type PartialSelectTypedBinder<A = unknown> = InteractionBinder<Interaction<WidgetData<HTMLSelectElement>>, A>;\n/**\n * Defines a partly defined binder for spinners\n * @category API Binding\n */\nexport type PartialSpinnerTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<WidgetData<HTMLInputElement>>, A>;\n/**\n * Defines a partly defined binder for anchors\n * @category API Binding\n */\nexport type PartialAnchorTypedBinder<A = unknown> = InteractionBinder<Interaction<WidgetData<HTMLAnchorElement>>, A>;\n/**\n * Defines a partly defined binder for text inputs\n * @category API Binding\n */\nexport type PartialTextInputTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<WidgetData<HTMLInputElement | HTMLTextAreaElement>>, A>;\n/**\n * Defines a partly defined binder for touch rotations\n * @category API Binding\n */\nexport type PartialRotateTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<RotationTouchData>, A>;\n/**\n * Defines a partly defined binder for touch scalings\n * @category API Binding\n */\nexport type PartialScaleTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<ScaleTouchData>, A>;\n/**\n * Defines a partly defined binder for two-touch pans\n * @category API Binding\n */\nexport type PartialTwoPanTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<LineTouchData & TwoTouchData>, A>;\n/**\n * Defines a partly defined binder for two touch interactions\n * @category API Binding\n */\nexport type PartialTwoTouchTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<GeneralTwoTouchData>, A>;\n/**\n * Defines a partly defined binder for three touch interactions\n * @category API Binding\n */\nexport type PartialThreeTouchTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<ThreeTouchData>, A>;\n/**\n * Defines a partly defined binder for four touch interactions\n * @category API Binding\n */\nexport type PartialFourTouchTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<FourTouchData>, A>;\n/**\n * Defines a partly defined binder for DnD touch interactions\n * @category API Binding\n */\nexport type PartialTouchSrcTgtTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<SrcTgtPointsData<TouchData>>, A>;\n/**\n * Defines a partly defined binder for multi-touch interactions\n * @category API Binding\n */\nexport type PartialMultiTouchTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<MultiTouchData>, A>;\n/**\n * Defines a partly defined binder for taps\n * @category API Binding\n */\nexport type PartialTapsTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<TapsData>, A>;\n/**\n * Defines a partly defined binder for touch types\n * @category API Binding\n */\nexport type PartialTouchTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<TouchData>, A>;\n/**\n * Defines a partly defined binder for one point interactions\n * @category API Binding\n */\nexport type PartialPointTypedBinder<A = unknown> = InteractionBinder<Interaction<PointData>, A>;\n/**\n * Defines a partly defined binder for wheel interactions\n * @category API Binding\n */\nexport type PartialWheelTypedBinder<A = unknown> = InteractionBinder<Interaction<WheelData>, A>;\n/**\n * Defines a partly defined binder for scroll interactions\n * @category API Binding\n */\nexport type PartialScrollTypedBinder<A = unknown> = InteractionBinder<Interaction<ScrollData>, A>;\n/**\n * Defines a partly defined binder for one point interactions that updates in time\n * @category API Binding\n */\nexport type PartialUpdatePointTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<PointData>, A>;\n/**\n * Defines a partly defined binder for multi-point interactions\n * @category API Binding\n */\nexport type PartialPointsTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<MousePointsData>, A>;\n/**\n * Defines a partly defined binder for DnD-like interactions\n * @category API Binding\n */\nexport type PartialPointSrcTgtTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<SrcTgtPointsData<PointData>>, A>;\n/**\n * Defines a partly defined binder for key interactions\n * @category API Binding\n */\nexport type PartialKeyTypedBinder<A = unknown> = KeyInteractionBinder<Interaction<KeyData>, A>;\n/**\n * Defines a partly defined binder for keys interactions\n * @category API Binding\n */\nexport type PartialKeysTypedBinder<A = unknown> = KeyInteractionUpdateBinder<Interaction<KeysData>, A>;\n/**\n * Defines a partly defined binder for mouse or touch interactions\n * @category API Binding\n */\nexport type PartialPointOrTouchTypedBinder<A = unknown> = InteractionBinder<Interaction<PointData | TouchData>, A>;\n/**\n * Defines a partly defined binder for mouse or touch tap interactions\n * @category API Binding\n */\nexport type PartialPointsOrTapsTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<MousePointsData | PointsData<TouchData>>, A>;\n/**\n * Defines a partly defined binder for mouse or touch DnD interactions\n * @category API Binding\n */\nexport type PartialTouchMouseDnDTypedBinder<A = unknown> = InteractionUpdateBinder<Interaction<SrcTgtPointsData<PointData | TouchData>>, A>;\n/**\n * Defines a partly defined binder for sequence of user interactions.\n * @category API Binding\n */\nexport type PartialThenBinder<XS extends Array<Interaction<InteractionData>>, A = unknown> =\n    InteractionUpdateBinder<Interaction<ThenData<InteractionsDataTypes<XS>>>, A, ThenData<InteractionsDataTypes<XS>>>;\n\n/**\n * A contextual object for creating binders and thus bindings.\n * allows the observation of the created bindings.\n * Provides an undo/redo history.\n * Why a pure abstract class and not an interface?\n * Because interfaces are not retained at runtime in TS and we want DI (that thus cannot inject interface types).\n * @typeParam H -- The undo history algorithm\n * @category API Binding\n */\nexport abstract class Bindings<H extends UndoHistoryBase> {\n    /**\n     * The undo/redo history of the current binding context\n     */\n    public abstract readonly undoHistory: H;\n\n    public abstract readonly logger: Logger;\n\n    public abstract nodeBinder<A>(accInit?: A): BaseUpdateBinder;\n\n    /**\n     * Creates binding builder to build a binding between a button interaction and the given command type.\n     * Do not forget to call bind() at the end of the build to execute the builder.\n     * @returns The binding builder.\n     */\n    public abstract buttonBinder<A>(accInit?: A): PartialButtonTypedBinder<A>;\n\n    public abstract checkboxBinder<A>(accInit?: A): PartialInputTypedBinder<A>;\n\n    public abstract colorPickerBinder<A>(accInit?: A): PartialInputTypedBinder<A>;\n\n    public abstract comboBoxBinder<A>(accInit?: A): PartialSelectTypedBinder<A>;\n\n    public abstract spinnerBinder<A>(accInit?: A): PartialSpinnerTypedBinder<A>;\n\n    public abstract dateBinder<A>(accInit?: A): PartialInputTypedBinder<A>;\n\n    public abstract hyperlinkBinder<A>(accInit?: A): PartialAnchorTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a text interaction. This binder takes as argument a timeout value:\n     * using this text writing interaction, a user can write a sequence of letters and then stops for\n     * more than x milliseconds (x is the value of timeout). After this delay the binding executes the command.\n     * This is a mainstream optimisation that many text processing tools implement to limit the number of editing actions.\n     * @param timeout - The timeout in milliseconds after which the interaction stops and the command produced.\n     */\n    public abstract textInputBinder<A>(timeout?: number, accInit?: A): PartialTextInputTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the touch DnD interaction (a DnD interaction that uses one touch).\n     * This interaction works as a Drag-and-Drop interaction.\n     */\n    public abstract touchDnDBinder<A>(cancellable: boolean, accInit?: A): PartialTouchSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the Reciprocal DnD interaction with a touch.\n     * A spring handle can be pressed on a long click to return the element back to its previous position.\n     * @param handle - The selectable part of the spring widget.\n     * @param spring - The line between the handle and the previous position of the element.\n     */\n    public abstract reciprocalTouchDnDBinder<A>(handle: EltRef<SVGCircleElement>, spring: EltRef<SVGLineElement>, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the multi-touch user interaction.\n     * @param nbTouches - The number of required touches.\n     * A multi-touch starts when all its touches have started.\n     * A multi-touch ends when the number of required touches is greater than the number of touches.\n     */\n    public abstract multiTouchBinder<A>(nbTouches: number, accInit?: A): PartialMultiTouchTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses two (DnD) touches.\n     */\n    public abstract twoTouchBinder<A>(accInit?: A): PartialTwoTouchTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses three (DnD) touches.\n     */\n    public abstract threeTouchBinder<A>(accInit?: A): PartialThreeTouchTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses four (DnD) touches.\n     */\n    public abstract fourTouchBinder<A>(accInit?: A): PartialFourTouchTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the tap user interaction.\n     * @param nbTap - The number of required taps.\n     * If this number is not reached after a timeout, the interaction is cancelled.\n     */\n    public abstract tapBinder<A>(nbTap: number, accInit?: A): PartialTapsTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the MouseDown (mouse button pressed) interaction.\n     */\n    public abstract touchStartBinder<A>(accInit?: A): PartialTouchTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the long touch interaction.\n     * @param duration - The duration of the touch to end the user interaction.\n     * If this duration is not reached, the interaction is cancelled.\n     */\n    public abstract longTouchBinder<A>(duration: number, accInit?: A): PartialTouchTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the pan interaction (in all direction, one touch).\n     * The involved user interaction is TouchDnD.\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     */\n    public abstract panBinder<A>(cancellable: boolean, accInit?: A): PartialTouchSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a vertical pan (or swipe if minVelocity is used) interaction (one-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     */\n    public abstract panVerticalBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a vertical pan interaction (or swipe if minVelocity is used) interaction (one-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     */\n    public abstract panHorizontalBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a left pan interaction (or swipe if minVelocity is used) interaction (one-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     */\n    public abstract panLeftBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a right pan interaction (or swipe if minVelocity is used) interaction (one-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     */\n    public abstract panRightBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a top pan interaction (or swipe if minVelocity is used) interaction (one-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     */\n    public abstract panTopBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a bottom pan interaction (or swipe if minVelocity is used) interaction (one-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     */\n    public abstract panBottomBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a vertical pan interaction (two-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     */\n    public abstract twoPanVerticalBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a vertical pan interaction (two-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     */\n    public abstract twoPanHorizontalBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a left pan interaction (two-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     */\n    public abstract twoPanLeftBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a right pan interaction (two-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     */\n    public abstract twoPanRightBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a top pan interaction (two-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     */\n    public abstract twoPanTopBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses a bottom pan interaction (two-touch).\n     * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n     * @param minVelocity - The pan while be a swipe: the minimal minVelocity to reach for validating the swipe. In pixels per second.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the pan\n     */\n    public abstract twoPanBottomBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the rotate interaction (two-touch interaction, with the first point\n     * that must remain static).\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the rotation (i.e.\n     * the acceptance rate when moving the fixation/first point).\n     */\n    public abstract rotateBinder<A>(pxTolerance: number, accInit?: A): PartialRotateTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the scale/pinch touch interaction.\n     * @param pxTolerance - The tolerance rate in pixels accepted while executing the scale/pinch gesture\n     */\n    public abstract scaleBinder<A>(pxTolerance: number, accInit?: A): PartialScaleTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the click interaction.\n     */\n    public abstract clickBinder<A>(accInit?: A): PartialPointTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the Wheel (user uses a mouse scrolling wheel) interaction.\n     */\n    public abstract wheelBinder<A>(accInit?: A): PartialWheelTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the double click interaction.\n     */\n    public abstract dbleClickBinder<A>(accInit?: A): PartialUpdatePointTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the MouseDown (mouse button pressed) interaction.\n     */\n    public abstract mouseDownBinder<A>(accInit?: A): PartialPointTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the MouseUp (mouse button released) interaction.\n     */\n    public abstract mouseUpBinder<A>(accInit?: A): PartialPointTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the LongMouseDown\n     * (mouse button pressed for a certain amount of time) interaction.\n     * @param duration - The duration of the pressure to end the user interaction.\n     * If this duration is not reached, the interaction is cancelled.\n     */\n    public abstract longMouseDownBinder<A>(duration: number, accInit?: A): PartialUpdatePointTypedBinder<A>;\n\n    /**\n     * Creates a binding for clicking n times.\n     * @param nbClicks - The number of clicks to do.\n     * If this number is not reached, the interaction is cancelled after a timeout of 1s.\n     */\n    public abstract clicksBinder<A>(nbClicks: number, accInit?: A): PartialPointsTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the MouseEnter (mouse cursor enters the element) interaction.\n     * @param withBubbling - True: event bubbling is enabled and events on child elements will be registered\n     */\n    public abstract mouseEnterBinder<A>(withBubbling: boolean, accInit?: A): PartialPointTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the MouseLeave (mouse cursor leaves the element) interaction.\n     * @param withBubbling - True: event bubbling is enabled and events on child elements will be registered\n     */\n    public abstract mouseLeaveBinder<A>(withBubbling: boolean, accInit?: A): PartialPointTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the MouseMove (mouse cursor moves) interaction.\n     */\n    public abstract mouseMoveBinder<A>(accInit?: A): PartialPointTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the mouse scroll interaction.\n     */\n    public abstract scrollBinder<A>(accInit?: A): PartialScrollTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the DnD interaction.\n     * @param cancellable - True: the escape key will cancels the DnD.\n     */\n    public abstract dndBinder<A>(cancellable: boolean, accInit?: A): PartialPointSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the Reciprocal DnD interaction.\n     * A spring handle can be pressed on a long click to return the element back to its previous position.\n     * @param handle - The selectable part of the spring widget.\n     * @param spring - The line between the handle and the previous position of the element.\n     */\n    public abstract reciprocalDndBinder<A>(handle: EltRef<SVGCircleElement>, spring: EltRef<SVGLineElement>, accInit?: A):\n    PartialPointSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the drag lock interaction.\n     */\n    public abstract dragLockBinder<A>(accInit?: A): PartialPointSrcTgtTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the KeyDown (key pressed) interaction.\n     * @param modifierAccepted - True: the interaction will consider key modifiers.\n     */\n    public abstract keyDownBinder<A>(modifierAccepted: boolean, accInit?: A): PartialKeyTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the KeysDown (multiple keys pressed) interaction.\n     */\n    public abstract keysDownBinder<A>(accInit?: A): PartialKeysTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the KeyUp (key released) interaction.\n     * @param modifierAccepted - True: the interaction will consider key modifiers.\n     */\n    public abstract keyUpBinder<A>(modifierAccepted: boolean, accInit?: A): PartialKeyTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the KeysType (multiple keys pressed then released) interaction.\n     */\n    public abstract keysTypeBinder<A>(accInit?: A): PartialKeysTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses the KeyTyped (key pressed then released) interaction.\n     */\n    public abstract keyTypeBinder<A>(accInit?: A): PartialKeyTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses either a mouse down or a touch start interaction.\n     */\n    public abstract mouseDownOrTouchStartBinder<A>(accInit?: A): PartialPointOrTouchTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses either a tap or a clicks interaction.\n     */\n    public abstract tapsOrClicksBinder<A>(nbTap: number, accInit?: A): PartialPointsOrTapsTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses either a longpress or a longtouch interaction.\n     */\n    public abstract longpressOrTouchBinder<A>(duration: number, accInit?: A): PartialPointOrTouchTypedBinder<A>;\n\n    /**\n     * Creates a binding that uses either a longpress or a longtouch interaction.\n     */\n    public abstract reciprocalMouseOrTouchDnD<A>(handle: EltRef<SVGCircleElement>, spring: EltRef<SVGLineElement>,\n        accInit?: A): PartialTouchMouseDnDTypedBinder<A>;\n\n    /**\n     * Creates two bindings for undo and redo operations with buttons.\n     * @param undo - The undo button\n     * @param redo - The redo button\n     * @param catchFn - The function that will treat the errors for both undo and redo bindings\n     */\n    public abstract undoRedoBinder(undo: Widget<HTMLButtonElement>, redo: Widget<HTMLButtonElement>, catchFn?: ((err: unknown) => void)):\n    [Binding<Command, Interaction<WidgetData<HTMLButtonElement>>, unknown>,\n        Binding<Command, Interaction<WidgetData<HTMLButtonElement>>, unknown>];\n\n    /**\n     * Create a binding that uses an ordered sequence of user interactions\n     * @param interactions - The sequence of user interaction\n     */\n    public abstract combine<XS extends Array<Interaction<InteractionData>>, A>(interactions: XS, accInit?: A):\n    PartialThenBinder<XS, A>;\n\n    /**\n     * Clears all the data of this binding context:\n     * the possible current `BindingsObserver` object;\n     * the undo/redo history.\n     */\n    public abstract clear(): void;\n\n    /**\n     * Sets the current `BindingsObserver` object. Cleans the potential former global `BindingsObserver` object.\n     * @param obs - The new `BindingsObserver` object to consider. Can be undefined.\n     */\n    public abstract setBindingObserver(obs?: BindingsObserver): void;\n\n    /**\n     * Visiting the binding.\n     * @param visitor - The visitor.\n     */\n    public abstract acceptVisitor(visitor: VisitorBinding): void;\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * @category Helper\n */\nexport const mouseEventTypes = [\n    \"mousedown\",\n    \"mouseup\",\n    \"mousemove\",\n    \"mouseover\",\n    \"mouseout\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"click\",\n    \"auxclick\"\n] as const;\n\n/**\n * @category Helper\n */\nexport const touchEventTypes = [\n    \"touchstart\",\n    \"touchend\",\n    \"touchmove\"\n] as const;\n\n/**\n * @category Helper\n */\nexport const keyEventTypes = [\n    \"keydown\",\n    \"keyup\"\n] as const;\n\n/**\n * The supported event types.\n * @category Helper\n */\nexport const eventTypes = [\n    ...mouseEventTypes,\n    ...touchEventTypes,\n    ...keyEventTypes,\n    \"input\",\n    \"scroll\",\n    \"change\",\n    \"wheel\"\n] as const;\n\n/**\n * The supported event types as a type\n * @category Helper\n */\nexport type EventType = typeof eventTypes[number];\n\n/**\n * The mouse event type\n * @category Helper\n */\nexport type MouseEventType = typeof mouseEventTypes[number];\n\n/**\n * The touch event type\n * @category Helper\n */\nexport type TouchEventType = typeof touchEventTypes[number];\n\n/**\n * The key event type\n * @category Helper\n */\nexport type KeyEventType = typeof keyEventTypes[number];\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {State} from \"./State\";\nimport type {Transition} from \"./Transition\";\n\n/**\n * Defines a type of state that can produce as output events.\n * @typeParam E - The type of events the FSM processes.\n * @category API FSM\n */\nexport interface OutputState extends State {\n    /**\n     * The list of outgoing transitions of the state.\n     */\n    readonly transitions: ReadonlyArray<Transition<Event>>;\n\n    /**\n     * Actions done when a transition of the state is executed so\n     * that this state is left.\n     * @throws CancelFSMException If leaving the state leads to a cancelling of the FSM execution.\n     */\n    exit(): void;\n\n    /**\n     * Asks to the state to process of the given event.\n     * @param event - The event to process. Can be null.\n     */\n    process(event: Event): boolean;\n\n    /**\n     * Adds the given transitions to the list of outgoing transitions of the state.\n     * @param tr - The transition to add.\n     */\n    addTransition(tr: Transition<Event>): void;\n}\n\n/**\n * Tests whether the given object is an OutputState.\n * @param obj - The object to test.\n * @returns True: the object is an OutputState\n * @category Helper\n */\nexport function isOutputStateType(obj: State | undefined): obj is OutputState {\n    if (obj === undefined) {\n        return false;\n    }\n\n    return \"exit\" in obj && \"addTransition\" in obj && \"process\" in obj && \"transitions\" in obj;\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {Undoable, UndoableSnapshot} from \"./Undoable\";\nimport type {UndoHistoryBase} from \"./UndoHistoryBase\";\nimport type {Observable} from \"rxjs\";\n\n/**\n * The interface for nodes in a tree-based history.\n * @category API History\n */\nexport interface UndoableTreeNode {\n    /**\n     * Among the children of the node, iidentifies the one that was undone recently.\n     */\n    lastChildUndone: UndoableTreeNode | undefined;\n\n    /**\n     * The unique ID of the node among the tree.\n     */\n    readonly id: number;\n\n    /**\n     * The undoable object contained in the node.\n     */\n    readonly undoable: Undoable;\n\n    /**\n     * The possible parent node.\n     */\n    readonly parent: UndoableTreeNode | undefined;\n\n    /**\n     * The children of the node.\n     */\n    readonly children: Array<UndoableTreeNode>;\n\n    /**\n     * The visual snapshot of the node. Used to render the tree history.\n     */\n    readonly visualSnapshot: UndoableSnapshot;\n\n    /**\n     * Undoes the undoable object of this node.\n     */\n    undo(): void;\n\n    /**\n     * Redoes the undoable object of this node.\n     */\n    redo(): void;\n}\n\n/**\n * The DTO interface used when exporting a tree-based history.\n * @category Helper\n */\nexport interface UndoableTreeNodeDTO {\n    /**\n     * The unique ID of the node among the tree.\n     */\n    readonly id: number;\n\n    /**\n     * The undoable object contained in the node, in an unkown format as\n     * the format is defined by the developer while exporting the history.\n     */\n    readonly undoable: unknown;\n\n    /**\n     * The children of the node, in their DTO format.\n     */\n    readonly children: ReadonlyArray<UndoableTreeNodeDTO>;\n}\n\n/**\n * The DTO for tree nodes used while exporting a tree-based history.\n * @category Helper\n */\nexport interface TreeUndoHistoryDTO {\n    /**\n     * The current history path in the tree\n     */\n    readonly path: ReadonlyArray<number>;\n\n    /**\n     * The different roots of the tree.\n     */\n    readonly roots: ReadonlyArray<UndoableTreeNodeDTO>;\n}\n\n/**\n * Tree-based undo history.\n * On adding undoables after an undo operation, the redoable objects are no more flush but\n * kept in the history as a granch of the graph.\n * Useful for exploration.\n * @category API History\n */\nexport abstract class TreeUndoHistory implements UndoHistoryBase {\n    /**\n     * States whether the path of kept. If kept, users cannot delete\n     * nodes.\n     */\n    public abstract get keepPath(): boolean;\n\n    /**\n     * Returns the ordered sequence of undoable's ID that the user performed.\n     * This permits to keep traces of what the users did and how they arrived\n     * to the final state.\n     */\n    public abstract get path(): ReadonlyArray<number>;\n\n    /**\n     * The root node of the history. It is a fake node (it does not refer\n     * to any undoable object).\n     */\n    public abstract get root(): UndoableTreeNode;\n\n    /**\n     * All the nodes of the tree.\n     */\n    public abstract get undoableNodes(): Array<UndoableTreeNode | undefined>;\n\n    /**\n     * The current node. As the history is a tree in which one can navigate using\n     * undo, redo, gotTo, this current node refers to the node\n     * where the system state is.\n     */\n    public abstract get currentNode(): UndoableTreeNode;\n\n    /**\n     * Moves to the given node ID.\n     * @param id - The node ID contained in the tree. Moves to it if correct.\n     */\n    public abstract goTo(id: number): void;\n\n    /**\n     * Deletes the targeted node. Works only if the history does not keep the\n     * usage path (see path()).\n     * @param id - The node ID to remove. It removes all the branch from this node.\n     * Does not remove the branch if the current node is in it.\n     */\n    public abstract delete(id: number): void;\n\n    /**\n     * Computes the position (in the large) of each node.\n     * Useful for layouting.\n     */\n    public abstract getPositions(): Map<number, number>;\n\n    public abstract add(undoable: Undoable): void;\n\n    public abstract clear(): void;\n\n    public abstract getLastOrEmptyRedoMessage(): string;\n\n    public abstract getLastOrEmptyUndoMessage(): string;\n\n    public abstract getLastRedo(): Undoable | undefined;\n\n    public abstract getLastRedoMessage(): string | undefined;\n\n    public abstract getLastUndo(): Undoable | undefined;\n\n    public abstract getLastUndoMessage(): string | undefined;\n\n    public abstract redo(): void;\n\n    public abstract redosObservable(): Observable<Undoable | undefined>;\n\n    public abstract undo(): void;\n\n    public abstract undosObservable(): Observable<Undoable | undefined>;\n\n    /**\n     * Exports the history.\n     * @param fn - The function that converts undoable objects into ad-hoc formats.\n     */\n    public abstract export(fn: (undoable: Undoable) => unknown): TreeUndoHistoryDTO;\n\n    /**\n     * Imports the given DTO history. Flushes the current history.\n     * @param dtoHistory - The DTO history to import.\n     * @param fn - The convertion fonction that transforms undoable DTO (of nodes) into Undoable.\n     */\n    public abstract import(dtoHistory: TreeUndoHistoryDTO, fn: (dtoUndoable: unknown) => Undoable): void;\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {Undoable} from \"./Undoable\";\nimport type {UndoHistoryBase} from \"./UndoHistoryBase\";\nimport type {Observable} from \"rxjs\";\n\n/**\n * A history of undone/redone objects.\n * Why a pure abstract class and not an interface?\n * Because interfaces are not retained at runtime in TS and we want DI (that thus cannot inject interface types).\n * @category API History\n */\nexport abstract class UndoHistory implements UndoHistoryBase {\n    public abstract add(undoable: Undoable): void;\n\n    public abstract clear(): void;\n\n    public abstract undo(): void;\n\n    public abstract redo(): void;\n\n    /**\n     * @returns The stack of saved undoable objects.\n     */\n    public abstract getUndo(): ReadonlyArray<Undoable>;\n\n    /**\n     * @returns The stack of saved redoable objects\n     */\n    public abstract getRedo(): ReadonlyArray<Undoable>;\n\n    public abstract undosObservable(): Observable<Undoable | undefined>;\n\n    public abstract redosObservable(): Observable<Undoable | undefined>;\n\n    public abstract getLastUndo(): Undoable | undefined;\n\n    public abstract getLastRedo(): Undoable | undefined;\n\n    public abstract getLastUndoMessage(): string | undefined;\n\n    public abstract getLastRedoMessage(): string | undefined;\n\n    public abstract getLastOrEmptyUndoMessage(): string;\n\n    public abstract getLastOrEmptyRedoMessage(): string;\n\n    /**\n     * @returns The max number of saved undoable objects.\n     */\n    public abstract getSizeMax(): number;\n\n    /**\n     * @param max - The max number of saved undoable objects. Must be great than 0.\n     */\n    public abstract setSizeMax(max: number): void;\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * The basic accepted types for producing snapshots of undoable commands\n * @category API History\n */\nexport type PrimitiveUndoableSnapshot = HTMLElement | SVGElement | string;\n\n/**\n * The type of the visual snpashot that an undoable command can produce\n * @category API History\n */\nexport type UndoableSnapshot = PrimitiveUndoableSnapshot | Promise<PrimitiveUndoableSnapshot> | undefined;\n\n/**\n * An interface for undoable objects.\n * @category API History\n */\nexport interface Undoable {\n    /**\n     * Cancels the command.\n     */\n    undo(): void;\n\n    /**\n     * Redoes the cancelled command.\n     */\n    redo(): void;\n\n    /**\n     * @returns The name of the undo command.\n     */\n    getUndoName(): string;\n\n    /**\n     * Gives some information about the impact of a command.\n     * @returns Information about the impact of the commmand as an SVG element or text.\n     */\n    getVisualSnapshot(): UndoableSnapshot;\n}\n\n/**\n * Tests whether the given object is an Undoable.\n * @param obj - The object to test.\n * @returns True: the object is an Undoable\n * @category Helper\n */\nexport function isUndoableType(obj: unknown): obj is Undoable {\n    if (typeof obj !== \"object\" || obj === null) {\n        return false;\n    }\n\n    return \"undo\" in obj && \"redo\" in obj && \"getUndoName\" in obj;\n}\n\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General export function License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General export function License for more details.\n * You should have received a copy of the GNU General export function License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {EltRef} from \"../../api/binder/BaseBinderBuilder\";\nimport type {PointData} from \"../../api/interaction/PointData\";\nimport type {SrcTgtPointsData} from \"../../api/interaction/SrcTgtPointsData\";\nimport type {TouchData} from \"../../api/interaction/TouchData\";\n\n/**\n * Controls the dwell and spring animation.\n * See the reciprocal DnD binders.\n * @category Helper\n */\nexport class DwellSpringAnimation {\n    private displaySpring = false;\n\n    private interval: number | undefined;\n\n    private positionSpring: {\"x\": number; \"y\": number};\n\n    private readonly radius: number;\n\n    private readonly handle: EltRef<SVGCircleElement>;\n\n    private readonly spring: EltRef<SVGLineElement>;\n\n    public constructor(handle: Readonly<EltRef<SVGCircleElement>>, spring: Readonly<EltRef<SVGLineElement>>) {\n        this.interval = undefined;\n        this.radius = Number.parseInt(handle.nativeElement.getAttribute(\"r\") ?? \"20\", 10);\n        this.handle = handle;\n        this.spring = spring;\n        this.positionSpring = {\n            \"x\": 0,\n            \"y\": 0\n        };\n    }\n\n    public process(i: SrcTgtPointsData<PointData | TouchData>): void {\n        /*\n         * Management of the dwell and spring\n         * The element to use for this interaction (handle) must have the \"ioDwellSpring\" class\n         */\n        if (this.displaySpring) {\n            const distance = Math.hypot((i.tgt.clientX - this.positionSpring.x), (i.tgt.clientY - this.positionSpring.y));\n            if (Math.abs(distance) > (this.radius * 4)) {\n                this.spring.nativeElement.setAttribute(\"display\", \"none\");\n                this.handle.nativeElement.setAttribute(\"display\", \"none\");\n                this.displaySpring = false;\n            }\n        } else {\n            clearInterval(this.interval);\n            this.interval = window.setInterval(() => {\n                clearInterval(this.interval);\n                this.displaySpring = true;\n                this.positionSpring = {\n                    \"x\": i.tgt.clientX < this.radius ? this.radius : i.tgt.clientX - this.radius * 2,\n                    \"y\": i.tgt.clientY\n                };\n                this.spring.nativeElement.setAttribute(\"display\", \"block\");\n                this.handle.nativeElement.setAttribute(\"display\", \"block\");\n                this.handle.nativeElement.setAttribute(\"cx\", String(this.positionSpring.x));\n                this.handle.nativeElement.setAttribute(\"cy\", String(this.positionSpring.y));\n                this.spring.nativeElement.setAttribute(\"x1\", String(i.src.clientX));\n                this.spring.nativeElement.setAttribute(\"y1\", String(i.src.clientY));\n                this.spring.nativeElement.setAttribute(\"x2\", String(this.positionSpring.x));\n                this.spring.nativeElement.setAttribute(\"y2\", String(i.tgt.clientY));\n            }, 1000);\n        }\n    }\n\n    public end(): void {\n        clearInterval(this.interval);\n        this.displaySpring = false;\n        this.spring.nativeElement.setAttribute(\"display\", \"none\");\n        this.handle.nativeElement.setAttribute(\"display\", \"none\");\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {Command, CmdStatus} from \"../../api/command/Command\";\n\n/**\n * The base implementation class for coding UI commands.\n * @category Command\n */\nexport abstract class CommandBase implements Command {\n    /**\n     * The state of the command.\n     */\n    protected status: CmdStatus;\n\n    /**\n     * Creates the command with the status 'created'.\n     */\n    public constructor() {\n        this.status = \"created\";\n    }\n\n    /**\n     * Flushes the UI command.\n     * The command must not be used after that.\n     */\n    public flush(): void {\n        this.status = \"flushed\";\n    }\n\n    /**\n     * Actions may need to create a memento before their first execution.\n     * This is the goal of the operation that should be overridden.\n     * This operator is called a single time before the first execution of the command.\n     */\n    protected createMemento(): void {}\n\n    public execute(): Promise<boolean> | boolean {\n        let ok: boolean;\n        if ((this.status === \"created\" || this.status === \"executed\") && this.canExecute()) {\n            if (this.status === \"created\") {\n                this.createMemento();\n            }\n            ok = true;\n\n            try {\n                const result = this.execution();\n                if (result instanceof Promise) {\n                    return result\n                        .then(() => {\n                            this.status = \"executed\";\n                            return true;\n                        })\n                        .catch(() => {\n                            this.status = \"executed\";\n                            return false;\n                        });\n                }\n            } catch (error: unknown) {\n                this.status = \"executed\";\n                throw error;\n            }\n            this.status = \"executed\";\n        } else {\n            ok = false;\n        }\n\n        return ok;\n    }\n\n    /**\n     * This method contains the statements to execute the command.\n     * This method is automatically called by 'execute' and must not be called explicitly.\n     */\n    protected abstract execution(): Promise<void> | void;\n\n    public hadEffect(): boolean {\n        return this.isDone();\n    }\n\n    public done(): void {\n        if (this.status === \"created\" || this.status === \"executed\") {\n            this.status = \"done\";\n        }\n    }\n\n    public isDone(): boolean {\n        return this.status === \"done\";\n    }\n\n    public cancel(): void {\n        this.status = \"cancelled\";\n    }\n\n    public getStatus(): CmdStatus {\n        return this.status;\n    }\n\n    public canExecute(): boolean {\n        return true;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CommandBase} from \"./CommandBase\";\n\n/**\n * An anonymous command that takes an anonymous function as a parameter corresponding to the command to execute.\n * The goal of this command is to avoid the creation of a command class for a small command.\n * @category Command\n */\nexport class AnonCmd extends CommandBase {\n    private readonly exec: () => void;\n\n    public constructor(fct: () => void) {\n        super();\n        this.exec = fct;\n    }\n\n    public override canExecute(): boolean {\n        return true;\n    }\n\n    protected execution(): void {\n        this.exec();\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isEltRef} from \"../../api/binder/BaseBinderBuilder\";\nimport {AnonCmd} from \"../command/AnonCmd\";\nimport type {Widget} from \"../../api/binder/BaseBinderBuilder\";\nimport type {CmdBinder} from \"../../api/binder/CmdBinder\";\nimport type {InteractionBinder} from \"../../api/binder/InteractionBinder\";\nimport type {InteractionCmdBinder} from \"../../api/binder/InteractionCmdBinder\";\nimport type {When, WhenType} from \"../../api/binder/When\";\nimport type {Binding} from \"../../api/binding/Binding\";\nimport type {BindingsObserver} from \"../../api/binding/BindingsObserver\";\nimport type {RuleName, Severity} from \"../../api/checker/Checker\";\nimport type {Command} from \"../../api/command/Command\";\nimport type {Interaction, InteractionDataType} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {LogLevel} from \"../../api/logging/LogLevel\";\nimport type {UndoHistoryBase} from \"../../api/undo/UndoHistoryBase\";\n\n/**\n * The base class that defines the concept of binding builder (called binder).\n * @typeParam C - The type of the action to produce.\n * @typeParam I - The type of the user interaction to bind.\n * @category Binding\n */\nexport abstract class Binder<C extends Command, I extends Interaction<D>, A, D extends InteractionData = InteractionDataType<I>>\nimplements CmdBinder<C>, InteractionBinder<I, A, D>, InteractionCmdBinder<C, I, A, D> {\n\n    protected firstFn?: (c: C, i: D, acc: A) => void;\n\n    protected produceFn?: (i: D | undefined) => C;\n\n    protected widgets: ReadonlyArray<unknown>;\n\n    protected dynamicNodes: ReadonlyArray<Node>;\n\n    protected usingFn?: () => I;\n\n    protected hadEffectsFn?: (c: C, i: D, acc: A) => void;\n\n    protected hadNoEffectFn?: (c: C, i: D, acc: A) => void;\n\n    protected cannotExecFn?: (c: C, i: D, acc: A) => void;\n\n    protected endFn?: (c: C, i: D, acc: A) => void;\n\n    protected onErrFn?: (ex: unknown) => void;\n\n    protected logLevels: ReadonlyArray<LogLevel>;\n\n    protected stopPropagation: boolean;\n\n    protected prevDefault: boolean;\n\n    protected bindingName: string | undefined;\n\n    protected observer: BindingsObserver | undefined;\n\n    protected undoHistory: UndoHistoryBase;\n\n    protected logger: Logger;\n\n    protected whenFnArray: Array<When<D, A>> = [];\n\n    protected firstFnArray: Array<(c: C, i: D, acc: A) => void> = [];\n\n    protected endFnArray: Array<(c: C, i: D, acc: A) => void> = [];\n\n    protected hadEffectsFnArray: Array<(c: C, i: D, acc: A) => void> = [];\n\n    protected hadNoEffectFnArray: Array<(c: C, i: D, acc: A) => void> = [];\n\n    protected cannotExecFnArray: Array<(c: C, i: D, acc: A) => void> = [];\n\n    protected onErrFnArray: Array<(ex: unknown) => void> = [];\n\n    protected accInit: A | undefined;\n\n    protected linterRules: Map<RuleName, Severity>;\n\n    protected constructor(undoHistory: UndoHistoryBase, logger: Logger, observer?: BindingsObserver,\n                          binder?: Partial<Binder<C, I, A, D>>, acc?: A) {\n        this.widgets = [];\n        this.dynamicNodes = [];\n        this.logLevels = [];\n        this.linterRules = new Map();\n        this.stopPropagation = false;\n        this.prevDefault = false;\n\n        Object.assign(this, binder);\n\n        this.accInit = acc;\n        this.undoHistory = undoHistory;\n        this.logger = logger;\n        this.observer = observer;\n\n        this.copyFnArrays();\n    }\n\n    protected abstract duplicate(): Binder<C, I, A, D>;\n\n    /**\n     * Clones the arrays containing the routine functions after a binder is copied.\n     */\n    protected copyFnArrays(): void {\n        // Clones the arrays (instead of just copying the reference from the previous binder)\n        this.whenFnArray = Array.from(this.whenFnArray);\n\n        this.firstFnArray = Array.from(this.firstFnArray);\n        this.firstFn = (c: C, i: D, acc: A): void => {\n            for (const fn of this.firstFnArray) {\n                fn(c, i, acc);\n            }\n        };\n        this.endFnArray = Array.from(this.endFnArray);\n        this.endFn = (c: C, i: D, acc: A): void => {\n            for (const fn of this.endFnArray) {\n                fn(c, i, acc);\n            }\n        };\n        this.hadEffectsFnArray = Array.from(this.hadEffectsFnArray);\n        this.hadEffectsFn = (c: C, i: D, acc: A): void => {\n            for (const fn of this.hadEffectsFnArray) {\n                fn(c, i, acc);\n            }\n        };\n        this.hadNoEffectFnArray = Array.from(this.hadNoEffectFnArray);\n        this.hadNoEffectFn = (c: C, i: D, acc: A): void => {\n            for (const fn of this.hadNoEffectFnArray) {\n                fn(c, i, acc);\n            }\n        };\n        this.cannotExecFnArray = Array.from(this.cannotExecFnArray);\n        this.cannotExecFn = (c: C, i: D, acc: A): void => {\n            for (const fn of this.cannotExecFnArray) {\n                fn(c, i, acc);\n            }\n        };\n        this.onErrFnArray = Array.from(this.onErrFnArray);\n        this.onErrFn = (ex: unknown): void => {\n            for (const fn of this.onErrFnArray) {\n                fn(ex);\n            }\n        };\n    }\n\n    public on<W>(widget: ReadonlyArray<Widget<W>> | Widget<W>, ...widgets: ReadonlyArray<Widget<W>>): Binder<C, I, A, D> {\n        // eslint-disable-next-line unicorn/prefer-spread\n        const ws = Array\n            .from(widgets)\n            .concat(widget)\n            .map(currWidget => {\n                if (isEltRef(currWidget)) {\n                    return currWidget.nativeElement;\n                }\n                return currWidget;\n            });\n        // eslint-disable-next-line unicorn/prefer-spread\n        const currWidget: ReadonlyArray<unknown> = this.widgets.length === 0 ? ws : Array.from(this.widgets).concat(ws);\n        const dup = this.duplicate();\n        dup.widgets = currWidget;\n        return dup;\n    }\n\n    public onDynamic(node: Widget<Node>): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        const nodeEvt = isEltRef(node) ? node.nativeElement : node;\n        // eslint-disable-next-line unicorn/prefer-spread\n        dup.dynamicNodes = Array.from(this.dynamicNodes).concat(nodeEvt);\n        return dup;\n    }\n\n    public first(fn: (c: C, i: D, acc: A) => void): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.firstFnArray.push(fn);\n        return dup;\n    }\n\n    public when(fn: (i: D, acc: Readonly<A>) => boolean, mode: WhenType = \"nonStrict\"): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.whenFnArray.push({\n            fn,\n            \"type\": mode\n        });\n        return dup;\n    }\n\n    public ifHadEffects(fn: (c: C, i: D, acc: A) => void): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.hadEffectsFnArray.push(fn);\n        return dup;\n    }\n\n    public ifHadNoEffect(fn: (c: C, i: D, acc: A) => void): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.hadNoEffectFnArray.push(fn);\n        return dup;\n    }\n\n    public ifCannotExecute(fn: (c: C, i: D, acc: A) => void): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.cannotExecFnArray.push(fn);\n        return dup;\n    }\n\n    public end(fn: (c: C, i: D, acc: A) => void): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.endFnArray.push(fn);\n        return dup;\n    }\n\n    public log(...level: ReadonlyArray<LogLevel>): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.logLevels = Array.from(level);\n        return dup;\n    }\n\n    public stopImmediatePropagation(): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.stopPropagation = true;\n        return dup;\n    }\n\n    public preventDefault(): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.prevDefault = true;\n        return dup;\n    }\n\n    public catch(fn: (ex: unknown) => void): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.onErrFnArray.push(fn);\n        return dup;\n    }\n\n    public name(name: string): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.bindingName = name;\n        return dup;\n    }\n\n    public configureRules(ruleName: RuleName, severity: Severity): Binder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.linterRules.set(ruleName, severity);\n        return dup;\n    }\n\n    public usingInteraction<I2 extends Interaction<D2>, A2, D2 extends InteractionData = InteractionDataType<I2>>\n    (fn: () => I2): Binder<C, I2, A2, D2> {\n        const dup = this.duplicate();\n        dup.usingFn = fn as unknown as () => I;\n        return dup as unknown as Binder<C, I2, A2, D2>;\n    }\n\n    public toProduce<C2 extends Command>(fn: (i: D) => C2): Binder<C2, I, A, D> {\n        const dup = this.duplicate();\n        dup.produceFn = fn as unknown as (i: D | undefined) => C;\n        return dup as unknown as Binder<C2, I, A, D>;\n    }\n\n    public toProduceAnon(fn: () => void): Binder<Command, I, A, D> {\n        const dup = this.duplicate();\n        dup.produceFn = ((): Command => new AnonCmd(fn)) as unknown as (i: D | undefined) => C;\n        return dup as unknown as Binder<Command, I, A, D>;\n    }\n\n    public abstract bind(): Binding<C, I, A, D>;\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * The error to use when the command being processsed should be undoable.\n * @category Helper\n */\nexport class MustBeUndoableCmdError extends Error {\n    public constructor(cmdProducer: unknown) {\n        super(`The following command must be undoable: ${String(cmdProducer)}`);\n        this.name = \"MustBeUndoableCmdError\";\n    }\n}\n\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {MustBeUndoableCmdError} from \"./MustBeUndoableCmdError\";\nimport {isUndoableType} from \"../../api/undo/Undoable\";\nimport {Subject} from \"rxjs\";\nimport type {Binding} from \"../../api/binding/Binding\";\nimport type {VisitorBinding} from \"../../api/binding/VisitorBinding\";\nimport type {RuleName, Severity} from \"../../api/checker/Checker\";\nimport type {Command} from \"../../api/command/Command\";\nimport type {Interaction, InteractionDataType} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {UndoHistoryBase} from \"../../api/undo/UndoHistoryBase\";\nimport type {Observable} from \"rxjs\";\n\n/**\n * The base class to do bindings, i.e. bindings between user interactions and (undoable) commands.\n * @typeParam C - The type of the command that will produce this binding.\n * @typeParam I - The type of the interaction that will use this binding.\n * @typeParam A - The type of the accumulator.\n * @typeParam D - The interaction data type (infered from the interaction type)\n * @category Binding\n */\nexport class BindingImpl<C extends Command, I extends Interaction<D>, A, D extends InteractionData = InteractionDataType<I>>\nimplements Binding<C, I, A, D> {\n\n    protected _name: string | undefined;\n\n    protected _timeEnded: number;\n\n    protected _timeCancelled: number;\n\n    protected _activated: boolean;\n\n    /**\n     * The source interaction.\n     */\n    protected readonly _interaction: I;\n\n    public accumulator: A;\n\n    public readonly linterRules: ReadonlyMap<RuleName, Severity>;\n\n    /**\n     * The current action in progress.\n     */\n    protected _cmd: C | undefined;\n\n    public readonly continuousCmdExecution: boolean;\n\n    /**\n     * The command class to instantiate.\n     */\n    protected readonly cmdProducer: (i?: D) => C;\n\n    protected readonly cmdsProduced: Subject<C>;\n\n    protected readonly accumulatorInit: A | undefined;\n\n    protected undoHistory: UndoHistoryBase;\n\n    protected logger: Logger;\n\n    public logBinding: boolean;\n\n    /**\n     * Logs binding usage information, to perform data analysis on usage\n     */\n    public logCmd: boolean;\n\n    public logUsage: boolean;\n\n    /**\n     * Creates a binding.\n     * @param continuousExecution - Specifies whether the command must be executed on each step of the interaction.\n     * @param interaction - The user interaction of the binding.\n     * @param cmdProducer - The type of the command that will be created. Used to instantiate the command by reflexivity.\n     * The class must be public and must have a constructor with no parameter.\n     * @param widgets - The widgets on which the binding will operate.\n     * @param undoHistory - The undo/redo history.\n     * @param logger - The logger to use\n     * @param linterRules - The linting rules to use\n     * @param name - The optional name of the binding. If not provided, computed based on the interaction and command names\n     * @param accInit - The initial accumulator to use during the binding execution.\n     */\n    public constructor(continuousExecution: boolean, interaction: I, cmdProducer: (i?: D) => C,\n                       widgets: ReadonlyArray<unknown>, undoHistory: UndoHistoryBase, logger: Logger,\n                       linterRules: ReadonlyMap<RuleName, Severity>, name?: string, accInit?: A) {\n        // The name is partial until the binding procudes its first command\n        this._name = name;\n        this.linterRules = linterRules;\n        this.accumulatorInit = accInit;\n        this.logBinding = false;\n        this.logCmd = false;\n        this.logUsage = false;\n        this._timeCancelled = 0;\n        this._timeEnded = 0;\n        this.accumulator = {...this.accumulatorInit} as A;\n        this.cmdsProduced = new Subject();\n        this.cmdProducer = cmdProducer;\n        this._interaction = interaction;\n        this._cmd = undefined;\n        this.continuousCmdExecution = continuousExecution;\n        this._activated = true;\n        this.undoHistory = undoHistory;\n        this.logger = logger;\n        this._interaction.fsm.addHandler({\n            \"fsmStarts\": () => {\n                this.fsmStarts();\n            },\n            \"fsmUpdates\": () => {\n                this.fsmUpdates();\n            },\n            \"fsmStops\": () => {\n                this.fsmStops();\n            },\n            \"fsmCancels\": () => {\n                this.fsmCancels();\n            },\n            \"fsmError\": (err: unknown) => {\n                this.fsmError(err);\n            }\n        });\n        interaction.registerToNodes(widgets);\n    }\n\n    private reinitAccumulator(): void {\n        this.accumulator = {...this.accumulatorInit} as A;\n    }\n\n    public get name(): string {\n        return this._name ?? this._interaction.constructor.name;\n    }\n\n    protected whenStart(): boolean {\n        return true;\n    }\n\n    protected whenUpdate(): boolean {\n        return true;\n    }\n\n    protected whenStop(): boolean {\n        return true;\n    }\n\n    /**\n     * Stops the interaction and clears all its events waiting for a process.\n     */\n    public clearEvents(): void {\n        this._interaction.fullReinit();\n    }\n\n    /**\n     * creates the command of the binding. If the attribute 'cmd' is not null, nothing will be done.\n     * @returns The created command or undefined if an error occurred\n     */\n    protected createCommand(): C | undefined {\n        try {\n            const cmd = this.cmdProducer(this.interaction.data);\n            /*\n             * Updating the name of the binding according to the name of the command.\n             * Cannot be done elsewhere since we cannot access the concrete type of the command.\n             */\n            if (this._name === undefined) {\n                this._name = `${this._interaction.constructor.name}:${cmd.constructor.name}`;\n            }\n            return cmd;\n        } catch (error: unknown) {\n            this.logger.logBindingErr(\"Error while creating a command\", error);\n            this.catch(error);\n            return undefined;\n        }\n    }\n\n    public isWhenDefined(): boolean {\n        return false;\n    }\n\n    /**\n     * Called when an error appeared during the execution of the binding. To override.\n     * @param _err - The error.\n     */\n    public catch(_err: unknown): void {\n        // To override.\n    }\n\n    /**\n     * After being created, this method initialises the command. To override.\n     */\n    public first(): void {\n        // To override.\n    }\n\n    /**\n     * Updates the current command. To override.\n     */\n    // eslint-disable-next-line unicorn/no-thenable\n    public then(): void {\n        // To override.\n    }\n\n    /**\n     * When the interaction ends. To override.\n     */\n    public end(): void {\n        // To override.\n    }\n\n    /**\n     * When the interaction is cancelled. To override.\n     */\n    public cancel(): void {\n        // To override.\n    }\n\n    /**\n     * When the interaction ends or is cancelled. To override.\n     */\n    public endOrCancel(): void {\n        // To override.\n    }\n\n    /**\n     * Called when an executed command did not had effect. To override.\n     */\n    public ifCmdHadNoEffect(): void {\n        // To override.\n    }\n\n    /**\n     * Called when an executed command had effects. To override.\n     */\n    public ifCmdHadEffects(): void {\n        // to override.\n    }\n\n    /**\n     * Called when an ongoing command cannot be executed. To override.\n     */\n    public ifCannotExecuteCmd(): void {\n        // to override.\n    }\n\n    public get interaction(): I {\n        return this._interaction;\n    }\n\n    public get command(): C | undefined {\n        return this._cmd;\n    }\n\n    public get activated(): boolean {\n        return this._activated;\n    }\n\n    public set activated(activated: boolean) {\n        if (this.logBinding) {\n            this.logger.logBindingMsg(`Binding Activated: ${String(activated)}`);\n        }\n        this._activated = activated;\n        this._interaction.setActivated(activated);\n        if (!this._activated && this._cmd !== undefined) {\n            this._cmd.flush();\n            this._cmd = undefined;\n        }\n        this.reinitAccumulator();\n    }\n\n    public get running(): boolean {\n        return this._interaction.isRunning();\n    }\n\n    protected fsmError(err: unknown): void {\n        if (this.logBinding) {\n            this.logger.logBindingErr(\"\", err);\n        }\n        this.catch(err);\n    }\n\n    protected fsmCancels(): void {\n        if (this._cmd !== undefined) {\n            if (this.logBinding) {\n                this.logger.logBindingMsg(\"Binding cancelled\");\n            }\n            this._cmd.cancel();\n            if (this.logCmd) {\n                this.logger.logCmdMsg(\"Cancelling command\", this._cmd.constructor.name);\n            }\n\n            try {\n                if (this.continuousCmdExecution) {\n                    this.cancelContinousWithEffectsCmd(this._cmd);\n                }\n            } finally {\n                this._cmd = undefined;\n                this.cancel();\n                this.endOrCancel();\n                this._timeCancelled++;\n            }\n        }\n\n        this.reinitAccumulator();\n\n        if (this.logUsage) {\n            this.logger.logBindingEnd(this.name, true);\n        }\n    }\n\n    private cancelContinousWithEffectsCmd(cmd: C): void {\n        if (isUndoableType(cmd)) {\n            cmd.undo();\n            if (this.logCmd) {\n                this.logger.logCmdMsg(\"Command undone\", cmd.constructor.name);\n            }\n        } else {\n            throw new MustBeUndoableCmdError(cmd);\n        }\n    }\n\n    protected fsmStarts(): void {\n        if (!this._activated) {\n            return;\n        }\n\n        const ok: boolean = this.whenStart();\n\n        if (this.logBinding) {\n            this.logger.logBindingMsg(`Starting binding: ${String(ok)}`);\n        }\n        if (ok) {\n            this.reinitAccumulator();\n            this._cmd = this.createCommand();\n            if (this._cmd !== undefined) {\n                this.first();\n                if (this.logCmd) {\n                    this.logger.logCmdMsg(\"Command created and init\", this._cmd.constructor.name);\n                }\n            }\n        }\n\n        if (this.logUsage) {\n            this.logger.logBindingStart(this.name);\n        }\n    }\n\n    protected fsmUpdates(): void {\n        if (!this._activated) {\n            return;\n        }\n\n        if (this.logBinding) {\n            this.logger.logBindingMsg(\"Binding updates\");\n        }\n\n        const cmd = this.createAndInitCommand(this.whenUpdate());\n        if (cmd !== undefined) {\n            if (this.logCmd) {\n                this.logger.logCmdMsg(\"Command update\");\n            }\n\n            this.then();\n\n            if (this.continuousCmdExecution) {\n                this.continuousExecutionOnFSMUpdate(cmd);\n            }\n        }\n    }\n\n    private continuousExecutionOnFSMUpdate(cmd: C): void {\n        const ok = cmd.execute();\n\n        if (this.logCmd) {\n            this.logger.logCmdMsg(`Try to execute command (continuous execution), is cmd undefined? ${String(this._cmd === undefined)}`);\n        }\n\n        if (ok instanceof Promise) {\n            ok.then(executed => {\n                if (!executed) {\n                    this.ifCannotExecuteCmd();\n                }\n\n                if (this.logCmd) {\n                    this.logger.logCmdMsg(`Continuous command execution had this result: ${String(executed)}`);\n                }\n            }).catch((error: unknown) => {\n                this.logger.logCmdErr(\"Error while executing the command continuously\", error);\n            });\n        } else {\n            if (!ok) {\n                this.ifCannotExecuteCmd();\n            }\n\n            if (this.logCmd) {\n                this.logger.logCmdMsg(`Continuous command execution had this result: ${String(ok)}`);\n            }\n        }\n    }\n\n    protected fsmStops(): void {\n        if (!this._activated) {\n            return;\n        }\n\n        if (this.logBinding) {\n            this.logger.logBindingMsg(\"Binding stops\");\n        }\n\n        let cancelled = false;\n        const cmd = this.createAndInitCommand(this.whenStop());\n\n        if (cmd === undefined) {\n            if (this._cmd !== undefined) {\n                if (this.logCmd) {\n                    this.logger.logCmdMsg(\"Cancelling the command\");\n                }\n                this._cmd.cancel();\n\n                try {\n                    if (this.continuousCmdExecution) {\n                        this.cancelContinousWithEffectsCmd(this._cmd);\n                    }\n                } finally {\n                    this._cmd = undefined;\n                    this.cancel();\n                    this.endOrCancel();\n                    this._timeCancelled++;\n                    cancelled = true;\n                }\n            }\n        } else {\n            this.executeCommandOnFSMStop(cmd);\n        }\n\n        this.reinitAccumulator();\n\n        if (this.logUsage) {\n            this.logger.logBindingEnd(this.name, cancelled);\n        }\n    }\n\n    private executeCommandOnFSMStop(cmd: C): void {\n        if (!this.continuousCmdExecution) {\n            this.then();\n            if (this.logCmd) {\n                this.logger.logCmdMsg(\"Command updated\");\n            }\n        }\n\n        /*\n         * Required to keep the command as because of async it may be set\n         * to undefined right after\n         */\n        const result = cmd.execute();\n\n        if (result instanceof Promise) {\n            result.then(executed => {\n                this._cmd = cmd;\n                this.afterCmdExecuted(cmd, executed);\n                /*\n                 * Cannot put these two lines in a finally block:\n                 * tests will failed as finally is called *after* the promise is resolved\n                 * provoking sync issues (treatments are done as soon as the promise is resolved)\n                 */\n                this._cmd = undefined;\n                this._timeEnded++;\n            }).catch((error: unknown) => {\n                this.logger.logCmdErr(\"Error while executing the command\", error);\n                this._cmd = undefined;\n                this._timeEnded++;\n            });\n        } else {\n            this.afterCmdExecuted(cmd, result);\n            this._cmd = undefined;\n            this._timeEnded++;\n        }\n    }\n\n    private createAndInitCommand(whenOk: boolean): C | undefined {\n        if (this.logBinding) {\n            this.logger.logBindingMsg(`when predicate is ${String(whenOk)}`);\n        }\n\n        if (whenOk) {\n            if (this._cmd === undefined) {\n                if (this.logCmd) {\n                    this.logger.logCmdMsg(\"Command creation\");\n                }\n                this._cmd = this.createCommand();\n                if (this._cmd !== undefined) {\n                    this.first();\n                }\n            }\n\n            return this._cmd;\n        }\n\n        return undefined;\n    }\n\n    private afterCmdExecuted(cmd: C, ok: boolean): void {\n        if (this.logCmd) {\n            this.logger.logCmdMsg(`Command execution had this result: ${String(ok)}`);\n        }\n        if (ok) {\n            this.end();\n            this.endOrCancel();\n        } else {\n            this.ifCannotExecuteCmd();\n        }\n\n        // In continuous mode, a command may have been executed in the update routine\n        if (cmd.getStatus() !== \"executed\") {\n            return;\n        }\n\n        // For commands executed at least one time\n        cmd.done();\n        this.cmdsProduced.next(cmd);\n\n        const hadEffect: boolean = cmd.hadEffect();\n\n        if (this.logCmd) {\n            this.logger.logCmdMsg(`Command execution had effect: ${String(hadEffect)}`);\n        }\n\n        if (hadEffect) {\n            if (isUndoableType(cmd)) {\n                this.undoHistory.add(cmd);\n            }\n            this.ifCmdHadEffects();\n        } else {\n            this.ifCmdHadNoEffect();\n        }\n    }\n\n    public uninstallBinding(): void {\n        this.activated = false;\n        this.cmdsProduced.complete();\n        this.logBinding = false;\n        this.logCmd = false;\n        this.logUsage = false;\n        this._interaction.uninstall();\n    }\n\n    public get produces(): Observable<C> {\n        return this.cmdsProduced;\n    }\n\n    public get timesEnded(): number {\n        return this._timeEnded;\n    }\n\n    public get timesCancelled(): number {\n        return this._timeCancelled;\n    }\n\n    public acceptVisitor(visitor: VisitorBinding): void {\n        visitor.visitBinding(this);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * The error an FSM will throw to cancel the user interaction.\n * @category FSM\n */\nexport class CancelFSMError extends Error {\n    public constructor() {\n        super();\n        this.name = \"CancelFSMError\";\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {BindingImpl} from \"./BindingImpl\";\nimport {isWhenAtEnd, isWhenAtStart, isWhenAtThen, isWhenStrict} from \"../../api/binder/When\";\nimport {CancelFSMError} from \"../fsm/CancelFSMError\";\nimport type {When} from \"../../api/binder/When\";\nimport type {RuleName, Severity} from \"../../api/checker/Checker\";\nimport type {Command} from \"../../api/command/Command\";\nimport type {Interaction, InteractionDataType} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {LogLevel} from \"../../api/logging/LogLevel\";\nimport type {UndoHistoryBase} from \"../../api/undo/UndoHistoryBase\";\n\n/**\n * A special implementation of a binding to be used in binders.\n * @typeParam C - The type of the command that will produce this binding.\n * @typeParam I - The type of the interaction that will use this binding.\n * @typeParam A - The type of the accumulator.\n * @typeParam D - The interaction data type (infered from the interaction type)\n * @category Binding\n */\nexport class AnonBinding<C extends Command, I extends Interaction<D>, A, D extends InteractionData = InteractionDataType<I>>\n    extends BindingImpl<C, I, A, D> {\n\n    private readonly firstFn: ((c: C, i: D, acc: A) => void) | undefined;\n\n    private readonly thenFn: ((c: C, i: D, acc: A) => void) | undefined;\n\n    private readonly whenFn: Array<When<D, A>> | undefined;\n\n    private readonly cancelFn: ((i: D, acc: A) => void) | undefined;\n\n    private readonly endOrCancelFn: ((i: D, acc: A) => void) | undefined;\n\n    private readonly hadEffectsFn: ((c: C, i: D, acc: A) => void) | undefined;\n\n    private readonly hadNoEffectFn: ((c: C, i: D, acc: A) => void) | undefined;\n\n    private readonly cannotExecFn: ((c: C, i: D, acc: A) => void) | undefined;\n\n    private readonly onEndFn: ((c: C, i: D, acc: A) => void) | undefined;\n\n    private readonly onErrFn: ((ex: unknown) => void) | undefined;\n\n    public constructor(continuousExec: boolean, interaction: I, undoHistory: UndoHistoryBase,\n                       logger: Logger, cmdSupplierFn: (d: D | undefined) => C,\n                       widgets: ReadonlyArray<unknown>, dynamicNodes: ReadonlyArray<Node>,\n                       loggers: ReadonlyArray<LogLevel>, timeoutThrottle: number,\n                       stopPropagation: boolean, prevDefault: boolean, linterRules: ReadonlyMap<RuleName, Severity>,\n                       firstFn?: (c: C, i: D, acc: A) => void,\n                       thenFn?: (c: C, i: D, acc: A) => void, whenFn?: Array<When<D, A>>,\n                       endFn?: (c: C, i: D, acc: A) => void, cancelFn?: (i: D, acc: A) => void,\n                       endOrCancelFn?: (i: D, acc: A) => void, hadEffectsFn?: (c: C, i: D, acc: A) => void,\n                       hadNoEffectFn?: (c: C, i: D, acc: A) => void, cannotExecFn?: (c: C, i: D, acc: A) => void,\n                       onErrFn?: (ex: unknown) => void, name?: string, accInit?: A) {\n        super(continuousExec, interaction, cmdSupplierFn, widgets, undoHistory, logger, linterRules, name, accInit);\n        this.configureLoggers(loggers);\n        this.firstFn = firstFn;\n        this.thenFn = thenFn;\n        this.cancelFn = cancelFn;\n        this.endOrCancelFn = endOrCancelFn;\n        this.whenFn = whenFn;\n        this.onEndFn = endFn;\n        this.hadEffectsFn = hadEffectsFn;\n        this.hadNoEffectFn = hadNoEffectFn;\n        this.cannotExecFn = cannotExecFn;\n        this.onErrFn = onErrFn;\n\n        this.interaction.stopImmediatePropagation = stopPropagation;\n        this.interaction.preventDefault = prevDefault;\n        this.interaction.setThrottleTimeout(timeoutThrottle);\n        for (const node of dynamicNodes) {\n            interaction.registerToNodeChildren(node);\n        }\n    }\n\n    private configureLoggers(loggers: ReadonlyArray<LogLevel>): void {\n        if (loggers.length > 0) {\n            this.logCmd = loggers.includes(\"command\");\n            this.logBinding = loggers.includes(\"binding\");\n            this.logUsage = loggers.includes(\"usage\");\n            this.interaction.log(loggers.includes(\"interaction\"));\n        }\n    }\n\n    public override first(): void {\n        const cmd = this.command;\n        if (this.firstFn !== undefined && cmd !== undefined) {\n            try {\n                this.firstFn(cmd, this.interaction.data, this.accumulator);\n            } catch (error: unknown) {\n                this.catch(error);\n                this.logger.logBindingErr(\"Crash in 'first'\", error);\n            }\n        }\n    }\n\n    // eslint-disable-next-line unicorn/no-thenable\n    public override then(): void {\n        const cmd = this.command;\n        if (this.thenFn !== undefined && cmd !== undefined) {\n            try {\n                this.thenFn(cmd, this.interaction.data, this.accumulator);\n            } catch (error: unknown) {\n                this.catch(error);\n                this.logger.logBindingErr(\"Crash in 'then'\", error);\n            }\n        }\n    }\n\n    public override end(): void {\n        const cmd = this.command;\n        if (this.onEndFn !== undefined && cmd !== undefined) {\n            try {\n                this.onEndFn(cmd, this.interaction.data, this.accumulator);\n            } catch (error: unknown) {\n                this.catch(error);\n                this.logger.logBindingErr(\"Crash in 'end'\", error);\n            }\n        }\n    }\n\n    public override cancel(): void {\n        if (this.cancelFn !== undefined) {\n            try {\n                this.cancelFn(this.interaction.data, this.accumulator);\n            } catch (error: unknown) {\n                this.catch(error);\n                this.logger.logBindingErr(\"Crash in 'cancel'\", error);\n            }\n        }\n    }\n\n    public override endOrCancel(): void {\n        if (this.endOrCancelFn !== undefined) {\n            try {\n                this.endOrCancelFn(this.interaction.data, this.accumulator);\n            } catch (error: unknown) {\n                this.catch(error);\n                this.logger.logBindingErr(\"Crash in 'endOrCancel'\", error);\n            }\n        }\n    }\n\n    public override ifCmdHadNoEffect(): void {\n        const cmd = this.command;\n        if (this.hadNoEffectFn !== undefined && cmd !== undefined) {\n            try {\n                this.hadNoEffectFn(cmd, this.interaction.data, this.accumulator);\n            } catch (error: unknown) {\n                this.catch(error);\n                this.logger.logBindingErr(\"Crash in 'ifHadNoEffect'\", error);\n            }\n        }\n    }\n\n    public override ifCmdHadEffects(): void {\n        const cmd = this.command;\n        if (this.hadEffectsFn !== undefined && cmd !== undefined) {\n            try {\n                this.hadEffectsFn(cmd, this.interaction.data, this.accumulator);\n            } catch (error: unknown) {\n                this.catch(error);\n                this.logger.logBindingErr(\"Crash in 'ifHadEffects'\", error);\n            }\n        }\n    }\n\n    public override ifCannotExecuteCmd(): void {\n        const cmd = this.command;\n        if (this.cannotExecFn !== undefined && cmd !== undefined) {\n            try {\n                this.cannotExecFn(cmd, this.interaction.data, this.accumulator);\n            } catch (error: unknown) {\n                this.catch(error);\n                this.logger.logBindingErr(\"Crash in 'ifCannotExecute'\", error);\n            }\n        }\n    }\n\n    protected override whenStart(): boolean {\n        return this.whenChecker(when => isWhenAtStart(when.type));\n    }\n\n    protected override whenUpdate(): boolean {\n        return this.whenChecker(when => isWhenAtThen(when.type));\n    }\n\n    protected override whenStop(): boolean {\n        return this.whenChecker(when => isWhenAtEnd(when.type));\n    }\n\n    private whenChecker(filterPredicate: (when: When<D, A>) => boolean): boolean {\n        const ok = this.whenFn\n            ?.filter(filterPredicate)\n            .every(when => this.executeWhen(when)) ?? false;\n        if (this.logBinding) {\n            this.logger.logBindingMsg(`Checking condition: ${String(ok)}`);\n        }\n        return ok;\n    }\n\n    private executeWhen(when: When<D, A>): boolean {\n        let res: boolean;\n        try {\n            res = when.fn(this.interaction.data, this.accumulator);\n        } catch (error: unknown) {\n            res = false;\n            this.catch(error);\n            this.logger.logBindingErr(\"Crash in checking condition\", error);\n        }\n        if (!res && isWhenStrict(when.type)) {\n            if (this.logBinding) {\n                this.logger.logBindingMsg(`Cancelling interaction: ${this._interaction.constructor.name}`);\n            }\n            throw new CancelFSMError();\n        }\n\n        return res;\n    }\n\n    public override catch(err: unknown): void {\n        if (this.onErrFn !== undefined) {\n            try {\n                this.onErrFn(err);\n            } catch (error: unknown) {\n                this.logger.logBindingErr(\"Crash in 'catch'\", error);\n            }\n        }\n    }\n\n    public override isWhenDefined(): boolean {\n        return this.whenFn !== undefined && this.whenFn.length > 0;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {Binder} from \"./Binder\";\nimport {AnonBinding} from \"../binding/AnonBinding\";\nimport type {Widget} from \"../../api/binder/BaseBinderBuilder\";\nimport type {CmdUpdateBinder} from \"../../api/binder/CmdUpdateBinder\";\nimport type {InteractionCmdUpdateBinder} from \"../../api/binder/InteractionCmdUpdateBinder\";\nimport type {WhenType} from \"../../api/binder/When\";\nimport type {Binding} from \"../../api/binding/Binding\";\nimport type {BindingsObserver} from \"../../api/binding/BindingsObserver\";\nimport type {RuleName, Severity} from \"../../api/checker/Checker\";\nimport type {Command} from \"../../api/command/Command\";\nimport type {Interaction, InteractionDataType} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {LogLevel} from \"../../api/logging/LogLevel\";\nimport type {UndoHistoryBase} from \"../../api/undo/UndoHistoryBase\";\n\n/**\n * The base binding builder for bindings where commands can be updated while the user interaction is running.\n * @typeParam C - The type of the command to produce.\n * @category Binding\n */\nexport class UpdateBinder<C extends Command, I extends Interaction<D>, A, D extends InteractionData = InteractionDataType<I>>\n    extends Binder<C, I, A, D> implements CmdUpdateBinder<C>, InteractionCmdUpdateBinder<C, I, A, D> {\n\n    protected thenFn?: (c: C, i: D, acc: A) => void;\n\n    protected cancelFn?: (i: D, acc: A) => void;\n\n    protected endOrCancelFn?: (i: D, acc: A) => void;\n\n    protected continuousCmdExecution: boolean;\n\n    protected throttleTimeout: number;\n\n    protected thenFnArray: Array<(c: C, i: D, acc: A) => void> = [];\n\n    protected cancelFnArray: Array<(i: D, acc: A) => void> = [];\n\n    protected endOrCancelFnArray: Array<(i: D, acc: A) => void> = [];\n\n    public constructor(undoHistory: UndoHistoryBase, logger: Logger, observer?: BindingsObserver,\n                       binder?: Partial<UpdateBinder<C, I, A, D>>, acc?: A) {\n        super(undoHistory, logger, observer, binder, acc);\n\n        this.continuousCmdExecution = false;\n        this.throttleTimeout = 0;\n        Object.assign(this, binder);\n\n        // Arrays have to be cloned again in each subclass of Binder after Object.assign() since it undoes the changes\n        this.copyFnArraysUpdate();\n    }\n\n    protected copyFnArraysUpdate(): void {\n        super.copyFnArrays();\n        this.thenFnArray = Array.from(this.thenFnArray);\n        this.thenFn = (c: C, i: D, acc: A): void => {\n            for (const fn of this.thenFnArray) {\n                fn(c, i, acc);\n            }\n        };\n        this.cancelFnArray = Array.from(this.cancelFnArray);\n        this.cancelFn = (i: D, acc: A): void => {\n            for (const fn of this.cancelFnArray) {\n                fn(i, acc);\n            }\n        };\n        this.endOrCancelFnArray = Array.from(this.endOrCancelFnArray);\n        this.endOrCancelFn = (i: D, acc: A): void => {\n            for (const fn of this.endOrCancelFnArray) {\n                fn(i, acc);\n            }\n        };\n    }\n\n    // eslint-disable-next-line unicorn/no-thenable\n    public then(fn: (c: C, i: D, acc: A) => void): UpdateBinder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.thenFnArray.push(fn);\n        return dup;\n    }\n\n    public continuousExecution(): UpdateBinder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.continuousCmdExecution = true;\n        return dup;\n    }\n\n    public cancel(fn: (i: D, acc: A) => void): UpdateBinder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.cancelFnArray.push(fn);\n        return dup;\n    }\n\n    public endOrCancel(fn: (i: D, acc: A) => void): UpdateBinder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.endOrCancelFnArray.push(fn);\n        return dup;\n    }\n\n    public throttle(timeout: number): UpdateBinder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.throttleTimeout = timeout;\n        return dup;\n    }\n\n    public override on<W>(widget: ReadonlyArray<Widget<W>> | Widget<W>, ...widgets: ReadonlyArray<Widget<W>>): UpdateBinder<C, I, A, D> {\n        return super.on(widget, ...widgets) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override onDynamic(node: Widget<Node>): UpdateBinder<C, I, A, D> {\n        return super.onDynamic(node) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override first(fn: (c: C, i: D, acc: A) => void): UpdateBinder<C, I, A, D> {\n        return super.first(fn) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override when(fn: (i: D, acc: Readonly<A>) => boolean, mode?: WhenType): UpdateBinder<C, I, A, D> {\n        return super.when(fn, mode) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override ifHadEffects(fn: (c: C, i: D, acc: A) => void): UpdateBinder<C, I, A, D> {\n        return super.ifHadEffects(fn) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override ifHadNoEffect(fn: (c: C, i: D, acc: A) => void): UpdateBinder<C, I, A, D> {\n        return super.ifHadNoEffect(fn) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override ifCannotExecute(fn: (c: C, i: D, acc: A) => void): UpdateBinder<C, I, A, D> {\n        return super.ifCannotExecute(fn) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override end(fn: (c: C, i: D, acc: A) => void): UpdateBinder<C, I, A, D> {\n        return super.end(fn) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override log(...level: ReadonlyArray<LogLevel>): UpdateBinder<C, I, A, D> {\n        return super.log(...level) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override stopImmediatePropagation(): UpdateBinder<C, I, A, D> {\n        return super.stopImmediatePropagation() as UpdateBinder<C, I, A, D>;\n    }\n\n    public override preventDefault(): UpdateBinder<C, I, A, D> {\n        return super.preventDefault() as UpdateBinder<C, I, A, D>;\n    }\n\n    public override catch(fn: (ex: unknown) => void): UpdateBinder<C, I, A, D> {\n        return super.catch(fn) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override name(name: string): UpdateBinder<C, I, A, D> {\n        return super.name(name) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override configureRules(ruleName: RuleName, severity: Severity): UpdateBinder<C, I, A, D> {\n        return super.configureRules(ruleName, severity) as UpdateBinder<C, I, A, D>;\n    }\n\n    public override usingInteraction<I2 extends Interaction<D2>, A2, D2 extends InteractionData = InteractionDataType<I2>>\n    (fn: () => I2): UpdateBinder<C, I2, A2, D2> {\n        return super.usingInteraction(fn) as UpdateBinder<C, I2, A2, D2>;\n    }\n\n    public override toProduce<C2 extends Command>(fn: (i: D) => C2): UpdateBinder<C2, I, A, D> {\n        return super.toProduce(fn) as UpdateBinder<C2, I, A, D>;\n    }\n\n    public override toProduceAnon(fn: () => void): UpdateBinder<Command, I, A, D> {\n        return super.toProduceAnon(fn) as UpdateBinder<Command, I, A, D>;\n    }\n\n    protected duplicate(): UpdateBinder<C, I, A, D> {\n        return new UpdateBinder<C, I, A, D>(this.undoHistory, this.logger, this.observer, this);\n    }\n\n    public bind(): Binding<C, I, A, D> {\n        if (this.usingFn === undefined) {\n            throw new Error(\"The interaction supplier cannot be undefined here\");\n        }\n\n        if (this.produceFn === undefined) {\n            throw new Error(\"The command supplier cannot be undefined here\");\n        }\n\n        const binding = new AnonBinding(this.continuousCmdExecution, this.usingFn(), this.undoHistory, this.logger, this.produceFn,\n            Array.from(this.widgets), Array.from(this.dynamicNodes), Array.from(this.logLevels),\n            this.throttleTimeout, this.stopPropagation, this.prevDefault, new Map(this.linterRules), this.firstFn, this.thenFn,\n            Array.from(this.whenFnArray), this.endFn, this.cancelFn, this.endOrCancelFn, this.hadEffectsFn,\n            this.hadNoEffectFn, this.cannotExecFn, this.onErrFn, this.bindingName, this.accInit);\n\n        this.observer?.observeBinding(binding);\n\n        return binding;\n    }\n}\n","/* eslint-disable unicorn/no-null */\nimport type {Flushable} from \"./Flushable\";\nimport type {UnitInteractionData} from \"../../api/interaction/UnitInteractionData\";\n\n/**\n * The base implementation class for most of interaction data.\n * Contains basic information.\n * @category Interaction Data\n */\nexport abstract class InteractionDataBase implements UnitInteractionData, Flushable {\n    protected currentTargetData: EventTarget | null = null;\n\n    protected targetData: EventTarget | null = null;\n\n    protected timeStampData = 0;\n\n    public copy(data: UnitInteractionData): void {\n        /*\n         * Cannot use Object.assign because of a strange implementation of Event\n         * that prevents accessing the properties\n         */\n        this.currentTargetData = data.currentTarget;\n        this.targetData = data.target;\n        this.timeStampData = data.timeStamp;\n    }\n\n    public flush(): void {\n        this.currentTargetData = null;\n        this.targetData = null;\n        this.timeStampData = 0;\n    }\n\n    public get currentTarget(): EventTarget | null {\n        return this.currentTargetData;\n    }\n\n    public get target(): EventTarget | null {\n        return this.targetData;\n    }\n\n    public get timeStamp(): number {\n        return this.timeStampData;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {InteractionDataBase} from \"./InteractionDataBase\";\nimport type {Flushable} from \"./Flushable\";\nimport type {KeyData} from \"../../api/interaction/KeyData\";\n\n/**\n * The interaction data that stores a single key.\n * @category Interaction Data\n */\nexport class KeyDataImpl extends InteractionDataBase implements KeyData, Flushable {\n    private codeData = \"\";\n\n    private keyData = \"\";\n\n    private locationData = 0;\n\n    private repeatData = false;\n\n    private altKeyData = false;\n\n    private ctrlKeyData = false;\n\n    private metaKeyData = false;\n\n    private shiftKeyData = false;\n\n    public override flush(): void {\n        super.flush();\n        this.codeData = \"\";\n        this.keyData = \"\";\n        this.locationData = 0;\n        this.repeatData = false;\n        this.altKeyData = false;\n        this.ctrlKeyData = false;\n        this.metaKeyData = false;\n        this.shiftKeyData = false;\n    }\n\n    public override copy(data: KeyData): void {\n        super.copy(data);\n        /*\n         * Cannot use Object.assign because of a strange implementation of Event\n         * that prevents accessing the properties\n         */\n        this.codeData = data.code;\n        this.keyData = data.key;\n        this.locationData = data.location;\n        this.repeatData = data.repeat;\n        this.altKeyData = data.altKey;\n        this.ctrlKeyData = data.ctrlKey;\n        this.metaKeyData = data.metaKey;\n        this.shiftKeyData = data.shiftKey;\n    }\n\n    public get altKey(): boolean {\n        return this.altKeyData;\n    }\n\n    public get code(): string {\n        return this.codeData;\n    }\n\n    public get ctrlKey(): boolean {\n        return this.ctrlKeyData;\n    }\n\n    public get key(): string {\n        return this.keyData;\n    }\n\n    public get location(): number {\n        return this.locationData;\n    }\n\n    public get metaKey(): boolean {\n        return this.metaKeyData;\n    }\n\n    public get repeat(): boolean {\n        return this.repeatData;\n    }\n\n    public get shiftKey(): boolean {\n        return this.shiftKeyData;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {Flushable} from \"./Flushable\";\nimport type {KeyData} from \"../../api/interaction/KeyData\";\nimport type {KeysData} from \"../../api/interaction/KeysData\";\n\n/**\n * The user interaction data that stores a sequence of used keys.\n * @category Interaction Data\n */\nexport class KeysDataImpl implements KeysData, Flushable {\n    private readonly keysData: Array<KeyData> = [];\n\n    public flush(): void {\n        this.keysData.length = 0;\n    }\n\n    public get keys(): ReadonlyArray<KeyData> {\n        return this.keysData;\n    }\n\n    public addKey(key: KeyData): void {\n        this.keysData.push(key);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {UpdateBinder} from \"./UpdateBinder\";\nimport {AnonBinding} from \"../binding/AnonBinding\";\nimport {KeyDataImpl} from \"../interaction/KeyDataImpl\";\nimport {KeysDataImpl} from \"../interaction/KeysDataImpl\";\nimport type {Widget} from \"../../api/binder/BaseBinderBuilder\";\nimport type {KeyInteractionCmdUpdateBinder} from \"../../api/binder/KeyInteractionCmdUpdateBinder\";\nimport type {WhenType} from \"../../api/binder/When\";\nimport type {Binding} from \"../../api/binding/Binding\";\nimport type {BindingsObserver} from \"../../api/binding/BindingsObserver\";\nimport type {RuleName, Severity} from \"../../api/checker/Checker\";\nimport type {Command} from \"../../api/command/Command\";\nimport type {Interaction, InteractionDataType} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {LogLevel} from \"../../api/logging/LogLevel\";\nimport type {UndoHistoryBase} from \"../../api/undo/UndoHistoryBase\";\n\n/**\n * The base binding builder to create bindings between a keys pressure interaction and a given command.\n * @typeParam C - The type of the command to produce.\n * @category Binding\n */\nexport class KeysBinder<C extends Command, I extends Interaction<D>, A, D extends InteractionData = InteractionDataType<I>>\n    extends UpdateBinder<C, I, A, D> implements KeyInteractionCmdUpdateBinder<C, I, A, D> {\n\n    private keysOrCodes: ReadonlyArray<string>;\n\n    private isCode: boolean;\n\n    // private readonly checkCodeFn: (i: InteractionData) => boolean;\n\n    public constructor(undoHistory: UndoHistoryBase, logger: Logger, observer?: BindingsObserver,\n                       binder?: Partial<KeysBinder<C, I, A, D>>, acc?: A) {\n        super(undoHistory, logger, observer, binder, acc);\n\n        this.isCode = false;\n        this.keysOrCodes = [];\n\n        Object.assign(this, binder);\n\n        // Arrays have to be cloned again in each subclass of Binder after Object.assign() since it undoes the changes\n        this.copyFnArraysUpdate();\n\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        this.keysOrCodes = this.keysOrCodes === undefined ? [] : Array.from(this.keysOrCodes);\n        this.completeWhenWithKeysPredicates();\n    }\n\n    private completeWhenWithKeysPredicates(): void {\n        const checkCodeFn = (i: D): boolean => {\n            let currentKeys: ReadonlyArray<string> = [];\n\n            if (this.isCode) {\n                if (i instanceof KeysDataImpl) {\n                    currentKeys = i.keys.map(key => key.code);\n                } else {\n                    if (i instanceof KeyDataImpl) {\n                        currentKeys = [i.code];\n                    }\n                }\n            } else {\n                if (i instanceof KeysDataImpl) {\n                    currentKeys = i.keys.map(key => key.key);\n                } else {\n                    if (i instanceof KeyDataImpl) {\n                        currentKeys = [i.key];\n                    }\n                }\n            }\n\n            return (this.keysOrCodes.length === 0 || this.keysOrCodes.length === currentKeys.length &&\n                    currentKeys.every((key: string) => this.keysOrCodes.includes(key)));\n        };\n\n        this.whenFnArray.push({\n            \"fn\": checkCodeFn,\n            \"type\": \"nonStrict\"\n        });\n    }\n\n    public with(isCode: boolean, ...keysOrCodes: ReadonlyArray<string>): KeysBinder<C, I, A, D> {\n        const dup = this.duplicate();\n        dup.keysOrCodes = Array.from(keysOrCodes);\n        dup.isCode = isCode;\n        return dup;\n    }\n\n    public override on<W>(widget: ReadonlyArray<Widget<W>> | Widget<W>, ...widgets: ReadonlyArray<Widget<W>>): KeysBinder<C, I, A, D> {\n        return super.on(widget, ...widgets) as KeysBinder<C, I, A, D>;\n    }\n\n    public override onDynamic(node: Widget<Node>): KeysBinder<C, I, A, D> {\n        return super.onDynamic(node) as KeysBinder<C, I, A, D>;\n    }\n\n    public override first(fn: (c: C, i: D, acc: A) => void): KeysBinder<C, I, A, D> {\n        return super.first(fn) as KeysBinder<C, I, A, D>;\n    }\n\n    public override when(fn: (() => boolean) | ((i: D, acc: Readonly<A>) => boolean), mode?: WhenType): KeysBinder<C, I, A, D> {\n        return super.when(fn, mode) as KeysBinder<C, I, A, D>;\n    }\n\n    public override ifHadEffects(fn: (c: C, i: D, acc: A) => void): KeysBinder<C, I, A, D> {\n        return super.ifHadEffects(fn) as KeysBinder<C, I, A, D>;\n    }\n\n    public override ifHadNoEffect(fn: (c: C, i: D, acc: A) => void): KeysBinder<C, I, A, D> {\n        return super.ifHadNoEffect(fn) as KeysBinder<C, I, A, D>;\n    }\n\n    public override ifCannotExecute(fn: (c: C, i: D, acc: A) => void): KeysBinder<C, I, A, D> {\n        return super.ifCannotExecute(fn) as KeysBinder<C, I, A, D>;\n    }\n\n    public override end(fn: (c: C, i: D, acc: A) => void): KeysBinder<C, I, A, D> {\n        return super.end(fn) as KeysBinder<C, I, A, D>;\n    }\n\n    public override log(...level: ReadonlyArray<LogLevel>): KeysBinder<C, I, A, D> {\n        return super.log(...level) as KeysBinder<C, I, A, D>;\n    }\n\n    public override stopImmediatePropagation(): KeysBinder<C, I, A, D> {\n        return super.stopImmediatePropagation() as KeysBinder<C, I, A, D>;\n    }\n\n    public override preventDefault(): KeysBinder<C, I, A, D> {\n        return super.preventDefault() as KeysBinder<C, I, A, D>;\n    }\n\n    // eslint-disable-next-line unicorn/no-thenable\n    public override then(fn: ((c: C, i: D, acc: A) => void) | ((c: C) => void)): KeysBinder<C, I, A, D> {\n        return super.then(fn) as KeysBinder<C, I, A, D>;\n    }\n\n    public override continuousExecution(): KeysBinder<C, I, A, D> {\n        return super.continuousExecution() as KeysBinder<C, I, A, D>;\n    }\n\n    public override throttle(timeout: number): KeysBinder<C, I, A, D> {\n        return super.throttle(timeout) as KeysBinder<C, I, A, D>;\n    }\n\n    public override cancel(fn: (i: D, acc: A) => void): KeysBinder<C, I, A, D> {\n        return super.cancel(fn) as KeysBinder<C, I, A, D>;\n    }\n\n    public override endOrCancel(fn: (i: D, acc: A) => void): KeysBinder<C, I, A, D> {\n        return super.endOrCancel(fn) as KeysBinder<C, I, A, D>;\n    }\n\n    public override catch(fn: (ex: unknown) => void): KeysBinder<C, I, A, D> {\n        return super.catch(fn) as KeysBinder<C, I, A, D>;\n    }\n\n    public override name(name: string): KeysBinder<C, I, A, D> {\n        return super.name(name) as KeysBinder<C, I, A, D>;\n    }\n\n    public override configureRules(ruleName: RuleName, severity: Severity): KeysBinder<C, I, A, D> {\n        return super.configureRules(ruleName, severity) as KeysBinder<C, I, A, D>;\n    }\n\n    public override toProduce<C2 extends Command>(fn: (i: D) => C2): KeysBinder<C2, I, A, D> {\n        return super.toProduce(fn) as KeysBinder<C2, I, A, D>;\n    }\n\n    public override toProduceAnon(fn: () => void): KeysBinder<Command, I, A, D> {\n        return super.toProduceAnon(fn) as KeysBinder<Command, I, A, D>;\n    }\n\n    public override usingInteraction<I2 extends Interaction<D2>, A2, D2 extends InteractionData = InteractionDataType<I2>>\n    (fn: () => I2): KeysBinder<C, I2, A2, D2> {\n        return super.usingInteraction(fn as unknown as () => Interaction<InteractionDataType<I2>>) as unknown as KeysBinder<C, I2, A2, D2>;\n    }\n\n    protected override duplicate(): KeysBinder<C, I, A, D> {\n        return new KeysBinder(this.undoHistory, this.logger, this.observer, this);\n    }\n\n    public override bind(): Binding<C, I, A, D> {\n        if (this.usingFn === undefined) {\n            throw new Error(\"The interaction supplier cannot be undefined here\");\n        }\n\n        if (this.produceFn === undefined) {\n            throw new Error(\"The command supplier cannot be undefined here\");\n        }\n\n        const binding = new AnonBinding(this.continuousCmdExecution, this.usingFn(), this.undoHistory,\n            this.logger, this.produceFn, Array.from(this.widgets), Array.from(this.dynamicNodes),\n            Array.from(this.logLevels), this.throttleTimeout, this.stopPropagation, this.prevDefault,\n            new Map(this.linterRules), this.firstFn, this.thenFn, Array.from(this.whenFnArray),\n            this.endFn, this.cancelFn, this.endOrCancelFn, this.hadEffectsFn,\n            this.hadNoEffectFn, this.cannotExecFn, this.onErrFn, this.bindingName, this.accInit);\n\n        this.observer?.observeBinding(binding);\n\n        return binding;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\nimport type {Transition} from \"../../api/fsm/Transition\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\n\n/**\n * The base implementation of a FSM transition.\n * @category FSM Transition\n */\nexport abstract class TransitionBase<E extends Event> implements Transition<E> {\n    public readonly src: OutputState;\n\n    public readonly tgt: InputState;\n\n    public readonly action: (evt: E) => void;\n\n    public readonly guard: (evt: E) => boolean;\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    protected constructor(srcState: OutputState, tgtState: InputState,\n                          action?: (evt: E) => void, guard?: (evt: E) => boolean) {\n        this.src = srcState;\n        this.tgt = tgtState;\n        this.action = action ?? ((): void => {});\n        this.guard = guard ?? ((): boolean => true);\n        this.src.addTransition(this);\n    }\n\n    public execute(event: Event): InputState | undefined {\n        if (this.accept(event) && this.guard(event)) {\n            this.src.fsm.stopCurrentTimeout();\n            this.action(event);\n            this.src.exit();\n            this.tgt.enter();\n            return this.tgt;\n        }\n        return undefined;\n    }\n\n    public abstract accept(event: Event): event is E;\n\n    public acceptVisitor(visitor: VisitorFSM): void {\n        visitor.visitTransition(this);\n    }\n\n    public abstract getAcceptedEvents(): ReadonlySet<EventType>;\n\n    public get target(): InputState {\n        return this.tgt;\n    }\n\n    public uninstall(): void {}\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType, MouseEventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * The base transition for mouse events.\n * @category FSM Transition\n */\nexport class MouseTransition extends TransitionBase<MouseEvent> {\n    private readonly acceptedEvents: ReadonlySet<EventType>;\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param types - The type of mouse event\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState, types: MouseEventType | ReadonlyArray<MouseEventType>,\n                       action?: (evt: MouseEvent) => void, guard?: (evt: MouseEvent) => boolean) {\n        super(srcState, tgtState, action, guard);\n        this.acceptedEvents = new Set(typeof types === \"string\" ? [types] : types);\n    }\n\n    public accept(event: Event): event is MouseEvent {\n        return event instanceof MouseEvent && this.getAcceptedEvents().has(event.type as EventType);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return this.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {MouseTransition} from \"./MouseTransition\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * This transition corresponds to a pressure of a button of a pointing device.\n * @category FSM Transition\n */\nexport class ClickTransition extends MouseTransition {\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: MouseEvent) => void, guard?: (evt: MouseEvent) => boolean) {\n        super(srcState, tgtState, [\"click\", \"auxclick\"], action, guard);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {State} from \"../../api/fsm/State\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\n\n/**\n * The base implementation of the State interface.\n * @category FSM\n */\nexport abstract class StateBase implements State {\n    public readonly fsm: FSM;\n\n    public readonly name: string;\n\n    /**\n     * Creates the state.\n     * @param stateMachine - The FSM that will contain the state.\n     * @param stateName - The name of this state.\n     */\n    protected constructor(stateMachine: FSM, stateName: string) {\n        this.fsm = stateMachine;\n        this.name = stateName;\n    }\n\n    public checkStartingState(): void {\n        if (!this.fsm.started && this.fsm.startingState === this) {\n            this.fsm.onStarting();\n        }\n    }\n\n    public uninstall(): void {}\n\n    public abstract acceptVisitor(visitor: VisitorFSM): void;\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {StateBase} from \"./StateBase\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\n\n/**\n * A state of an FSM.\n * A cancelling state cancels the FSM of a user interaction.\n * @category FSM\n */\nexport class CancellingState extends StateBase implements InputState {\n    /**\n     * Creates the state.\n     * @param stateMachine - The FSM that will contain the state.\n     * @param stateName - The name of this state.\n     */\n    public constructor(stateMachine: FSM, stateName: string) {\n        super(stateMachine, stateName);\n    }\n\n    public enter(): void {\n        this.fsm.onCancelling();\n    }\n\n    public override uninstall(): void {}\n\n    public override acceptVisitor(visitor: VisitorFSM): void {\n        visitor.visitCancellingState(this);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * Searches for a touch.\n * @param touches - The list of touches to search in.\n * @param idToFind - The ID of the touch to find.\n * @returns The found touch or nothing.\n * @category Helper\n */\nexport function getTouch(touches: TouchList, idToFind?: number): Touch | undefined {\n    for (const touch of touches) {\n        if (touch.identifier === idToFind) {\n            return touch;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Tests whether the given object is a HTML button.\n * @param target - The object to test.\n * @returns True: the object is a HTML button\n * @category Helper\n */\nexport function isButton(target: EventTarget): target is HTMLButtonElement {\n    return target instanceof HTMLButtonElement;\n}\n\n/**\n * Tests whether the given object is a HTML checkbox.\n * @param target - The object to test.\n * @returns True: the object is a HTML checkbox.\n * @category Helper\n */\nexport function isCheckBox(target: EventTarget): target is HTMLInputElement {\n    return target instanceof HTMLInputElement && target.getAttribute(\"type\") === \"checkbox\";\n}\n\n/**\n * Tests whether the given object is a HTML ColorChoice.\n * @param target - The object to test.\n * @returns True: the object is a HTML ColorChoice.\n * @category Helper\n */\nexport function isColorChoice(target: EventTarget): target is HTMLInputElement {\n    return target instanceof HTMLInputElement && target.getAttribute(\"type\") === \"color\";\n}\n\n/**\n * Tests whether the given object is a HTML ComboBox.\n * @param target - The object to test.\n * @returns True: the object is a HTML ComboBox\n * @category Helper\n */\nexport function isComboBox(target: EventTarget): target is HTMLSelectElement {\n    return target instanceof HTMLSelectElement;\n}\n\n/**\n * Tests whether the given object is a HTML DatePicker.\n * @param target - The object to test.\n * @returns True: the object is a HTML DatePicker\n * @category Helper\n */\nexport function isDatePicker(target: EventTarget): target is HTMLInputElement {\n    return target instanceof HTMLInputElement && target.getAttribute(\"type\") === \"date\";\n}\n\n/**\n * Tests whether the given object is a HTML spinner.\n * @param target - The object to test.\n * @returns True: the object is a HTML spinner\n * @category Helper\n */\nexport function isSpinner(target: EventTarget): target is HTMLInputElement {\n    return target instanceof HTMLInputElement && target.getAttribute(\"type\") === \"number\";\n}\n\n/**\n * Tests whether the given object is a HTML hyperlink.\n * @param target - The object to test.\n * @returns True: the object is a HTML hyperlink\n * @category Helper\n */\nexport function isHyperLink(target: EventTarget): target is HTMLAnchorElement {\n    return target instanceof HTMLAnchorElement;\n}\n\n/**\n * Tests whether the given object is a HTML text input.\n * @param target - The object to test.\n * @returns True: the object is a HTML text input\n * @category Helper\n */\nexport function isTextInput(target: EventTarget): target is HTMLInputElement | HTMLTextAreaElement {\n    return (target instanceof HTMLInputElement && target.getAttribute(\"type\") === \"text\") ||\n        target instanceof HTMLTextAreaElement;\n}\n\n/**\n * Tests whether the given object is a keydown event.\n * @param event - The object to test.\n * @returns True: the object is a keydown event\n * @category Helper\n */\nexport function isKeyDownEvent(event: Event): event is KeyboardEvent {\n    return event instanceof KeyboardEvent && event.type === \"keydown\";\n}\n\n/**\n * Tests whether the given object is a keyup event.\n * @param event - The object to test.\n * @returns True: the object is a keyup event\n * @category Helper\n */\nexport function isKeyUpEvent(event: Event): event is KeyboardEvent {\n    return event instanceof KeyboardEvent && event.type === \"keyup\";\n}\n\n/**\n * A list of key codes.\n * @category Helper\n */\nexport enum KeyCode {\n    escape = 27\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CancelFSMError} from \"./CancelFSMError\";\nimport {StateBase} from \"./StateBase\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\nimport type {Transition} from \"../../api/fsm/Transition\";\n\n/**\n * Base implementation of the OutputState interface.\n * @category FSM\n */\nexport abstract class OutputStateBase extends StateBase implements OutputState {\n    protected readonly _transitions: Array<Transition<Event>>;\n\n    /**\n     * Creates the state.\n     * @param stateMachine - The FSM that will contain the state.\n     * @param stateName - The name of this state.\n     */\n    protected constructor(stateMachine: FSM, stateName: string) {\n        super(stateMachine, stateName);\n        this._transitions = [];\n    }\n\n    public process(event: Event): boolean {\n        return this.transitions.some(tr => {\n            try {\n                return tr.execute(event) !== undefined;\n            } catch (error: unknown) {\n                if (error instanceof CancelFSMError) {\n                    // Already processed\n                    return false;\n                }\n                throw error;\n            }\n        });\n    }\n\n    public clearTransitions(): void {\n        this._transitions.length = 0;\n    }\n\n    public get transitions(): ReadonlyArray<Transition<Event>> {\n        return Array.from(this._transitions);\n    }\n\n    public addTransition(tr: Transition<Event>): void {\n        this._transitions.push(tr);\n    }\n\n    public abstract exit(): void;\n\n    public override uninstall(): void {\n        super.uninstall();\n        for (const tr of this.transitions) {\n            tr.uninstall();\n        }\n        this._transitions.length = 0;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {OutputStateBase} from \"./OutputStateBase\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\n\n/**\n * An FSM state.\n * An initial state is the unique state that can start an FSM.\n * @category FSM\n */\nexport class InitState extends OutputStateBase {\n    public constructor(stateMachine: FSM, stateName: string) {\n        super(stateMachine, stateName);\n    }\n\n    public exit(): void {\n        this.checkStartingState();\n    }\n\n    public acceptVisitor(visitor: VisitorFSM): void {\n        visitor.visitInitState(this);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {OutputStateBase} from \"./OutputStateBase\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\n\n/**\n * An FSM state.\n * A standard state can compose an FSM.\n * They do not start, stop, cancel an FSM.\n * They accept input and output events.\n * @category FSM\n */\nexport class StdState extends OutputStateBase implements InputState {\n    /**\n     * Creates the state.\n     * @param stateMachine - The FSM that will contain the state.\n     * @param stateName - The name of this state.\n     */\n    public constructor(stateMachine: FSM, stateName: string) {\n        super(stateMachine, stateName);\n    }\n\n    public enter(): void {\n        this.checkStartingState();\n        this.fsm.enterStdState(this);\n    }\n\n    public exit(): void {}\n\n    public acceptVisitor(visitor: VisitorFSM): void {\n        visitor.visitState(this);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {StateBase} from \"./StateBase\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\n\n/**\n * An FSM state.\n * A terminal state ends normally an FSM.\n * @typeParam E - The type of events the FSM processes.\n * @category FSM\n */\nexport class TerminalState extends StateBase implements InputState {\n    /**\n     * Creates the terminal state.\n     * @param stateMachine - The FSM that will contain the state.\n     * @param stateName - The name of this state.\n     */\n    public constructor(stateMachine: FSM, stateName: string) {\n        super(stateMachine, stateName);\n    }\n\n    public enter(): void {\n        this.checkStartingState();\n        this.fsm.onTerminating();\n    }\n\n    public override acceptVisitor(visitor: VisitorFSM): void {\n        visitor.visitTerminalState(this);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\nimport type {Logger} from \"../../api/logging/Logger\";\n\n/**\n * A timeout transition is an FSM transition that is not executed by an event:\n * the FSM goes through such a transition on a timeout.\n * @category FSM Transition\n */\nexport class TimeoutTransition extends TransitionBase<Event> {\n    /**\n     * The timeoutDuration in ms.\n     */\n    private readonly timeoutDuration: () => number;\n\n    private readonly logger: Logger | undefined;\n\n    /**\n     * The current thread in progress.\n     */\n    private timeoutThread: number | undefined;\n\n    private timeouted: boolean;\n\n    /**\n     * Creates the timeout transition.\n     * @param srcState - The source state of the transition.\n     * @param tgtState - The output state of the transition.\n     * @param timeout - The function that returns the timeout value in ms.\n     * @param logger - The logger to use.\n     * @param action - The action to execute when going through the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState, timeout: () => number, logger?: Logger,\n                       action?: (evt: Event) => void) {\n        super(srcState, tgtState, action, () => this.timeouted);\n        this.logger = logger;\n        this.timeouted = false;\n        this.timeoutDuration = timeout;\n        this.timeouted = false;\n    }\n\n    /**\n     * Launches the timer.\n     */\n    public startTimeout(): void {\n        if (this.timeoutThread === undefined) {\n            const time = this.timeoutDuration();\n            // If incorrect duration value, no thread created\n            if (time <= 0) {\n                this.src.fsm.onTimeout();\n                return;\n            }\n\n            this.timeoutThread = window.setTimeout(() => {\n                try {\n                    this.timeouted = true;\n                    this.src.fsm.onTimeout();\n                } catch (error: unknown) {\n                    this.logger?.logInteractionErr(\"Exception on timeout of a timeout transition\", error);\n                }\n            }, time);\n        }\n    }\n\n    /**\n     * Stops the timer.\n     */\n    public stopTimeout(): void {\n        if (this.timeoutThread !== undefined) {\n            clearTimeout(this.timeoutThread);\n            this.timeoutThread = undefined;\n        }\n    }\n\n    public accept(_event?: Event): _event is Event {\n        return this.timeouted;\n    }\n\n    public override execute(event?: Event): InputState | undefined {\n        try {\n            if (this.accept(event) && this.guard(event)) {\n                this.src.exit();\n                this.action(event);\n                this.tgt.enter();\n                this.timeouted = false;\n                return this.tgt;\n            }\n            return undefined;\n        } catch (error: unknown) {\n            this.timeouted = false;\n            throw error;\n        }\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return new Set();\n    }\n\n    public override acceptVisitor(visitor: VisitorFSM): void {\n        visitor.visitTimeoutTransition(this);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * Removes the given element from the array.\n * @param array - The array to mutate.\n * @param elt - The element to remove.\n * @category Helper\n */\nexport function remove<T>(array: Array<T>, elt: T): void {\n    const index = array.indexOf(elt);\n    if (index > -1) {\n        array.splice(index, 1);\n    }\n}\n\n/**\n * Removes the element at the given position.\n * @param array - The array to mutate.\n * @param index - The index where to remove\n * @returns The removed element or nothing.\n * @category Helper\n */\nexport function removeAt<T>(array: Array<T>, index: number): T | undefined {\n    if (index > -1) {\n        return array.splice(index, 1)[0];\n    }\n    return undefined;\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CancelFSMError} from \"./CancelFSMError\";\nimport {CancellingState} from \"./CancellingState\";\nimport {isKeyDownEvent, isKeyUpEvent} from \"./Events\";\nimport {InitState} from \"./InitState\";\nimport {StdState} from \"./StdState\";\nimport {TerminalState} from \"./TerminalState\";\nimport {TimeoutTransition} from \"./TimeoutTransition\";\nimport {isOutputStateType} from \"../../api/fsm/OutputState\";\nimport {MustBeUndoableCmdError} from \"../binding/MustBeUndoableCmdError\";\nimport {remove, removeAt} from \"../util/ArrayUtil\";\nimport {Subject} from \"rxjs\";\nimport type {FSMDataHandler} from \"./FSMDataHandler\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {FSMHandler} from \"../../api/fsm/FSMHandler\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\nimport type {State} from \"../../api/fsm/State\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {Observable} from \"rxjs\";\n\n/**\n * A finite state machine that defines the behavior of a user interaction.\n * @category FSM\n */\nexport class FSMImpl<T extends FSMDataHandler> implements FSM {\n    protected _dataHandler: T | undefined;\n\n    protected readonly logger: Logger;\n\n    public _log: boolean;\n\n    public inner: boolean;\n\n    public startingState: State;\n\n    /**\n     * Goes with 'startingState'. It permits to know whether the FSM has started, ie whether the 'starting state'\n     * has been reached.\n     */\n    protected _started: boolean;\n\n    public readonly initState: InitState;\n\n    protected _currentState: OutputState;\n\n    protected readonly currentStatePublisher: Subject<[OutputState, OutputState]>;\n\n    /**\n     * The states that compose the finite state machine.\n     */\n    protected readonly _states: Array<State>;\n\n    /**\n     * The handlers to be notified on FSM state changes.\n     */\n    protected readonly handlers: Array<FSMHandler>;\n\n    /**\n     * The events still in process. For example when the user press key ctrl and scroll one time using\n     * the wheel of the mouse, the interaction scrolling is\n     * finished but the event keyPressed 'ctrl' is still in process. At the end of the interaction, these events\n     * are re-introduced into the\n     * state machine of the interaction for processing.\n     */\n    protected readonly eventsToProcess: Array<Event>;\n\n    /**\n     * The current timeout in progress.\n     */\n    protected currentTimeout: TimeoutTransition | undefined;\n\n    public currentSubFSM: FSM | undefined;\n\n    /**\n     * Creates the FSM.\n     * @param logger - The logger to use for logging FSM messages\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(logger: Logger, dataHandler?: T) {\n        this._dataHandler = dataHandler;\n        this.logger = logger;\n        this.inner = false;\n        this._started = false;\n        this.initState = new InitState(this, \"init\");\n        this._states = [this.initState];\n        this.startingState = this.initState;\n        this._currentState = this.initState;\n        this.currentStatePublisher = new Subject();\n        this.handlers = [];\n        this.eventsToProcess = [];\n        this.currentSubFSM = undefined;\n        this._log = false;\n    }\n\n    public get currentState(): OutputState {\n        return this._currentState;\n    }\n\n    public set currentState(state: OutputState) {\n        const old = this._currentState;\n        this._currentState = state;\n        this.currentStatePublisher.next([old, this._currentState]);\n    }\n\n    public get currentStateObservable(): Observable<[OutputState, OutputState]> {\n        return this.currentStatePublisher;\n    }\n\n    public process(event: Event): boolean {\n        // Removing the possible corresponding and pending key pressed event\n        if (isKeyUpEvent(event)) {\n            this.removeKeyEvent(event.code);\n        }\n\n        // Processing the event\n        const processed: boolean = this.processEvent(event);\n\n        // Recycling events\n        if (processed && isKeyDownEvent(event) && !(this._currentState instanceof InitState) &&\n            !this.eventsToProcess.some(evt => isKeyDownEvent(evt) && evt.code === event.code)) {\n            this.addRemaningEventsToProcess(event);\n        }\n\n        return processed;\n    }\n\n    private processEvent(event: Event): boolean {\n        if (this.currentSubFSM !== undefined) {\n            if (this.log) {\n                this.logger.logInteractionMsg(`processing event ${String(event.type)} in a sub-FSM`, this.constructor.name);\n            }\n            return this.currentSubFSM.process(event);\n        }\n        if (this.log) {\n            this.logger.logInteractionMsg(`processing event ${String(event.type)} at state\n            ${this.currentState.name}: ${this.constructor.name}`, this.constructor.name);\n        }\n\n        try {\n            return this.currentState.process(event);\n        } catch (error: unknown) {\n            this.notifyHandlerOnError(error);\n            return false;\n        }\n    }\n\n    public acceptVisitor(visitor: VisitorFSM): void {\n        visitor.visitFSM(this);\n    }\n\n    public get log(): boolean {\n        return this._log;\n    }\n\n    public set log(log: boolean) {\n        this._log = log;\n    }\n\n    public get dataHandler(): T | undefined {\n        return this._dataHandler;\n    }\n\n    public set dataHandler(dataHandler: T | undefined) {\n        this._dataHandler = dataHandler;\n    }\n\n    /**\n     * Removes the given KeyPress event from the events 'still in process' list.\n     * @param key - The key code of the event to remove.\n     */\n    private removeKeyEvent(key: string): void {\n        let removed = false;\n\n        for (let i = 0, size = this.eventsToProcess.length; i < size && !removed; i++) {\n            const event = this.eventsToProcess[i];\n\n            if (event instanceof KeyboardEvent && event.code === key) {\n                removed = true;\n                removeAt(this.eventsToProcess, i);\n            }\n        }\n    }\n\n    public enterStdState(state: InputState & OutputState): void {\n        this.currentState = state;\n        this.checkTimeoutTransition();\n        if (this.started) {\n            this.onUpdating();\n        }\n    }\n\n    public get started(): boolean {\n        return this._started;\n    }\n\n    /**\n     * The end of the FSM execution, the events still (eg keyPress) in process must be recycled to be reused in the FSM.\n     */\n    protected processRemainingEvents(): void {\n        const list: ReadonlyArray<Event> = Array.from(this.eventsToProcess);\n\n        for (const event of list) {\n            removeAt(this.eventsToProcess, 0);\n            if (this.log) {\n                this.logger.logInteractionMsg(\"Recycling event\", this.constructor.name);\n            }\n            this.process(event);\n        }\n    }\n\n    public addRemaningEventsToProcess(event: Event): void {\n        this.eventsToProcess.push(event);\n    }\n\n    public onError(err: unknown): void {\n        this.notifyHandlerOnError(err);\n    }\n\n    public onTerminating(): void {\n        if (this.log) {\n            this.logger.logInteractionMsg(\"FSM ended\", this.constructor.name);\n        }\n        if (this.started) {\n            this.notifyHandlerOnStop();\n        }\n        this.reinit();\n        this.processRemainingEvents();\n    }\n\n    public onCancelling(): void {\n        if (this.log) {\n            this.logger.logInteractionMsg(\"FSM cancelled\", this.constructor.name);\n        }\n        if (this.started) {\n            this.notifyHandlerOnCancel();\n        }\n        this.fullReinit();\n    }\n\n    public onStarting(): void {\n        if (this.log) {\n            this.logger.logInteractionMsg(\"FSM started\", this.constructor.name);\n        }\n        this._started = true;\n        this.notifyHandlerOnStart();\n    }\n\n    /**\n     * Updates the state machine.\n     */\n    public onUpdating(): void {\n        if (this.started) {\n            if (this.log) {\n                this.logger.logInteractionMsg(\"FSM updated\", this.constructor.name);\n            }\n            this.notifyHandlerOnUpdate();\n        }\n    }\n\n    /**\n     * Adds a standard state to the state machine.\n     * @param name - The name of the state to add.\n     * @param startingState - States whether the new state is the one that starts the FSM.\n     * @returns The created state.\n     */\n    public addStdState(name: string, startingState = false): StdState {\n        const state = new StdState(this, name);\n        this.addState(state, startingState);\n        return state;\n    }\n\n    /**\n     * Adds a terminal state to the state machine.\n     * @param name - The name of the state to add.\n     * @param startingState - States whether the new state is the one that starts the FSM.\n     * @returns The created state.\n     */\n    public addTerminalState(name: string, startingState = false): TerminalState {\n        const state = new TerminalState(this, name);\n        this.addState(state, startingState);\n        return state;\n    }\n\n    /**\n     * Adds a cancelling state to the state machine.\n     * @param name - The name of the state to add.\n     * @returns The created state.\n     */\n    public addCancellingState(name: string): CancellingState {\n        const state = new CancellingState(this, name);\n        this.addState(state);\n        return state;\n    }\n\n    private addState(state: InputState, startingState = false): void {\n        this._states.push(state);\n        if (startingState) {\n            this.startingState = state;\n        }\n    }\n\n    public reinit(): void {\n        if (this.log) {\n            this.logger.logInteractionMsg(\"FSM reinitialised\", this.constructor.name);\n        }\n        this.currentTimeout?.stopTimeout();\n        this._started = false;\n        this.currentState = this.initState;\n        this.currentTimeout = undefined;\n        this.currentSubFSM?.reinit();\n\n        if (this.dataHandler !== undefined && !this.inner) {\n            this.dataHandler.reinitData();\n        }\n    }\n\n    public fullReinit(): void {\n        this.eventsToProcess.length = 0;\n        this.reinit();\n        this.currentSubFSM?.fullReinit();\n    }\n\n    public onTimeout(): void {\n        if (this.currentTimeout !== undefined) {\n            if (this.log) {\n                this.logger.logInteractionMsg(\"Timeout\", this.constructor.name);\n            }\n            const state = this.currentTimeout.execute();\n            if (isOutputStateType(state)) {\n                this.currentState = state;\n                this.checkTimeoutTransition();\n            }\n        }\n    }\n\n    public stopCurrentTimeout(): void {\n        if (this.currentTimeout !== undefined) {\n            if (this.log) {\n                this.logger.logInteractionMsg(\"Timeout stopped\", this.constructor.name);\n            }\n            this.currentTimeout.stopTimeout();\n            this.currentTimeout = undefined;\n        }\n    }\n\n    /**\n     * Checks whether the current state has a timeout transition.\n     * If it is the case, the timeout transition is launched.\n     */\n    protected checkTimeoutTransition(): void {\n        const tr = this.currentState.transitions\n            .find(trans => trans instanceof TimeoutTransition) as TimeoutTransition | undefined;\n\n        if (tr !== undefined) {\n            if (this.log) {\n                this.logger.logInteractionMsg(\"Timeout starting\", this.constructor.name);\n            }\n            this.currentTimeout = tr;\n            this.currentTimeout.startTimeout();\n        }\n    }\n\n    public addHandler(handler: FSMHandler): void {\n        this.handlers.push(handler);\n    }\n\n    public removeHandler(handler: FSMHandler): void {\n        remove(this.handlers, handler);\n    }\n\n    /**\n     * Notifies handler that the interaction starts.\n     */\n    protected notifyHandlerOnStart(): void {\n        try {\n            const hs = Array.from(this.handlers);\n\n            for (const handler of hs) {\n                handler.preFsmStart?.();\n            }\n\n            for (const handler of hs) {\n                handler.fsmStarts?.();\n            }\n        } catch (error: unknown) {\n            if (!(error instanceof CancelFSMError || error instanceof MustBeUndoableCmdError)) {\n                this.logger.logInteractionErr(\"An 'fsmStarts' produced an error\", error, this.constructor.name);\n            }\n            this.onCancelling();\n            throw error;\n        }\n    }\n\n    /**\n     * Notifies handler that the interaction updates.\n     */\n    protected notifyHandlerOnUpdate(): void {\n        try {\n            const hs = Array.from(this.handlers);\n\n            for (const handler of hs) {\n                handler.preFsmUpdate?.();\n            }\n\n            for (const handler of hs) {\n                handler.fsmUpdates?.();\n            }\n        } catch (error: unknown) {\n            if (!(error instanceof CancelFSMError || error instanceof MustBeUndoableCmdError)) {\n                this.logger.logInteractionErr(\"An 'fsmUpdates' produced an error\", error, this.constructor.name);\n            }\n            this.onCancelling();\n            throw error;\n        }\n    }\n\n    /**\n     * Notifies handler that the interaction stops.\n     */\n    public notifyHandlerOnStop(): void {\n        try {\n            const hs = Array.from(this.handlers);\n\n            for (const handler of hs) {\n                handler.preFsmStop?.();\n            }\n\n            for (const handler of hs) {\n                handler.fsmStops?.();\n            }\n        } catch (error: unknown) {\n            if (!(error instanceof CancelFSMError || error instanceof MustBeUndoableCmdError)) {\n                this.logger.logInteractionErr(\"An 'fsmStops' produced an error\", error, this.constructor.name);\n            }\n            this.onCancelling();\n            throw error;\n        }\n    }\n\n    /**\n     * Notifies handler that the interaction is cancelled.\n     */\n    protected notifyHandlerOnCancel(): void {\n        try {\n            for (const handler of Array.from(this.handlers)) {\n                handler.fsmCancels?.();\n            }\n        } catch (error: unknown) {\n            if (!(error instanceof MustBeUndoableCmdError)) {\n                this.logger.logInteractionErr(\"An 'fsmCancels' produced an error\", error, this.constructor.name);\n            }\n            throw error;\n        }\n    }\n\n    /**\n     * Notifies handlers that an error occured.\n     * @param err - The error to handle\n     */\n    protected notifyHandlerOnError(err: unknown): void {\n        try {\n            for (const handler of Array.from(this.handlers)) {\n                handler.fsmError?.(err);\n            }\n        } catch (error: unknown) {\n            this.logger.logInteractionErr(\"An 'fsmError' produced an error\", error, this.constructor.name);\n        }\n    }\n\n    public get states(): ReadonlyArray<State> {\n        return Array.from(this._states);\n    }\n\n    public getEventsToProcess(): ReadonlyArray<Event> {\n        return Array.from(this.eventsToProcess);\n    }\n\n    public uninstall(): void {\n        this.fullReinit();\n        this.log = false;\n        this.currentStatePublisher.complete();\n        this.currentSubFSM = undefined;\n        for (const state of this._states) {\n            state.uninstall();\n        }\n        this._states.length = 0;\n        this.dataHandler = undefined;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {keyEventTypes, mouseEventTypes, touchEventTypes} from \"../../api/fsm/EventType\";\nimport {InitState} from \"../fsm/InitState\";\nimport type {Flushable} from \"./Flushable\";\nimport type {EventType, KeyEventType, MouseEventType, TouchEventType} from \"../../api/fsm/EventType\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\nimport type {Interaction} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {VisitorInteraction} from \"../../api/interaction/VisitorInteraction\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {Subscription} from \"rxjs\";\n\ninterface CancellablePromise extends Promise<void> {\n    cancel: () => void;\n}\n\n/**\n * Infers the type of the involved interaction data implementation\n * @category Interaction\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InteractionDataImplType<T> = T extends InteractionBase<any, infer DImpl, any> ? DImpl : never;\n\n/**\n * The base implementation of a user interaction.\n * @typeParam D - The type of the interaction data.\n * @typeParam F - The type of the FSM.\n * @category Interaction\n */\nexport abstract class InteractionBase<D extends InteractionData, DImpl extends D & Flushable, F extends FSM> implements Interaction<D> {\n    /**\n     * The current nodes that the interaction works on\n     */\n    protected readonly _registeredNodes: Set<unknown>;\n\n    protected readonly _dynamicRegisteredNodes: Set<unknown>;\n\n    protected readonly _fsm: F;\n\n    protected readonly _name: string;\n\n    protected _log: boolean;\n\n    /** The current list of mutation observers. Used for listening changes in node lists. */\n    protected readonly mutationObservers: Array<MutationObserver>;\n\n    /** The interaction data */\n    protected readonly _data: DImpl;\n\n    protected readonly logger: Logger;\n\n    private mouseHandler?: (e: MouseEvent) => void;\n\n    private touchHandler?: (e: TouchEvent) => void;\n\n    private keyHandler?: (e: KeyboardEvent) => void;\n\n    private uiHandler?: (e: UIEvent) => void;\n\n    private actionHandler?: EventListener;\n\n    private readonly disposable: Subscription;\n\n    private stopImmediatePropag: boolean;\n\n    private preventDef: boolean;\n\n    /**\n     * Defines if the interaction is activated or not. If not, the interaction will not\n     * change on events.\n     */\n    protected activated: boolean;\n\n    protected throttleTimeout: number;\n\n    protected currentThrottling: CancellablePromise | undefined;\n\n    protected latestThrottledEvent: Event | undefined;\n\n    /**\n     * Creates the interaction.\n     * @param fsm - The FSM that defines the behavior of the user interaction.\n     * @param data - The interaction data.\n     * @param logger - The logger to use for this interaction\n     * @param name - The real name of the interaction\n     */\n    protected constructor(fsm: F, data: DImpl, logger: Logger, name: string) {\n        this._name = name;\n        this.logger = logger;\n        this.activated = false;\n        this.stopImmediatePropag = false;\n        this.preventDef = false;\n        this._data = data;\n        this._fsm = fsm;\n        this.disposable = this._fsm.currentStateObservable.subscribe(current => {\n            this.updateEventsRegistered(current[1], current[0]);\n        });\n        this.activated = true;\n        this._log = false;\n        this._registeredNodes = new Set<unknown>();\n        this._dynamicRegisteredNodes = new Set<unknown>();\n        this.mutationObservers = [];\n        this.throttleTimeout = 0;\n    }\n\n    public reinitData(): void {\n        this._data.flush();\n    }\n\n    public get data(): D {\n        return this._data;\n    }\n\n    public get name(): string {\n        return this._name;\n    }\n\n    public setThrottleTimeout(timeout: number): void {\n        this.throttleTimeout = timeout;\n    }\n\n    private createThrottleTimeout(): void {\n        this.currentThrottling?.cancel();\n        this.currentThrottling = undefined;\n\n        const currTimeout = this.throttleTimeout;\n        let rejection: (reason?: unknown) => void;\n        let timeout: NodeJS.Timeout;\n\n        this.currentThrottling = new Promise<void>(\n            (resolve, reject) => {\n                rejection = reject;\n                timeout = setTimeout(() => {\n                    try {\n                        /*\n                         * Do not put this code into the then block\n                         * as it must be executed BEFORE resolving the promise.\n                         */\n                        const evt: Event | undefined = this.latestThrottledEvent;\n                        this.latestThrottledEvent = undefined;\n                        if (evt !== undefined) {\n                            this.directEventProcess(evt);\n                        }\n                        resolve();\n                    } catch (error: unknown) {\n                        rejection(error);\n                    }\n                }, currTimeout);\n            }\n        ).catch((error: unknown) => {\n            this.logger.logInteractionErr(\"Error during the throttling process\", error, this.constructor.name);\n        }) as CancellablePromise;\n\n        this.currentThrottling.cancel = (): void => {\n            clearTimeout(timeout);\n            rejection(new Error(\"cancellation\"));\n        };\n    }\n\n    private checkThrottlingEvent(event: Event): void {\n        const latestEvt = this.latestThrottledEvent;\n\n        if (latestEvt === undefined || latestEvt.type !== event.type) {\n            if (latestEvt !== undefined) {\n                this.directEventProcess(latestEvt);\n            }\n            this.latestThrottledEvent = event;\n            this.createThrottleTimeout();\n        } else {\n            // The previous throttled event is ignored\n            this.latestThrottledEvent = event;\n        }\n    }\n\n    protected updateEventsRegistered(newState: OutputState, oldState: OutputState): void {\n        // Do nothing when the interaction has only two nodes: init node and terminal node (this is a single-event interaction).\n        if (newState === oldState || this._fsm.states.length === 2) {\n            return;\n        }\n\n        const currEvents: ReadonlyArray<EventType> = this.getCurrentAcceptedEvents(newState);\n        const events: ReadonlyArray<EventType> = Array.from(this.getEventTypesOf(oldState));\n        const eventsToRemove: ReadonlyArray<EventType> = events.filter(evt => !currEvents.includes(evt));\n        const eventsToAdd: ReadonlyArray<EventType> = currEvents.filter(evt => !events.includes(evt));\n        for (const node of this._registeredNodes) {\n            for (const type of eventsToRemove) {\n                this.unregisterEventToNode(type, node);\n            }\n            for (const type of eventsToAdd) {\n                this.registerEventToNode(type, node);\n            }\n        }\n    }\n\n    protected getCurrentAcceptedEvents(state: OutputState): ReadonlyArray<EventType> {\n        return Array.from(this.getEventTypesOf(state));\n    }\n\n    private callBackMutationObserver(mutationList: ReadonlyArray<MutationRecord>): void {\n        for (const mutation of mutationList) {\n            for (const node of mutation.addedNodes) {\n                this.registerToNodes([node]);\n            }\n            for (const node of mutation.removedNodes) {\n                this.unregisterFromNodes([node]);\n            }\n        }\n    }\n\n    protected getEventTypesOf(state: OutputState): ReadonlySet<EventType> {\n        // Optimisation to avoid map and reduce\n        const result = new Set<EventType>();\n        for (const trans of state.transitions) {\n            for (const evt of trans.getAcceptedEvents()) {\n                result.add(evt);\n            }\n        }\n        return result;\n    }\n\n    public registerToNodes(widgets: ReadonlyArray<unknown>): void {\n        for (const widget of widgets) {\n            this._registeredNodes.add(widget);\n            this.onNewNodeRegistered(widget);\n        }\n    }\n\n    protected unregisterFromNodes(widgets: ReadonlyArray<unknown>): void {\n        for (const widget of widgets) {\n            this._registeredNodes.delete(widget);\n            this.onNodeUnregistered(widget);\n        }\n    }\n\n    public onNodeUnregistered(node: unknown): void {\n        for (const type of this.getEventTypesOf(this._fsm.currentState)) {\n            this.unregisterEventToNode(type, node);\n        }\n    }\n\n    public onNewNodeRegistered(node: unknown): void {\n        for (const type of this.getEventTypesOf(this._fsm.currentState)) {\n            this.registerEventToNode(type, node);\n        }\n    }\n\n    public registerToNodeChildren(elementToObserve: Node): void {\n        this._dynamicRegisteredNodes.add(elementToObserve);\n\n        for (const node of elementToObserve.childNodes) {\n            this.registerToNodes([node]);\n        }\n\n        const newMutationObserver = new MutationObserver(mutations => {\n            this.callBackMutationObserver(mutations);\n        });\n        newMutationObserver.observe(elementToObserve, {\"childList\": true});\n        this.mutationObservers.push(newMutationObserver);\n    }\n\n    protected registerEventToNode(eventType: EventType, node: unknown): void {\n        if (!(node instanceof EventTarget)) {\n            return;\n        }\n\n        if (mouseEventTypes.includes(eventType as MouseEventType) || eventType === \"wheel\") {\n            node.addEventListener(eventType, this.getMouseHandler());\n            return;\n        }\n        if (touchEventTypes.includes(eventType as TouchEventType)) {\n            node.addEventListener(eventType, this.getTouchHandler());\n            return;\n        }\n        if (keyEventTypes.includes(eventType as KeyEventType)) {\n            node.addEventListener(eventType, this.getKeyHandler());\n            return;\n        }\n        if (eventType === \"scroll\") {\n            node.addEventListener(eventType, this.getUIHandler());\n\n        }\n    }\n\n    protected unregisterEventToNode(eventType: EventType, node: unknown): void {\n        if (!(node instanceof EventTarget)) {\n            return;\n        }\n        if (mouseEventTypes.includes(eventType as MouseEventType) || eventType === \"wheel\") {\n            node.removeEventListener(eventType, this.getMouseHandler());\n            return;\n        }\n        if (touchEventTypes.includes(eventType as TouchEventType)) {\n            node.removeEventListener(eventType, this.getTouchHandler());\n            return;\n        }\n        if (keyEventTypes.includes(eventType as KeyEventType)) {\n            node.removeEventListener(eventType, this.getKeyHandler());\n            return;\n        }\n        if (eventType === \"scroll\") {\n            node.removeEventListener(eventType, this.getUIHandler());\n\n        }\n    }\n\n    protected registerActionHandlerClick(node: EventTarget): void {\n        node.addEventListener(\"click\", this.getActionHandler());\n        node.addEventListener(\"auxclick\", this.getActionHandler());\n    }\n\n    protected unregisterActionHandlerClick(node: EventTarget): void {\n        node.removeEventListener(\"click\", this.getActionHandler());\n        node.removeEventListener(\"auxclick\", this.getActionHandler());\n    }\n\n    protected registerActionHandlerInput(node: EventTarget): void {\n        node.addEventListener(\"input\", this.getActionHandler());\n    }\n\n    protected unregisterActionHandlerInput(node: EventTarget): void {\n        node.removeEventListener(\"input\", this.getActionHandler());\n    }\n\n    protected getActionHandler(): EventListener {\n        if (this.actionHandler === undefined) {\n            this.actionHandler = (evt): void => {\n                this.processEvent(evt);\n            };\n        }\n        return this.actionHandler;\n    }\n\n    protected getMouseHandler(): EventListener {\n        if (this.mouseHandler === undefined) {\n            this.mouseHandler = (evt: MouseEvent): void => {\n                this.processEvent(evt);\n            };\n        }\n        return this.mouseHandler as EventListener;\n    }\n\n    protected getTouchHandler(): EventListener {\n        if (this.touchHandler === undefined) {\n            this.touchHandler = (evt: TouchEvent): void => {\n                this.processEvent(evt);\n            };\n        }\n        return this.touchHandler as EventListener;\n    }\n\n    protected getKeyHandler(): EventListener {\n        if (this.keyHandler === undefined) {\n            this.keyHandler = (evt: KeyboardEvent): void => {\n                this.processEvent(evt);\n            };\n        }\n        return this.keyHandler as EventListener;\n    }\n\n    protected getUIHandler(): EventListener {\n        if (this.uiHandler === undefined) {\n            this.uiHandler = (evt: UIEvent): void => {\n                this.processEvent(evt);\n            };\n        }\n        return this.uiHandler as EventListener;\n    }\n\n    public isRunning(): boolean {\n        return this.activated && !(this._fsm.currentState instanceof InitState);\n    }\n\n    public fullReinit(): void {\n        this._fsm.fullReinit();\n    }\n\n    public set stopImmediatePropagation(stop: boolean) {\n        this.stopImmediatePropag = stop;\n    }\n\n    /**\n     * @returns True if the user interaction will stop immediately the propagation\n     * of events processed by this user interaction to others listeners.\n     */\n    public get stopImmediatePropagation(): boolean {\n        return this.stopImmediatePropag;\n    }\n\n    public set preventDefault(prevent: boolean) {\n        this.preventDef = prevent;\n    }\n\n    /**\n     * @returns True if the default behavior associated to the event will be executed.\n     */\n    public get preventDefault(): boolean {\n        return this.preventDef;\n    }\n\n    /**\n     * Processes the given UI event.\n     * @param event - The event to process.\n     */\n    public processEvent(event: Event): void {\n        if (this.isActivated()) {\n            if (this.throttleTimeout <= 0) {\n                this.directEventProcess(event);\n            } else {\n                this.checkThrottlingEvent(event);\n            }\n        }\n    }\n\n    private directEventProcess(event: Event): void {\n        const processed = this._fsm.process(event);\n\n        // preventdefault or stopPropa only if the event is processed by the FSM\n        if (processed) {\n            if (this.preventDef) {\n                event.preventDefault();\n            }\n            if (this.stopImmediatePropag) {\n                event.stopImmediatePropagation();\n            }\n        }\n    }\n\n    public log(log: boolean): void {\n        this._log = log;\n        this._fsm.log = log;\n    }\n\n    public isActivated(): boolean {\n        return this.activated;\n    }\n\n    public setActivated(activated: boolean): void {\n        if (this._log) {\n            this.logger.logInteractionMsg(`Interaction activation: ${String(activated)}`, this.constructor.name);\n        }\n        this.activated = activated;\n        if (!activated) {\n            this._fsm.fullReinit();\n        }\n    }\n\n    public get fsm(): F {\n        return this._fsm;\n    }\n\n    public reinit(): void {\n        this._fsm.reinit();\n        this.reinitData();\n    }\n\n    public uninstall(): void {\n        this.disposable.unsubscribe();\n        for (const node of this._registeredNodes) {\n            this.onNodeUnregistered(node);\n        }\n        this._registeredNodes.clear();\n        for (const obs of this.mutationObservers) {\n            obs.disconnect();\n        }\n        this.mutationObservers.length = 0;\n        this.setActivated(false);\n    }\n\n    public acceptVisitor(visitor: VisitorInteraction): void {\n        visitor.visitInteraction(this);\n    }\n\n    public get registeredNodes(): ReadonlySet<unknown> {\n        return this._registeredNodes;\n    }\n\n    public get dynamicRegisteredNodes(): ReadonlySet<unknown> {\n        return this._dynamicRegisteredNodes;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {InteractionDataBase} from \"./InteractionDataBase\";\nimport type {PointBaseData} from \"../../api/interaction/PointBaseData\";\n\n/**\n * The base implementation class for single point interaction data.\n * @category Interaction Data\n */\nexport abstract class PointingDataBase extends InteractionDataBase implements PointBaseData {\n    protected clientXData = 0;\n\n    protected clientYData = 0;\n\n    protected pageXData = 0;\n\n    protected pageYData = 0;\n\n    protected screenXData = 0;\n\n    protected screenYData = 0;\n\n    protected altKeyData = false;\n\n    protected ctrlKeyData = false;\n\n    protected metaKeyData = false;\n\n    protected shiftKeyData = false;\n\n    public override flush(): void {\n        super.flush();\n        this.clientXData = 0;\n        this.clientYData = 0;\n        this.pageXData = 0;\n        this.pageYData = 0;\n        this.screenXData = 0;\n        this.screenYData = 0;\n        this.altKeyData = false;\n        this.ctrlKeyData = false;\n        this.metaKeyData = false;\n        this.shiftKeyData = false;\n    }\n\n    public override copy(data: PointBaseData): void {\n        super.copy(data);\n        /*\n         * Cannot use Object.assign because of a strange implementation of Event\n         * that prevents accessing the properties\n         */\n        this.clientXData = data.clientX;\n        this.clientYData = data.clientY;\n        this.pageXData = data.pageX;\n        this.pageYData = data.pageY;\n        this.screenXData = data.screenX;\n        this.screenYData = data.screenY;\n        this.altKeyData = data.altKey;\n        this.ctrlKeyData = data.ctrlKey;\n        this.metaKeyData = data.metaKey;\n        this.shiftKeyData = data.shiftKey;\n    }\n\n    public get clientX(): number {\n        return this.clientXData;\n    }\n\n    public get clientY(): number {\n        return this.clientYData;\n    }\n\n    public get pageX(): number {\n        return this.pageXData;\n    }\n\n    public get pageY(): number {\n        return this.pageYData;\n    }\n\n    public get screenX(): number {\n        return this.screenXData;\n    }\n\n    public get screenY(): number {\n        return this.screenYData;\n    }\n\n    public get altKey(): boolean {\n        return this.altKeyData;\n    }\n\n    public get ctrlKey(): boolean {\n        return this.ctrlKeyData;\n    }\n\n    public get metaKey(): boolean {\n        return this.metaKeyData;\n    }\n\n    public get shiftKey(): boolean {\n        return this.shiftKeyData;\n    }\n}\n","/* eslint-disable unicorn/no-null */\n/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {PointingDataBase} from \"./PointingDataBase\";\nimport type {PointData} from \"../../api/interaction/PointData\";\n\n/**\n * Single point interaction data implementation with write accesses.\n * @category Interaction Data\n */\nexport class PointDataImpl extends PointingDataBase implements PointData {\n    protected buttonData = 0;\n\n    protected buttonsData = 0;\n\n    protected movementXData = 0;\n\n    protected movementYData = 0;\n\n    protected offsetXData = 0;\n\n    protected offsetYData = 0;\n\n    protected relatedTargetData: EventTarget | null = null;\n\n    public override flush(): void {\n        super.flush();\n        this.buttonData = 0;\n        this.buttonsData = 0;\n        this.movementXData = 0;\n        this.movementYData = 0;\n        this.offsetXData = 0;\n        this.offsetYData = 0;\n        this.relatedTargetData = null;\n    }\n\n    public override copy(data: PointData): void {\n        super.copy(data);\n        /*\n         * Cannot use Object.assign because of a strange implementation of Event\n         * that prevents accessing the properties\n         */\n        this.buttonData = data.button;\n        this.buttonsData = data.buttons;\n        this.movementXData = data.movementX;\n        this.movementYData = data.movementY;\n        this.offsetXData = data.offsetX;\n        this.offsetYData = data.offsetY;\n        this.relatedTargetData = data.relatedTarget;\n    }\n\n    public get button(): number {\n        return this.buttonData;\n    }\n\n    public get buttons(): number {\n        return this.buttonsData;\n    }\n\n    public get movementX(): number {\n        return this.movementXData;\n    }\n\n    public get movementY(): number {\n        return this.movementYData;\n    }\n\n    public get offsetX(): number {\n        return this.offsetXData;\n    }\n\n    public get offsetY(): number {\n        return this.offsetYData;\n    }\n\n    public get relatedTarget(): EventTarget | null {\n        return this.relatedTargetData;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {ClickTransition} from \"../../fsm/ClickTransition\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface ClickFSMHandler extends FSMDataHandler {\n    initToClicked(event: MouseEvent): void;\n}\n\n/**\n * The FSM for click interactions\n * @category FSM\n */\nexport class ClickFSM extends FSMImpl<ClickFSMHandler> {\n    private checkButton: number | undefined;\n\n    /**\n     * Creates the FSM\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(logger: Logger, dataHandler?: ClickFSMHandler) {\n        super(logger, dataHandler);\n\n        new ClickTransition(this.initState, this.addTerminalState(\"clicked\"),\n            (evt: MouseEvent): void => {\n                this.setCheckButton(evt.button);\n                this.dataHandler?.initToClicked(evt);\n            },\n            (evt: MouseEvent): boolean => this.checkButton === undefined || evt.button === this.checkButton);\n    }\n\n    public getCheckButton(): number {\n        return this.checkButton ?? -1;\n    }\n\n    public setCheckButton(buttonToCheck: number): void {\n        if (this.checkButton === undefined) {\n            this.checkButton = buttonToCheck;\n        }\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.checkButton = undefined;\n    }\n}\n\n/**\n * The click interaction.\n * @category Interaction Library\n */\nexport class Click extends InteractionBase<PointData, PointDataImpl, ClickFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param fsm - The optional FSM provided for the interaction\n     * @param data - The interaction data to use\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, fsm?: ClickFSM, data?: PointDataImpl, name?: string) {\n        super(fsm ?? new ClickFSM(logger), data ?? new PointDataImpl(), logger, name ?? Click.name);\n        this.fsm.dataHandler = {\n            \"initToClicked\": (evt: MouseEvent): void => {\n                this._data.copy(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {PointBaseData} from \"../../api/interaction/PointBaseData\";\nimport type {PointsData} from \"../../api/interaction/PointsData\";\n\n/**\n * The base implementation class for interaction data that stores points.\n * @category Interaction Data\n */\nexport abstract class PointsDataImpl<D extends PointBaseData> implements PointsData<D> {\n    protected readonly pointsData: Array<D>;\n\n    public constructor() {\n        this.pointsData = [];\n    }\n\n    public get points(): ReadonlyArray<D> {\n        return Array.from(this.pointsData);\n    }\n\n    public addPoint(ptData: D): void {\n        this.pointsData.push(ptData);\n    }\n\n    public flush(): void {\n        this.pointsData.length = 0;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {PointsDataImpl} from \"./PointsDataImpl\";\nimport type {PointData} from \"../../api/interaction/PointData\";\n\n/**\n * Tapping interaction data implementation\n * @category Interaction Data\n */\nexport class MousePointsDataImpl extends PointsDataImpl<PointData> {\n    private currentPositionData: PointData | undefined;\n\n    /**\n     * Creates the interaction data\n     */\n    public constructor() {\n        super();\n    }\n\n    public get currentPosition(): PointData | undefined {\n        return this.currentPositionData;\n    }\n\n    public set currentPosition(position: PointData | undefined) {\n        this.currentPositionData = position;\n    }\n\n    public get lastButton(): number | undefined {\n        return this.pointsData.at(-1)?.button;\n    }\n\n    public override flush(): void {\n        super.flush();\n        this.currentPositionData = undefined;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {ClickTransition} from \"../../fsm/ClickTransition\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {MousePointsDataImpl} from \"../MousePointsDataImpl\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {MousePointsData} from \"../../../api/interaction/MousePointsData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface ClicksFSMHandler extends FSMDataHandler {\n    click(evt: MouseEvent): void;\n}\n\n/**\n * The FSM that defines the behavior of the clicks interaction\n * @category FSM\n */\nexport class ClicksFSM extends FSMImpl<ClicksFSMHandler> {\n    private countClicks: number;\n\n    private readonly nbClicks: number;\n\n    /**\n     * Creates the Clicks FSM\n     * @param nbClicks - The number of clicks to manage\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(nbClicks: number, logger: Logger, dataHandler: ClicksFSMHandler) {\n        super(logger, dataHandler);\n\n        if (nbClicks <= 0) {\n            throw new Error(\"The number of clicks must be greater than 1\");\n        }\n\n        if (nbClicks === 1) {\n            throw new Error(\"For a number of clicks that equals 1, use the Click interaction\");\n        }\n\n        this.countClicks = 0;\n        this.nbClicks = nbClicks;\n\n        const clicked = this.addStdState(\"clicked\");\n\n        new ClickTransition(this.initState, clicked,\n            (evt: MouseEvent): void => {\n                this.countClicks++;\n                this.dataHandler?.click(evt);\n            });\n\n        new ClickTransition(clicked, clicked,\n            (evt: MouseEvent): void => {\n                this.countClicks++;\n                this.dataHandler?.click(evt);\n            },\n            (): boolean => (this.countClicks + 1) < this.nbClicks);\n\n        new ClickTransition(clicked, this.addTerminalState(\"ended\"),\n            (evt: MouseEvent): void => {\n                this.dataHandler?.click(evt);\n            },\n            (): boolean => (this.countClicks + 1) === this.nbClicks);\n\n        new TimeoutTransition(clicked, this.addCancellingState(\"timeouted\"), () => 1000);\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.countClicks = 0;\n    }\n}\n\n/**\n * The clicks interaction. A user can click several times in different places.\n * @category Interaction Library\n */\nexport class Clicks extends InteractionBase<MousePointsData, MousePointsDataImpl, ClicksFSM> {\n    /**\n     * Creates the clicks interaction\n     * @param numberClicks - The number of clicks expected to end the interaction.\n     * If this number is not reached after a timeout, the interaction is cancelled.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(numberClicks: number, logger: Logger, name?: string) {\n        const handler: ClicksFSMHandler = {\n            \"click\": (evt: MouseEvent): void => {\n                const pt = new PointDataImpl();\n                pt.copy(evt);\n                this._data.addPoint(pt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new ClicksFSM(numberClicks, logger, handler), new MousePointsDataImpl(), logger, name ?? Clicks.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CancellingState} from \"./CancellingState\";\nimport {TerminalState} from \"./TerminalState\";\nimport {TransitionBase} from \"./TransitionBase\";\nimport {isOutputStateType} from \"../../api/fsm/OutputState\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {FSMHandler} from \"../../api/fsm/FSMHandler\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\nimport type {Transition} from \"../../api/fsm/Transition\";\nimport type {Subscription} from \"rxjs\";\n\n/**\n * A transition that refers to another FSM.\n * Entering this transition starts the underlying sub-FSM.\n * To leave the transition, the sub-FSM must end.\n * @category FSM Transition\n */\nexport class SubFSMTransition extends TransitionBase<Event> {\n    private readonly subFSM: FSM;\n\n    private readonly subFSMHandler: FSMHandler;\n\n    /**\n     * Temporary subscription to the current state of the sub-FSM.\n     */\n    private subStateSubscription?: Subscription;\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition.\n     * @param tgtState - The output state of the transition.\n     * @param fsm - The inner FSM that composes the transition.\n     * @param action - The action to execute when going through the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState, fsm: FSM,\n                       action?: (evt: Event) => void) {\n        super(srcState, tgtState, action, (evt: Event) => this.findTransition(evt)?.guard(evt) ?? false);\n        this.subFSM = fsm;\n        this.subFSM.inner = true;\n        this.subFSMHandler = {\n            \"fsmStarts\": (): void => {\n                this.src.exit();\n            },\n            \"fsmUpdates\": (): void => {\n                this.src.fsm.onUpdating();\n            },\n            \"fsmStops\": (): void => {\n                this.action(new Event(\"\"));\n                this.unsetFSMHandler();\n                if (this.tgt instanceof TerminalState) {\n                    this.tgt.enter();\n                    return;\n                }\n                if (this.tgt instanceof CancellingState) {\n                    this.cancelsFSM();\n                    return;\n                }\n                if (isOutputStateType(this.tgt)) {\n                    this.src.fsm.currentState = this.tgt;\n                    this.tgt.enter();\n                }\n            },\n            \"fsmCancels\": (): void => {\n                this.cancelsFSM();\n            },\n            \"fsmError\": (err: unknown): void => {\n                this.src.fsm.onError(err);\n            }\n        };\n    }\n\n    /**\n     * When has to setting up the subFSM\n     */\n    private setUpFSMHandler(): void {\n        this.subFSM.addHandler(this.subFSMHandler);\n        this.src.fsm.currentSubFSM = this.subFSM;\n        this.subStateSubscription = this.subFSM.currentStateObservable\n            .subscribe(value => {\n                // eslint-disable-next-line @typescript-eslint/prefer-destructuring\n                this.src.fsm.currentState = value[1];\n            });\n    }\n\n    /**\n     * If the subFSM is not more used to should be unset.\n     */\n    private unsetFSMHandler(): void {\n        this.subFSM.removeHandler(this.subFSMHandler);\n        this.src.fsm.currentSubFSM = undefined;\n        this.subStateSubscription?.unsubscribe();\n    }\n\n    private cancelsFSM(): void {\n        this.unsetFSMHandler();\n        this.src.fsm.onCancelling();\n    }\n\n    public override execute(event: Event): InputState | undefined {\n        const transition: Transition<Event> | undefined = this.findTransition(event);\n\n        if (transition === undefined) {\n            return undefined;\n        }\n\n        this.src.fsm.stopCurrentTimeout();\n        this.setUpFSMHandler();\n        this.subFSM.process(event);\n        return transition.target;\n    }\n\n    public accept(event: Event): event is Event {\n        return this.findTransition(event) !== undefined;\n    }\n\n    private findTransition(event: Event): Transition<Event> | undefined {\n        return this.subFSM\n            .initState\n            .transitions\n            .find(tr => tr.accept(event));\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        // Optimisation to avoid map and reduce\n        const result = new Set<EventType>();\n        for (const trans of this.subFSM.initState.transitions) {\n            for (const evt of trans.getAcceptedEvents()) {\n                result.add(evt);\n            }\n        }\n        return result;\n    }\n\n    public override uninstall(): void {\n        this.unsetFSMHandler();\n        this.subFSM.uninstall();\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {Click, ClickFSM} from \"./Click\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {SubFSMTransition} from \"../../fsm/SubFSMTransition\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\n/**\n * The FSM for the mouse double click interaction\n * @category FSM\n */\nexport class DoubleClickFSM extends FSMImpl<FSMDataHandler> {\n    /** The time gap between the two spinner events. */\n    private static timeGap = 300;\n\n    /**\n     * The supplier that provides the time gap.\n     * @returns The time gap\n     */\n    private static readonly timeGapSupplier: () => number = () => DoubleClickFSM.getTimeGap();\n\n    /**\n     * @returns The time gap between the two spinner events.\n     */\n    public static getTimeGap(): number {\n        return DoubleClickFSM.timeGap;\n    }\n\n    /**\n     * Sets The time gap between the two spinner events.\n     * @param timeGapBetweenClicks - The time gap between the two spinner events. Not done if negative.\n     */\n    public static setTimeGap(timeGapBetweenClicks: number): void {\n        if (timeGapBetweenClicks > 0) {\n            DoubleClickFSM.timeGap = timeGapBetweenClicks;\n        }\n    }\n\n    public readonly firstClickFSM: ClickFSM;\n\n    private readonly sndClickFSM: ClickFSM;\n\n    private checkButton: number | undefined;\n\n    public constructor(logger: Logger, dataHandler?: FSMDataHandler) {\n        super(logger, dataHandler);\n        this.firstClickFSM = new ClickFSM(logger);\n        this.sndClickFSM = new ClickFSM(logger);\n\n        const errorHandler = {\n            \"fsmError\": (err: unknown): void => {\n                this.notifyHandlerOnError(err);\n            }\n        };\n\n        this.firstClickFSM.addHandler(errorHandler);\n        this.sndClickFSM.addHandler(errorHandler);\n\n        const cancelled = this.addCancellingState(\"cancelled\");\n        const clicked = this.addStdState(\"clicked\");\n\n        new SubFSMTransition(this.initState, clicked, this.firstClickFSM,\n            (): void => {\n                this.setCheckButton(this.firstClickFSM.getCheckButton());\n            });\n\n        new MouseTransition(clicked, cancelled, \"mousemove\", undefined,\n            (ev: Event): boolean => (this.checkButton === undefined || ev instanceof MouseEvent && ev.button === this.checkButton));\n\n        new TimeoutTransition(clicked, cancelled, DoubleClickFSM.timeGapSupplier);\n        new SubFSMTransition(clicked, this.addTerminalState(\"dbleclicked\", true), this.sndClickFSM);\n    }\n\n    // eslint-disable-next-line accessor-pairs\n    public override set log(log: boolean) {\n        super.log = log;\n        this.firstClickFSM.log = log;\n        this.sndClickFSM.log = log;\n    }\n\n    public setCheckButton(buttonToCheck: number): void {\n        if (this.checkButton === undefined) {\n            this.checkButton = buttonToCheck;\n        }\n        this.sndClickFSM.setCheckButton(buttonToCheck);\n    }\n\n    public getCheckButton(): number {\n        return this.checkButton ?? -1;\n    }\n\n    public override fullReinit(): void {\n        super.fullReinit();\n        this.firstClickFSM.fullReinit();\n        this.sndClickFSM.fullReinit();\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.firstClickFSM.reinit();\n        this.sndClickFSM.reinit();\n        this.checkButton = undefined;\n    }\n}\n\n/**\n * The mouse double click interaction\n * @category Interaction Library\n */\nexport class DoubleClick extends InteractionBase<PointData, PointDataImpl, DoubleClickFSM> {\n    public constructor(logger: Logger, fsm?: DoubleClickFSM, data?: PointDataImpl, name?: string) {\n        super(fsm ?? new DoubleClickFSM(logger), data ?? new PointDataImpl(), logger, name ?? DoubleClick.name);\n\n        this.fsm.dataHandler = {\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n        /*\n         * We give the interaction to the first click as this click interaction\n         * will contains the data: so that this interaction will fill the data\n         * of the double-click.\n         */\n        new Click(logger, this.fsm.firstClickFSM, this._data);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType, KeyEventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * A transition for a keys.\n * @category FSM Transition\n */\nexport class KeyTransition extends TransitionBase<KeyboardEvent> {\n    private readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"wheel\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param keyType - The type of key event\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState, keyType: KeyEventType,\n                       action?: (evt: KeyboardEvent) => void, guard?: (evt: KeyboardEvent) => boolean) {\n        super(srcState, tgtState, action, guard);\n        this.acceptedEvents = new Set([keyType]);\n    }\n\n    public accept(event: Event): event is KeyboardEvent {\n        return event instanceof KeyboardEvent && this.getAcceptedEvents().has(event.type as EventType);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return this.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {KeyCode} from \"./Events\";\nimport {KeyTransition} from \"./KeyTransition\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * This transition should be used to cancel an interaction using key ESCAPE.\n * @category FSM Transition\n */\nexport class EscapeKeyPressureTransition extends KeyTransition {\n    public constructor(srcState: OutputState, tgtState: InputState, action?: (evt: KeyboardEvent) => void) {\n        super(srcState, tgtState, \"keydown\", action,\n            (evt: KeyboardEvent) => evt.code === \"Escape\" || evt.code === String(KeyCode.escape));\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {Flushable} from \"./Flushable\";\nimport type {PointBaseData} from \"../../api/interaction/PointBaseData\";\nimport type {SrcTgtPointsData} from \"../../api/interaction/SrcTgtPointsData\";\n\n/**\n * The user interaction base data for DnD-like interactions\n * @typeParam T - The interface of the point interaction data\n * @typeParam S - The class of the point interaction data\n * @category Interaction Data\n */\nexport abstract class SrcTgtDataBase<T extends PointBaseData, S extends Flushable & T> implements SrcTgtPointsData<T> {\n    protected readonly srcData: S;\n\n    protected readonly tgtData: S;\n\n    protected constructor(src: S, tgt: S) {\n        this.srcData = src;\n        this.tgtData = tgt;\n    }\n\n    public get src(): T {\n        return this.srcData;\n    }\n\n    public get tgt(): T {\n        return this.tgtData;\n    }\n\n    public get diffClientX(): number {\n        return this.tgt.clientX - this.src.clientX;\n    }\n\n    public get diffClientY(): number {\n        return this.tgt.clientY - this.src.clientY;\n    }\n\n    public get diffPageX(): number {\n        return this.tgt.pageX - this.src.pageX;\n    }\n\n    public get diffPageY(): number {\n        return this.tgt.pageY - this.src.pageY;\n    }\n\n    public get diffScreenX(): number {\n        return this.tgt.screenX - this.src.screenX;\n    }\n\n    public get diffScreenY(): number {\n        return this.tgt.screenY - this.src.screenY;\n    }\n\n    public get duration(): number {\n        return this.tgtData.timeStamp - this.srcData.timeStamp;\n    }\n\n    public velocity(direction: \"all\" | \"horiz\" | \"vert\"): number {\n        switch (direction) {\n            case \"all\":\n                return (Math.hypot(this.diffScreenX, this.diffScreenY) / this.duration) * 1000;\n            case \"horiz\":\n                return (Math.abs(this.diffScreenX) / this.duration) * 1000;\n            case \"vert\":\n                return (Math.abs(this.diffScreenY) / this.duration) * 1000;\n            default:\n                return 0;\n        }\n    }\n\n    public isHorizontal(pxTolerance: number): boolean {\n        return Math.abs(this.diffScreenY) <= pxTolerance && this.diffScreenX !== 0;\n    }\n\n    public isVertical(pxTolerance: number): boolean {\n        return Math.abs(this.diffScreenX) <= pxTolerance && this.diffScreenY !== 0;\n    }\n\n    public isLeft(pxTolerance: number): boolean {\n        return this.isHorizontal(pxTolerance) && this.tgt.screenX < this.src.screenX;\n    }\n\n    public isRight(pxTolerance: number): boolean {\n        return this.isHorizontal(pxTolerance) && this.tgt.screenX > this.src.screenX;\n    }\n\n    public isTop(pxTolerance: number): boolean {\n        return this.isVertical(pxTolerance) && this.tgt.screenY < this.src.screenY;\n    }\n\n    public isBottom(pxTolerance: number): boolean {\n        return this.isVertical(pxTolerance) && this.tgt.screenY > this.src.screenY;\n    }\n\n    public flush(): void {\n        this.srcData.flush();\n        this.tgtData.flush();\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {PointDataImpl} from \"./PointDataImpl\";\nimport {SrcTgtDataBase} from \"./SrcTgtDataBase\";\nimport type {PointData} from \"../../api/interaction/PointData\";\n\n/**\n * The user interaction data for mouse-based DnD interactions\n * @category Interaction Data\n */\nexport class SrcTgtPointsDataImpl extends SrcTgtDataBase<PointData, PointDataImpl> {\n    public constructor() {\n        super(new PointDataImpl(), new PointDataImpl());\n    }\n\n    public copySrc(data: PointData): void {\n        this.srcData.copy(data);\n    }\n\n    public copyTgt(data: PointData): void {\n        this.tgtData.copy(data);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {DoubleClick, DoubleClickFSM} from \"./DoubleClick\";\nimport {EscapeKeyPressureTransition} from \"../../fsm/EscapeKeyPressureTransition\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {SubFSMTransition} from \"../../fsm/SubFSMTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {SrcTgtPointsDataImpl} from \"../SrcTgtPointsDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {SrcTgtPointsData} from \"../../../api/interaction/SrcTgtPointsData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\nimport type {PointDataImpl} from \"../PointDataImpl\";\n\nclass DragLockFSM extends FSMImpl<DragLockFSMHandler> {\n    public readonly firstDbleClick: DoubleClickFSM;\n\n    public readonly sndDbleClick: DoubleClickFSM;\n\n    protected checkButton: number | undefined;\n\n    public constructor(logger: Logger, dataHandler: DragLockFSMHandler) {\n        super(logger, dataHandler);\n        this.firstDbleClick = new DoubleClickFSM(logger);\n        this.sndDbleClick = new DoubleClickFSM(logger);\n\n        const cancelDbleClick = new DoubleClickFSM(logger);\n        const errorHandler = {\n            \"fsmError\": (err: unknown): void => {\n                this.notifyHandlerOnError(err);\n            }\n        };\n\n        this.firstDbleClick.addHandler(errorHandler);\n        this.sndDbleClick.addHandler(errorHandler);\n        cancelDbleClick.addHandler(errorHandler);\n\n        const cancelled = this.addCancellingState(\"cancelled\");\n        const locked = this.addStdState(\"locked\");\n        const moved = this.addStdState(\"moved\");\n\n        new SubFSMTransition(this.initState, locked, this.firstDbleClick,\n            (): void => {\n                const checkButton = this.firstDbleClick.getCheckButton();\n                this.sndDbleClick.setCheckButton(checkButton);\n                cancelDbleClick.setCheckButton(checkButton);\n                this.dataHandler?.onFirstDbleClick();\n            });\n\n        new SubFSMTransition(locked, cancelled, cancelDbleClick);\n\n        const move = new MouseTransition(locked, moved, \"mousemove\",\n            (event: MouseEvent): void => {\n                this.dataHandler?.onMove(event);\n            });\n\n        new MouseTransition(moved, moved, \"mousemove\", move.action);\n\n        new EscapeKeyPressureTransition(locked, cancelled);\n        new EscapeKeyPressureTransition(moved, cancelled);\n        new SubFSMTransition(moved, this.addTerminalState(\"dropped\"), this.sndDbleClick);\n    }\n\n    // eslint-disable-next-line accessor-pairs\n    public override set log(log: boolean) {\n        super.log = log;\n        this.firstDbleClick.log = log;\n        this.sndDbleClick.log = log;\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.firstDbleClick.reinit();\n        this.sndDbleClick.reinit();\n        this.checkButton = undefined;\n    }\n\n    public override fullReinit(): void {\n        super.fullReinit();\n        this.firstDbleClick.fullReinit();\n        this.sndDbleClick.fullReinit();\n    }\n}\n\ninterface DragLockFSMHandler extends FSMDataHandler {\n    onMove(event: MouseEvent): void;\n    onFirstDbleClick(): void;\n}\n\n/**\n * The drag-lock user interaction\n * @category Interaction Library\n */\nexport class DragLock extends InteractionBase<SrcTgtPointsData<PointData>, SrcTgtPointsDataImpl, DragLockFSM> {\n    /**\n     * Creates a drag lock.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: DragLockFSMHandler = {\n            \"onMove\": (evt: MouseEvent): void => {\n                (this.data.tgt as PointDataImpl).copy(evt);\n            },\n            \"onFirstDbleClick\": (): void => {\n                // On the first double-click we have to set the tgt point by copying the src data.\n                (this.data.tgt as PointDataImpl).copy(this.data.src);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new DragLockFSM(logger, handler), new SrcTgtPointsDataImpl(), logger, name ?? DragLock.name);\n\n        /*\n         * We give the interactions to the initial and final double-clicks as these interactions\n         * will contain the data: so that these interactions will fill the data of the draglock.\n         */\n        new DoubleClick(logger, this.fsm.firstDbleClick, this.data.src as PointDataImpl);\n        new DoubleClick(logger, this.fsm.sndDbleClick, this.data.tgt as PointDataImpl);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {KeyTransition} from \"../../fsm/KeyTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {KeyDataImpl} from \"../KeyDataImpl\";\nimport type {KeyData} from \"../../../api/interaction/KeyData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface KeyDownFSMHandler extends FSMDataHandler {\n    onKeyPressed(event: KeyboardEvent): void;\n}\n\n/**\n * An FSM for a single key pressure.\n * @category FSM\n */\nexport class KeyDownFSM extends FSMImpl<KeyDownFSMHandler> {\n    private readonly modifiersAccepted: boolean;\n\n    /**\n     * Creates the FSM.\n     * @param modifierAccepted - True: the FSM will consider key modifiers.\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     * @param key - The optional accpeted key code\n     */\n    public constructor(modifierAccepted: boolean, logger: Logger, dataHandler: KeyDownFSMHandler, key?: string) {\n        super(logger, dataHandler);\n        this.modifiersAccepted = modifierAccepted;\n\n        new KeyTransition(this.initState, this.addTerminalState(\"pressed\"), \"keydown\",\n            (evt: KeyboardEvent): void => {\n                this.dataHandler?.onKeyPressed(evt);\n            },\n            (evt: KeyboardEvent): boolean => (key === undefined || key === evt.code) &&\n                (this.modifiersAccepted || (!evt.altKey && !evt.ctrlKey && !evt.shiftKey && !evt.metaKey)));\n    }\n\n    public override reinit(): void {\n        super.reinit();\n    }\n\n}\n\n/**\n * A user interaction for pressing a key on a keyboard\n * @category Interaction Library\n */\nexport class KeyDown extends InteractionBase<KeyData, KeyDataImpl, KeyDownFSM> {\n\n    public constructor(logger: Logger, modifierAccepted: boolean, key?: string, fsm?: KeyDownFSM, name?: string) {\n        const handler: KeyDownFSMHandler = {\n            \"onKeyPressed\": (event: KeyboardEvent): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(fsm ?? new KeyDownFSM(modifierAccepted, logger, handler, key), new KeyDataImpl(), logger, name ?? KeyDown.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {KeyTransition} from \"../../fsm/KeyTransition\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {KeysDataImpl} from \"../KeysDataImpl\";\nimport type {KeysData} from \"../../../api/interaction/KeysData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface KeyTypedFSMHandler extends FSMDataHandler {\n    onKeyTyped(event: Event): void;\n}\n\n/**\n * An FSM for typing several keyboard touches.\n * One can type on multiple keys. The FSM ends after a timeout (a delay after the latest\n * typed key).\n * @category FSM\n */\nexport class KeysTypedFSM extends FSMImpl<KeyTypedFSMHandler> {\n    /** The time gap between the two spinner events. */\n    private static readonly timeGap: number = 1000;\n\n    /**\n     * The supplier that provides the time gap.\n     * @returns The time gap.\n     */\n    private static readonly timeGapSupplier: () => number = () => KeysTypedFSM.getTimeGap();\n\n    private static getTimeGap(): number {\n        return KeysTypedFSM.timeGap;\n    }\n\n    /**\n     * Creates the FSM.\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(logger: Logger, dataHandler: KeyTypedFSMHandler) {\n        super(logger, dataHandler);\n\n        const keyup = this.addStdState(\"keyup\");\n\n        const action = (event: KeyboardEvent): void => {\n            this.dataHandler?.onKeyTyped(event);\n        };\n\n        new KeyTransition(this.initState, keyup, \"keyup\", action);\n\n        new KeyTransition(keyup, keyup, \"keyup\", action);\n\n        new TimeoutTransition(keyup, this.addTerminalState(\"timeouted\"), KeysTypedFSM.timeGapSupplier);\n    }\n}\n\n/**\n * A user interaction for typing several keyboard keys.\n * One can type on multiple keys. The interaction ends after a timeout (a delay after the latest\n * typed key).\n * @category Interaction Library\n */\nexport class KeysTyped extends InteractionBase<KeysData, KeysDataImpl, KeysTypedFSM> {\n    /**\n     * Creates the user interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: KeyTypedFSMHandler = {\n            \"onKeyTyped\": (event: KeyboardEvent): void => {\n                this._data.addKey(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new KeysTypedFSM(logger, handler), new KeysDataImpl(), logger, name ?? KeysTyped.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {KeyTransition} from \"../../fsm/KeyTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {KeyDataImpl} from \"../KeyDataImpl\";\nimport type {KeyData} from \"../../../api/interaction/KeyData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface KeyTypedFSMHandler extends FSMDataHandler {\n    onKeyTyped(event: KeyboardEvent): void;\n}\n\n/**\n * The FSM that describes a keyboard touch typed.\n * @category FSM\n */\nexport class KeyTypedFSM extends FSMImpl<KeyTypedFSMHandler> {\n    private checkKey: string | undefined;\n\n    public constructor(logger: Logger, dataHandler: KeyTypedFSMHandler, key?: string) {\n        super(logger, dataHandler);\n\n        this.checkKey = key;\n        const pressed = this.addStdState(\"pressed\");\n\n        new KeyTransition(this.initState, pressed, \"keydown\",\n            (event: KeyboardEvent): void => {\n                if (this.checkKey === undefined) {\n                    this.checkKey = event.code;\n                }\n            });\n\n        new KeyTransition(pressed, this.addTerminalState(\"typed\", true), \"keyup\",\n            (evt: KeyboardEvent): void => {\n                this.dataHandler?.onKeyTyped(evt);\n            },\n            (evt: KeyboardEvent): boolean => this.checkKey === undefined || evt.code === this.checkKey);\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.checkKey = undefined;\n    }\n}\n\n/**\n * A user interaction for pressing, then releasing a keyboard key\n * @category Interaction Library\n */\nexport class KeyTyped extends InteractionBase<KeyData, KeyDataImpl, KeyTypedFSM> {\n    /**\n     * Creates the user interaction.\n     * @param logger - The logger to use for this interaction\n     * @param key - The expected key. Do nothing if the involved key is different\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, key?: string, name?: string) {\n        const handler: KeyTypedFSMHandler = {\n            \"onKeyTyped\": (event: KeyboardEvent): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new KeyTypedFSM(logger, handler, key), new KeyDataImpl(), logger, name ?? KeyTyped.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {KeyTransition} from \"../../fsm/KeyTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {KeyDataImpl} from \"../KeyDataImpl\";\nimport type {KeyData} from \"../../../api/interaction/KeyData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface KeyUpFSMHandler extends FSMDataHandler {\n    onKeyUp(event: KeyboardEvent): void;\n}\n\n/**\n * An FSM for a single key release.\n * @category FSM\n */\nexport class KeyUpFSM extends FSMImpl<KeyUpFSMHandler> {\n    private readonly modifiersAccepted: boolean;\n\n    /**\n     * Creates the FSM.\n     * @param modifierAccepted - True: the FSM will consider key modifiers.\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(modifierAccepted: boolean, logger: Logger, dataHandler: KeyUpFSMHandler) {\n        super(logger, dataHandler);\n        this.modifiersAccepted = modifierAccepted;\n\n        new KeyTransition(this.initState, this.addTerminalState(\"released\"), \"keyup\",\n            (evt: KeyboardEvent): void => {\n                this.dataHandler?.onKeyUp(evt);\n            },\n            (ev: KeyboardEvent): boolean => this.modifiersAccepted || (!ev.altKey && !ev.ctrlKey && !ev.shiftKey && !ev.metaKey));\n    }\n}\n\n/**\n * A user interaction for releasing a key on a keyboard\n * @category Interaction Library\n */\nexport class KeyUp extends InteractionBase<KeyData, KeyDataImpl, KeyUpFSM> {\n    public constructor(logger: Logger, modifierAccepted: boolean, fsm?: KeyUpFSM, name?: string) {\n        const handler: KeyUpFSMHandler = {\n            \"onKeyUp\": (event: KeyboardEvent): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(fsm ?? new KeyUpFSM(modifierAccepted, logger, handler), new KeyDataImpl(), logger, name ?? KeyUp.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface LongMouseDownFSMHandler extends FSMDataHandler {\n    press(evt: MouseEvent): void;\n}\n\n/**\n * The FSM for the LongPress interaction\n * @category FSM\n */\nexport class LongMouseDownFSM extends FSMImpl<LongMouseDownFSMHandler> {\n    private readonly duration: number;\n\n    private currentButton: number | undefined;\n\n    /**\n     * Creates the long press FSM\n     * @param duration - Defines the duration of the long press interaction (in ms).\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(duration: number, logger: Logger, dataHandler: LongMouseDownFSMHandler) {\n        super(logger, dataHandler);\n\n        if (duration <= 0) {\n            throw new Error(\"Incorrect duration\");\n        }\n\n        this.duration = duration;\n        this.currentButton = undefined;\n\n        const down = this.addStdState(\"down\");\n        const cancelled = this.addCancellingState(\"cancelled\");\n        const timeouted = this.addTerminalState(\"timeouted\");\n\n        new MouseTransition(this.initState, down, \"mousedown\",\n            (evt: MouseEvent): void => {\n                this.currentButton = evt.button;\n                this.dataHandler?.press(evt);\n            });\n\n        const move = new MouseTransition(down, cancelled, \"mousemove\", undefined,\n            (evt: MouseEvent): boolean => evt.button === this.currentButton);\n\n        new MouseTransition(down, cancelled, \"mouseup\", undefined, move.guard);\n\n        new TimeoutTransition(down, timeouted, () => this.duration);\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.currentButton = undefined;\n    }\n}\n\n/**\n * The long mouse down interaction. The interaction ends after a delay after having a mouse down (with no mouse up)\n * @category Interaction Library\n */\nexport class LongMouseDown extends InteractionBase<PointData, PointDataImpl, LongMouseDownFSM> {\n    /**\n     * Creates the long press interaction\n     * @param duration - The duration of the pressure required to end the user interaction (in ms)\n     * If this duration is not reached, the interaction is cancelled.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(duration: number, logger: Logger, name?: string) {\n        const handler: LongMouseDownFSMHandler = {\n            \"press\": (evt: MouseEvent): void => {\n                this._data.copy(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new LongMouseDownFSM(duration, logger, handler), new PointDataImpl(), logger, name ?? LongMouseDown.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\nclass MouseDownFSM extends FSMImpl<MouseDownFSMHandler> {\n    public constructor(logger: Logger, dataHandler: MouseDownFSMHandler) {\n        super(logger, dataHandler);\n\n        new MouseTransition(this.initState, this.addTerminalState(\"pressed\"), \"mousedown\",\n            (event: MouseEvent): void => {\n                this.dataHandler?.initToPress(event);\n            });\n    }\n}\n\ninterface MouseDownFSMHandler extends FSMDataHandler {\n    initToPress(event: MouseEvent): void;\n}\n\n/**\n * A user interaction for pressing down a mouse button.\n * @category Interaction Library\n */\nexport class MouseDown extends InteractionBase<PointData, PointDataImpl, MouseDownFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: MouseDownFSMHandler = {\n            \"initToPress\": (evt: MouseEvent): void => {\n                this._data.copy(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new MouseDownFSM(logger, handler), new PointDataImpl(), logger, name ?? MouseDown.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface MouseUpFSMHandler extends FSMDataHandler {\n    initToPress(event: MouseEvent): void;\n}\n\n/**\n * The FSM of the mosue up interaction\n * @category FSM\n */\nexport class MouseUpFSM extends FSMImpl<MouseUpFSMHandler> {\n    public constructor(logger: Logger, dataHandler: MouseUpFSMHandler) {\n        super(logger, dataHandler);\n\n        new MouseTransition(this.initState, this.addTerminalState(\"released\"), \"mouseup\",\n            (event: MouseEvent): void => {\n                this.dataHandler?.initToPress(event);\n            });\n    }\n}\n\n/**\n * A user interaction for releasing a mouse button.\n * @category Interaction Library\n */\nexport class MouseUp extends InteractionBase<PointData, PointDataImpl, MouseUpFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: MouseUpFSMHandler = {\n            \"initToPress\": (evt: MouseEvent): void => {\n                this._data.copy(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new MouseUpFSM(logger, handler), new PointDataImpl(), logger, name ?? MouseUp.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType, TouchEventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * This transition defines a touch move.\n * @category FSM Transition\n */\nexport class TouchTransition extends TransitionBase<TouchEvent> {\n    private readonly acceptedEvents: ReadonlySet<EventType>;\n\n    /**\n     * Defines a transition.\n     * @param srcState - The source state of the transition.\n     * @param tgtState - The srcObject state of the transition.\n     * @param eventType - The type of touch event\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState, eventType: TouchEventType,\n                       action?: (evt: TouchEvent) => void, guard?: (evt: TouchEvent) => boolean) {\n        super(srcState, tgtState, action, guard);\n        this.acceptedEvents = new Set([eventType]);\n    }\n\n    public accept(evt: Event): evt is TouchEvent {\n        return evt instanceof TouchEvent && this.getAcceptedEvents().has(evt.type as EventType);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return this.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {PointDataImpl} from \"./PointDataImpl\";\nimport {PointingDataBase} from \"./PointingDataBase\";\nimport type {EventModifierData} from \"../../api/interaction/EventModifierData\";\nimport type {PointData} from \"../../api/interaction/PointData\";\nimport type {TouchData} from \"../../api/interaction/TouchData\";\nimport type {UnitInteractionData} from \"../../api/interaction/UnitInteractionData\";\n\n/**\n * The user interaction data for touch-based interactions\n * @category Interaction Data\n */\nexport class TouchDataImpl extends PointingDataBase implements TouchData {\n    private _allTouches: Array<TouchData> = [];\n\n    private forceData = 0;\n\n    private identifierData = -1;\n\n    private radiusXData = 0;\n\n    private radiusYData = 0;\n\n    private rotationAngleData = 0;\n\n    public get allTouches(): ReadonlyArray<TouchData> {\n        return this._allTouches;\n    }\n\n    public get force(): number {\n        return this.forceData;\n    }\n\n    public get identifier(): number {\n        return this.identifierData;\n    }\n\n    public get radiusX(): number {\n        return this.radiusXData;\n    }\n\n    public get radiusY(): number {\n        return this.radiusYData;\n    }\n\n    public get rotationAngle(): number {\n        return this.rotationAngleData;\n    }\n\n    public override copy(data: TouchData): void {\n        super.copy(data);\n        this.forceData = data.force;\n        this.identifierData = data.identifier;\n        this.radiusXData = data.radiusX;\n        this.radiusYData = data.radiusY;\n        this.rotationAngleData = data.rotationAngle;\n        this._allTouches = data.allTouches.map(touch => {\n            const newT = new TouchDataImpl();\n            newT.copy(touch);\n            return newT;\n        });\n    }\n\n    public override flush(): void {\n        super.flush();\n        this.forceData = 0;\n        this.identifierData = -1;\n        this.radiusXData = 0;\n        this.radiusYData = 0;\n        this.rotationAngleData = 0;\n        this._allTouches = [];\n    }\n\n    public static mergeTouchEventData(touch: Touch, evt: EventModifierData & UnitInteractionData, allTouches: Array<Touch>): TouchData {\n        const data = new TouchDataImpl();\n        /*\n         * Not beautiful code but other tries did not work\n         * 'assign' and spread do not work with events (polyfill concern? Or front interfaces for legacy back API?).\n         */\n        data.copy({\n            \"clientX\": touch.clientX,\n            \"clientY\": touch.clientY,\n            \"force\": touch.force,\n            \"identifier\": touch.identifier,\n            \"pageX\": touch.pageX,\n            \"pageY\": touch.pageY,\n            \"radiusX\": touch.radiusX,\n            \"radiusY\": touch.radiusY,\n            \"rotationAngle\": touch.rotationAngle,\n            \"screenX\": touch.screenX,\n            \"screenY\": touch.screenY,\n            \"target\": touch.target,\n            \"allTouches\": allTouches.map(currTouch => TouchDataImpl.mergeTouchEventData(currTouch, evt, [])),\n            \"timeStamp\": evt.timeStamp,\n            \"altKey\": evt.altKey,\n            \"shiftKey\": evt.shiftKey,\n            \"ctrlKey\": evt.ctrlKey,\n            \"metaKey\": evt.metaKey,\n            \"currentTarget\": evt.currentTarget\n        });\n        return data;\n    }\n\n    public toPointData(): PointData {\n        const point = new PointDataImpl();\n        point.copy({\n            \"button\": this.identifier,\n            \"buttons\": 0,\n            \"movementX\": 0,\n            \"movementY\": 0,\n            \"offsetX\": 0,\n            \"offsetY\": 0,\n            \"relatedTarget\": this.target,\n            \"clientX\": this.clientX,\n            \"clientY\": this.clientY,\n            \"pageX\": this.pageX,\n            \"pageY\": this.pageY,\n            \"screenX\": this.screenX,\n            \"screenY\": this.screenY,\n            \"altKey\": this.altKey,\n            \"ctrlKey\": this.ctrlKey,\n            \"metaKey\": this.metaKey,\n            \"shiftKey\": this.shiftKey,\n            \"timeStamp\": this.timeStamp,\n            \"target\": this.target,\n            \"currentTarget\": this.currentTarget\n        });\n        return point;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {SrcTgtDataBase} from \"./SrcTgtDataBase\";\nimport {TouchDataImpl} from \"./TouchDataImpl\";\nimport type {EventModifierData} from \"../../api/interaction/EventModifierData\";\nimport type {TouchData} from \"../../api/interaction/TouchData\";\nimport type {UnitInteractionData} from \"../../api/interaction/UnitInteractionData\";\n\n/**\n * The user interaction data for touch-DnD interactions\n * @category Interaction Data\n */\nexport class SrcTgtTouchDataImpl extends SrcTgtDataBase<TouchData, TouchDataImpl> {\n    public constructor() {\n        super(new TouchDataImpl(), new TouchDataImpl());\n    }\n\n    public copySrc(data: Touch, evt: EventModifierData & UnitInteractionData, allTouches: Array<Touch>): void {\n        this.srcData.copy(TouchDataImpl.mergeTouchEventData(data, evt, allTouches));\n    }\n\n    public copyTgt(data: Touch, evt: EventModifierData & UnitInteractionData, allTouches: Array<Touch>): void {\n        this.tgtData.copy(TouchDataImpl.mergeTouchEventData(data, evt, allTouches));\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {getTouch} from \"../../fsm/Events\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {TouchTransition} from \"../../fsm/TouchTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {SrcTgtTouchDataImpl} from \"../SrcTgtTouchDataImpl\";\nimport type {SrcTgtPointsData} from \"../../../api/interaction/SrcTgtPointsData\";\nimport type {TouchData} from \"../../../api/interaction/TouchData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {CancellingState} from \"../../fsm/CancellingState\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\nimport type {StdState} from \"../../fsm/StdState\";\n\n/**\n * The FSM that defines a touch interaction (that works like a DnD)\n * @category FSM\n */\nexport class TouchDnDFSM extends FSMImpl<TouchDnDFSMHandler> {\n    protected touchID: number | undefined;\n\n    protected readonly cancellable;\n\n    protected readonly movementRequired;\n\n    protected readonly cancelled: CancellingState;\n\n    protected readonly moved: StdState;\n\n    protected readonly touched: StdState;\n\n    /**\n     * Creates the FSM.\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     * @param movementRequired - Whether the DnD starts after the touch point has begun moving (default)\n     * or as soon as the screen is touched. The latter is used for the MultiTouch interaction.\n     */\n    public constructor(cancellable: boolean, logger: Logger, dataHandler: TouchDnDFSMHandler, movementRequired = true) {\n        super(logger, dataHandler);\n        this.touchID = undefined;\n        this.cancellable = cancellable;\n        this.movementRequired = movementRequired;\n        this.cancelled = this.addCancellingState(\"cancelled\");\n        this.moved = this.addStdState(\"moved\");\n        this.touched = this.addStdState(\"touched\");\n        this.buildFSM();\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    protected buildFSM(): void {\n        const released = this.addTerminalState(\"released\");\n\n        const touchDown = (event: TouchEvent): void => {\n            this.touchID = event.changedTouches[0]?.identifier;\n            this.dataHandler?.onTouch(event);\n        };\n\n        const fixTouchDownCheck = (event: TouchEvent): boolean =>\n            !Array.from(event.touches).some(touch => touch.identifier === this.touchID);\n\n        new TouchTransition(this.initState, this.touched, \"touchstart\", touchDown);\n\n        /*\n         * If the touch up event is lost by the browser and another touch down occurs\n         * we must restart the interaction\n         */\n        new TouchTransition(this.touched, this.touched, \"touchstart\", touchDown, fixTouchDownCheck);\n\n        if (this.movementRequired) {\n            this.startingState = this.moved;\n            new TouchTransition(this.touched, this.cancelled, \"touchend\", undefined,\n                (event: TouchEvent): boolean => event.changedTouches[0] !== undefined && event.changedTouches[0].identifier === this.touchID);\n        } else {\n            new TouchTransition(this.touched, released, \"touchend\",\n                (event: TouchEvent): void => {\n                    this.dataHandler?.onRelease(event);\n                },\n                (event: TouchEvent): boolean => event.changedTouches[0] !== undefined && event.changedTouches[0].identifier === this.touchID);\n        }\n\n        const moved = (event: TouchEvent): void => {\n            this.dataHandler?.onMove(event);\n        };\n        const movedPredicate = (event: TouchEvent): boolean => event.changedTouches[0]?.identifier === this.touchID;\n\n        new TouchTransition(this.touched, this.moved, \"touchmove\", moved, movedPredicate);\n        new TouchTransition(this.moved, this.moved, \"touchmove\", moved, movedPredicate);\n\n        /*\n         * If the touch up event is lost by the browser and another touch down occurs\n         * we must restart the interaction\n         */\n        new TouchTransition(this.moved, this.touched, \"touchstart\", touchDown, fixTouchDownCheck);\n\n        // Transitions used if the DnD can be cancelled by releasing the touch on a dwell spring element\n        if (this.cancellable) {\n            new TouchTransition(this.moved, released, \"touchend\",\n                (event: TouchEvent): void => {\n                    this.dataHandler?.onRelease(event);\n                },\n                (event: TouchEvent): boolean => {\n                /*\n                 * Touch event behaviour is not consistent with mouse events: event.tgt.target points to the original element, not to the one\n                 * currently targeted. So we have to retrieve the current target manually.\n                 */\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const touch = event.changedTouches[0]!;\n                    const tgt = document.elementFromPoint(touch.clientX, touch.clientY);\n                    return touch.identifier === this.touchID &&\n                    (!(tgt instanceof Element) || !tgt.classList.contains(\"ioDwellSpring\"));\n                });\n\n            new TouchTransition(this.moved, this.cancelled, \"touchend\", undefined,\n                (ev: TouchEvent): boolean => {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const touch = ev.changedTouches[0]!;\n                    const tgt = document.elementFromPoint(touch.clientX, touch.clientY);\n                    return touch.identifier === this.touchID && tgt instanceof Element && tgt.classList.contains(\"ioDwellSpring\");\n                });\n        } else {\n            new TouchTransition(this.moved, released, \"touchend\",\n                (event: TouchEvent): void => {\n                    this.dataHandler?.onRelease(event);\n                },\n                (event: TouchEvent): boolean => event.changedTouches[0]?.identifier === this.touchID);\n        }\n    }\n\n    public getTouchId(): number | undefined {\n        return this.touchID;\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.touchID = undefined;\n    }\n}\n\n/**\n * The FSM of the one touch DnD interaction\n * @category FSM\n */\nexport class OneTouchDnDFSM extends TouchDnDFSM {\n    /**\n     * Creates a DnD touch FSM that only works with one touch.\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(cancellable: boolean, logger: Logger, dataHandler: TouchDnDFSMHandler) {\n        super(cancellable, logger, dataHandler, true);\n    }\n\n    protected override buildFSM(): void {\n        super.buildFSM();\n\n        const check = (event: TouchEvent): boolean => event.changedTouches[0] !== undefined && event.changedTouches[0].identifier !== this.touchID;\n\n        new TouchTransition(this.moved, this.cancelled, \"touchstart\", undefined, check);\n        new TouchTransition(this.touched, this.cancelled, \"touchstart\", undefined, check);\n    }\n}\n\n/**\n * The data handler for the touch DnD interaction\n * @category Helper\n */\nexport interface TouchDnDFSMHandler extends FSMDataHandler {\n    /**\n     * On a touch\n     * @param event - The event to process.\n     */\n    onTouch(event: TouchEvent): void;\n\n    /**\n     * On a move\n     * @param event - The event to process.\n     */\n    onMove(event: TouchEvent): void;\n\n    /**\n     * On a release\n     * @param event - The event to process.\n     */\n    onRelease(event: TouchEvent): void;\n}\n\n/**\n * A touch interaction (that works as a DnD)\n * @category Interaction Library\n */\nexport class TouchDnD extends InteractionBase<SrcTgtPointsData<TouchData>, SrcTgtTouchDataImpl, OneTouchDnDFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n     * @param fsm - The optional FSM provided for the interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, cancellable: boolean, fsm?: OneTouchDnDFSM, name?: string) {\n        const handler: TouchDnDFSMHandler = {\n            \"onTouch\": (evt: TouchEvent): void => {\n                if (evt.changedTouches[0] !== undefined) {\n                    const touch: Touch = evt.changedTouches[0];\n                    const all = Array.from(evt.touches);\n                    this._data.copySrc(touch, evt, all);\n                    this._data.copyTgt(touch, evt, all);\n                }\n            },\n            \"onMove\": (evt: TouchEvent): void => {\n                this.setTgtData(evt);\n            },\n            \"onRelease\": (evt: TouchEvent): void => {\n                this.setTgtData(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(fsm ?? new OneTouchDnDFSM(cancellable, logger, handler), new SrcTgtTouchDataImpl(), logger, name ?? TouchDnD.name);\n    }\n\n    private setTgtData(evt: TouchEvent): void {\n        const touch: Touch | undefined = getTouch(evt.changedTouches, this.data.src.identifier);\n        if (touch !== undefined) {\n            this._data.copyTgt(touch, evt, Array.from(evt.touches));\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"./FSMImpl\";\nimport type {FSMDataHandler} from \"./FSMDataHandler\";\nimport type {ConcurrentFSM} from \"../../api/fsm/ConcurrentFSM\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {FSMHandler} from \"../../api/fsm/FSMHandler\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\nimport type {Logger} from \"../../api/logging/Logger\";\n\n/**\n * A concurrent FSM: an FSM that contains multiple FSMs that run concurrently.\n * Using this FSM all the sub FSMs must have started to start the main FSM:\n * this is a AND concurrent FSM as all the sub FSMs must run.\n * This FSM can have secondary FSMs that are optionals, i.e. not mandatory for the main\n * FSM to start.\n * @category FSM\n */\nexport class ConcurrentAndFSM<F extends FSM, T extends FSMDataHandler> extends FSMImpl<T> implements ConcurrentFSM<F> {\n    /**\n     * The main fsms\n     */\n    private readonly _conccurFSMs: ReadonlyArray<F>;\n\n    /**\n     * Secondary fsms. These fsms are not considered to determine whether the interaction has started\n     */\n    private readonly _secondaryFSMs: ReadonlyArray<F>;\n\n    private readonly totalReinit: boolean;\n\n    /**\n     * Creates the FSM\n     * @param fsms - The main concurrent FSMs\n     * @param logger - The logger to use\n     * @param secondaries - The secondary FSMs. Not considered in some steps.\n     * @param totalReinit - Defines whether a cancellation of one of the fsms, reinits all the fsms.\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(fsms: ReadonlyArray<F>, logger: Logger, secondaries: ReadonlyArray<F> = [],\n                       totalReinit = false, dataHandler?: T) {\n        super(logger, dataHandler);\n\n        this.totalReinit = totalReinit;\n\n        const handler: FSMHandler = {\n            \"fsmStarts\": (): void => {\n                if (this.started) {\n                    this.onStarting();\n                }\n            },\n            \"fsmUpdates\": (): void => {\n                this.onUpdating();\n            },\n            \"fsmStops\": (): void => {\n                this.onTerminating();\n            },\n            \"fsmCancels\": (): void => {\n                this.onCancelling();\n            },\n            \"fsmError\": (err: unknown): void => {\n                this.notifyHandlerOnError(err);\n            }\n        };\n        this._conccurFSMs = Array.from(fsms);\n        this._secondaryFSMs = Array.from(secondaries);\n        for (const fsm of this.conccurFSMs) {\n            fsm.addHandler(handler);\n        }\n    }\n\n    public getAllConccurFSMs(): ReadonlyArray<F> {\n        return [...this._conccurFSMs, ...this._secondaryFSMs];\n    }\n\n    /**\n     * @returns The main FSMs\n     */\n    public get conccurFSMs(): ReadonlyArray<F> {\n        return Array.from(this._conccurFSMs);\n    }\n\n    /**\n     * @returns The secondary FSMs\n     */\n    public get secondaryFSMs(): ReadonlyArray<FSM> {\n        return Array.from(this._secondaryFSMs);\n    }\n\n    public override process(event: Event): boolean {\n        return this.getAllConccurFSMs().some(conccurFSM => conccurFSM.process(event));\n    }\n\n    public override acceptVisitor(visitor: VisitorFSM): void {\n        visitor.visitAndConcurrentFSM(this);\n    }\n\n    public override get started(): boolean {\n        return this.conccurFSMs.every(fsm => fsm.started);\n    }\n\n    // eslint-disable-next-line accessor-pairs\n    public override set log(log: boolean) {\n        super.log = log;\n        for (const fsm of this.conccurFSMs) {\n            fsm.log = log;\n        }\n        for (const fsm of this.secondaryFSMs) {\n            fsm.log = log;\n        }\n    }\n\n    public override uninstall(): void {\n        super.uninstall();\n        for (const fsm of this.conccurFSMs) {\n            fsm.uninstall();\n        }\n        for (const fsm of this.secondaryFSMs) {\n            fsm.uninstall();\n        }\n    }\n\n    public override fullReinit(): void {\n        if (this.totalReinit) {\n            for (const fsm of this.conccurFSMs) {\n                fsm.fullReinit();\n            }\n            for (const fsm of this.secondaryFSMs) {\n                fsm.fullReinit();\n            }\n        }\n        super.fullReinit();\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {InteractionBase} from \"./InteractionBase\";\nimport type {Flushable} from \"./Flushable\";\nimport type {ConcurrentFSM} from \"../../api/fsm/ConcurrentFSM\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {Subscription} from \"rxjs/internal/Subscription\";\n\n/**\n * The base implementation of a user interaction that uses concurrent FSMs.\n * @typeParam D - The type of the interaction data.\n * @typeParam F - The type of the FSM.\n * @category Interaction\n */\nexport abstract class ConcurrentInteraction<D extends InteractionData, DImpl extends D & Flushable, F extends ConcurrentFSM<FSM>>\n    extends InteractionBase<D, DImpl, F> {\n    private readonly subscriptions: Array<Subscription>;\n\n    /**\n     * Creates the concurrent interaction.\n     * @param fsm - The concurrent FSM that defines the behavior of the user interaction.\n     * @param data - The interaction data.\n     * @param logger - The logger to use for this interaction\n     * @param name - The real name of the interaction\n     */\n    protected constructor(fsm: F, data: DImpl, logger: Logger, name: string) {\n        super(fsm, data, logger, name);\n        this.subscriptions = this.fsm.getAllConccurFSMs()\n            .map(conc => conc.currentStateObservable\n                .subscribe(current => {\n                    this.updateEventsRegistered(current[1], current[0]);\n                }));\n    }\n\n    public override isRunning(): boolean {\n        return this.isActivated() && this.fsm.started;\n    }\n\n    public override onNodeUnregistered(node: EventTarget): void {\n        for (const type of this.getCurrentAcceptedEvents()) {\n            this.unregisterEventToNode(type, node);\n        }\n    }\n\n    public override onNewNodeRegistered(node: EventTarget): void {\n        for (const type of this.getCurrentAcceptedEvents()) {\n            this.registerEventToNode(type, node);\n        }\n    }\n\n    public override getCurrentAcceptedEvents(_state?: OutputState): ReadonlyArray<EventType> {\n        return this.fsm.getAllConccurFSMs().flatMap(concFSM => Array.from(this.getEventTypesOf(concFSM.currentState)));\n    }\n\n    public override uninstall(): void {\n        super.uninstall();\n        for (const sub of this.subscriptions) {\n            sub.unsubscribe();\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {Flushable} from \"./Flushable\";\nimport type {SrcTgtTouchDataImpl} from \"./SrcTgtTouchDataImpl\";\nimport type {MultiTouchData} from \"../../api/interaction/MultiTouchData\";\nimport type {SrcTgtPointsData} from \"../../api/interaction/SrcTgtPointsData\";\nimport type {TouchData} from \"../../api/interaction/TouchData\";\n\n/**\n * Base class for multi-touch data.\n * @category Interaction Data\n */\nexport abstract class MultiTouchDataBase implements MultiTouchData {\n    public readonly abstract touches: ReadonlyArray<SrcTgtPointsData<TouchData>>;\n\n    public velocity(direction: \"all\" | \"horiz\" | \"vert\"): number {\n        return this.touches.reduce((sum, touch) => sum + touch.velocity(direction), 0) / this.touches.length;\n    }\n}\n\n/**\n * Multi-touch interaction data implementation\n * @category Interaction Data\n */\nexport class MultiTouchDataImpl extends MultiTouchDataBase implements Flushable {\n    protected readonly touchesData: Map<number, SrcTgtTouchDataImpl>;\n\n    /**\n     * Creates the interaction data\n     */\n    public constructor() {\n        super();\n        this.touchesData = new Map<number, SrcTgtTouchDataImpl>();\n    }\n\n    public get touches(): ReadonlyArray<SrcTgtPointsData<TouchData>> {\n        return Array.from(this.touchesData.values());\n    }\n\n    /**\n     * Adds a touch data to this multi-touch data\n     * @param data - The touch data to add\n     */\n    public addTouchData(data: SrcTgtTouchDataImpl): void {\n        this.touchesData.set(data.src.identifier, data);\n    }\n\n    public removeTouchData(id: number): void {\n        const tdata = this.touchesData.get(id);\n        if (tdata !== undefined) {\n            this.touchesData.delete(id);\n            tdata.flush();\n        }\n    }\n\n    public flush(): void {\n        for (const data of this.touchesData.values()) {\n            data.flush();\n        }\n        this.touchesData.clear();\n    }\n\n    /**\n     * Sets new value for the given touch point.\n     * The identifier of the given event point is used to find the corresponding\n     * touch data.\n     * @param tp - The touch event data to use.\n     * @param evt - The touch event\n     */\n    public setTouch(tp: Touch, evt: TouchEvent): void {\n        const tdata = this.touchesData.get(tp.identifier);\n        if (tdata !== undefined) {\n            tdata.copyTgt(tp, evt, Array.from(evt.touches));\n        }\n    }\n\n    /**\n     * @param pxTolerance - The pixel tolerance for considering the line horizontal.\n     * @returns True if the line of each touch is relatively horizontal and in the same direction.\n     */\n    public isHorizontal(pxTolerance: number): boolean {\n        // Direction of the touches, every touch must go in the same direction\n        let direction = 0;\n\n        for (const touch of this.touchesData) {\n            // Initial touch decides the direction for this interaction, either -1 or 1\n            if (direction === 0) {\n                direction = touch[1].diffScreenX / Math.abs(touch[1].diffScreenX);\n            }\n            if (!touch[1].isHorizontal(pxTolerance) || (touch[1].diffScreenX / Math.abs(touch[1].diffScreenX) !== direction)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @param pxTolerance - The pixel tolerance for considering the lines vertical.\n     * @returns True if the line of each touch is relatively vertical and in the same direction.\n     */\n    public isVertical(pxTolerance: number): boolean {\n        // Direction of the touches, every touch must go in the same direction\n        let direction = 0;\n\n        for (const touch of this.touchesData) {\n            // Initial touch decides the direction for this interaction, either -1 or 1\n            if (direction === 0) {\n                direction = touch[1].diffScreenY / Math.abs(touch[1].diffScreenY);\n            }\n            if (!touch[1].isVertical(pxTolerance) || (touch[1].diffScreenY / Math.abs(touch[1].diffScreenY) !== direction)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TouchDnDFSM} from \"./TouchDnD\";\nimport {ConcurrentAndFSM} from \"../../fsm/ConcurrentAndFSM\";\nimport {ConcurrentInteraction} from \"../ConcurrentInteraction\";\nimport {MultiTouchDataImpl} from \"../MultiTouchDataImpl\";\nimport {SrcTgtTouchDataImpl} from \"../SrcTgtTouchDataImpl\";\nimport type {TouchDnDFSMHandler} from \"./TouchDnD\";\nimport type {MultiTouchData} from \"../../../api/interaction/MultiTouchData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\n\n/**\n * The FSM that defines a multi-touch interaction (that works like a DnD)\n * @category FSM\n */\nexport class MultiTouchFSM extends ConcurrentAndFSM<TouchDnDFSM, TouchDnDFSMHandler> {\n    /**\n     * Creates the FSM.\n     * @param nbTouch - The number of touches of the interaction\n     * @param totalReinit - Defines whether a cancellation of one of the fsms, reinits all the fsms.\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     * @param movementRequired - Whether the DnD starts after the touch point has begun moving (default)\n     * or as soon as the screen is touched. The latter is used for the MultiTouch interaction.\n     */\n    public constructor(nbTouch: number, totalReinit: boolean, logger: Logger, dataHandler: TouchDnDFSMHandler, movementRequired = false) {\n        super(Array.from(Array.from({\"length\": nbTouch}).keys(), () => new TouchDnDFSM(false, logger, dataHandler, movementRequired)),\n            logger, totalReinit ? [new TouchDnDFSM(false, logger, dataHandler, movementRequired)] : [], totalReinit, dataHandler);\n    }\n\n    public override process(event: Event): boolean {\n        if (!(event instanceof TouchEvent)) {\n            return false;\n        }\n\n        let processed = false;\n        let res = false;\n\n        // checking lost touch event\n        if (event.type === \"touchstart\") {\n            const ids = new Set(Array.from(event.touches, touch => touch.identifier));\n            const losts = this.conccurFSMs.filter(fsm => {\n                const id = fsm.getTouchId();\n                return id !== undefined && !ids.has(id);\n            });\n            for (const lost of losts) {\n                lost.reinit();\n            }\n        }\n\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < event.changedTouches.length; i++) {\n            // Finding an FSM that is currently running with this ID\n            const first: TouchDnDFSM | undefined = this.conccurFSMs\n                .find(fsm => fsm.getTouchId() !== undefined && fsm.getTouchId() === event.changedTouches[i]?.identifier);\n\n            if (first === undefined) {\n                /*\n                 * If no FSM found, two meanings:\n                 * 1/ the touch event is unexpected since all the FSMs are running, so cancelling\n                 */\n                const remainingFSM = this.conccurFSMs.find(fsm => fsm.getTouchId() === undefined);\n                if (remainingFSM === undefined) {\n                    this.onCancelling();\n                    res = false;\n                } else {\n                    // 2/ There exists an FSM that is free to process the new touch\n                    res = remainingFSM.process(event) || res;\n                }\n            } else {\n                processed = true;\n                res = first.process(event) || res;\n            }\n        }\n\n        return processed && res;\n    }\n}\n\n/**\n * A multi-touch user interaction.\n * A multi-touch starts when all its touches have started.\n * A multi-touch ends when the number of required touches is greater than the number of touches.\n * @category Interaction\n */\nexport class MultiTouch extends ConcurrentInteraction<MultiTouchData, MultiTouchDataImpl, MultiTouchFSM> {\n    /**\n     * Creates the multi-touch interaction\n     * @param nbTouches - The number of touches.\n     * @param strict - Defines whether too many touches than expected cancelled the ongoing interaction\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     * @category Interaction Library\n     */\n    public constructor(nbTouches: number, strict: boolean, logger: Logger, name?: string) {\n        const handler: TouchDnDFSMHandler = {\n            \"onTouch\": (event: TouchEvent): void => {\n                const all = Array.from(event.touches);\n                for (const touch of Array.from(event.changedTouches)) {\n                    const data = new SrcTgtTouchDataImpl();\n                    data.copySrc(touch, event, all);\n                    data.copyTgt(touch, event, all);\n                    this._data.addTouchData(data);\n                }\n            },\n            \"onMove\": (event: TouchEvent): void => {\n                for (const touch of Array.from(event.changedTouches)) {\n                    this._data.setTouch(touch, event);\n                }\n            },\n\n            \"onRelease\": (event: TouchEvent): void => {\n                for (const touch of Array.from(event.changedTouches)) {\n                    this._data.setTouch(touch, event);\n                }\n            },\n\n            \"reinitData\": (): void => {\n                const currentIDs = new Set(this.fsm.conccurFSMs\n                    .filter(fsm => fsm.started)\n                    .map(fsm => fsm.getTouchId()));\n\n                this.data\n                    .touches\n                    .filter(data => !currentIDs.has(data.src.identifier))\n                    // eslint-disable-next-line unicorn/no-array-for-each\n                    .forEach(data => {\n                        (this.data as MultiTouchDataImpl).removeTouchData(data.src.identifier);\n                    });\n            }\n        };\n\n        super(new MultiTouchFSM(nbTouches, strict, logger, handler), new MultiTouchDataImpl(), logger, name ?? MultiTouch.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CancelFSMError} from \"../fsm/CancelFSMError\";\nimport type {Interaction, InteractionDataType} from \"../../api/interaction/Interaction\";\nimport type {InteractionBuilder} from \"../../api/interaction/InteractionBuilder\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\n\n/**\n * An implementation of `InteractionBuilder`.\n * @category Interaction\n */\nexport class InteractionBuilderImpl<I extends Interaction<D>, D extends InteractionData = InteractionDataType<I>>\nimplements InteractionBuilder<I, D> {\n    private readonly iCtor: (name?: string) => I;\n\n    private startPredicate: ((i: D) => boolean) | undefined;\n\n    private thenPredicate: ((i: D) => boolean) | undefined;\n\n    private endPredicate: ((i: D) => boolean) | undefined;\n\n    private interactionName: string | undefined;\n\n    /**\n     * @param interactionSupplier - The command that provides an instance of the\n     * user interaction to customize.\n     */\n    public constructor(interactionSupplier: (name?: string) => I) {\n        this.iCtor = interactionSupplier;\n        this.startPredicate = undefined;\n        this.thenPredicate = undefined;\n        this.endPredicate = undefined;\n        this.interactionName = undefined;\n    }\n\n    public first(predicate: (i: D) => boolean): this {\n        this.startPredicate = predicate;\n        return this;\n    }\n\n    public then(predicate: (i: D) => boolean): this {\n        this.thenPredicate = predicate;\n        return this;\n    }\n\n    public firstAndThen(predicate: (i: D) => boolean): this {\n        this.first(predicate);\n        this.then(predicate);\n        return this;\n    }\n\n    public end(predicate: (i: D) => boolean): this {\n        this.endPredicate = predicate;\n        return this;\n    }\n\n    public name(name: string): this {\n        this.interactionName = name;\n        return this;\n    }\n\n    public build(): () => I {\n        return () => {\n            const i = this.iCtor(this.interactionName);\n            i.fsm.addHandler({\n                \"preFsmStart\": () => {\n                    this.process(i, this.startPredicate);\n                },\n                \"preFsmUpdate\": () => {\n                    this.process(i, this.thenPredicate);\n                },\n                \"preFsmStop\": () => {\n                    this.process(i, this.endPredicate);\n                }\n            });\n            return i;\n        };\n    }\n\n    private process(i: I, predicate?: (i: D) => boolean): void {\n        if (predicate !== undefined && !predicate(i.data)) {\n            throw new CancelFSMError();\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TouchDnD} from \"./TouchDnD\";\nimport {InteractionBuilderImpl} from \"../InteractionBuilderImpl\";\nimport type {Logger} from \"../../../api/logging/Logger\";\n\n/**\n * Creates the horizontal pan (or a swipe if minVelocity is used).\n * @param logger - The logger to use for this interaction\n * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n * @param pxTolerance - The pixel tolerance for considering the line horizontal.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function hPan(logger: Logger, cancellable: boolean,\n                     pxTolerance: number, minLength?: number, minVelocity?: number): () => TouchDnD {\n    return new InteractionBuilderImpl(name => new TouchDnD(logger, cancellable, undefined, name))\n        .firstAndThen(data => data.isHorizontal(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenX) >= minLength) &&\n            (minVelocity === undefined || data.velocity(\"horiz\") >= minVelocity))\n        .name(hPan.name)\n        .build();\n}\n\n/**\n * Creates the vertical pan (or a swipe if minVelocity is used).\n * @param logger - The logger to use for this interaction\n * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n * @param pxTolerance - The pixel tolerance for considering the line vertical.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function vPan(logger: Logger, cancellable: boolean,\n                     pxTolerance: number, minLength?: number, minVelocity?: number): () => TouchDnD {\n    return new InteractionBuilderImpl(name => new TouchDnD(logger, cancellable, undefined, name))\n        .firstAndThen(data => data.isVertical(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenY) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"vert\") >= minVelocity))\n        .name(vPan.name)\n        .build();\n}\n\n/**\n * Creates a left pan (or a swipe if minVelocity is used).\n * @param logger - The logger to use for this interaction\n * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n * @param pxTolerance - The pixel tolerance for considering the line to the left.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function leftPan(logger: Logger, cancellable: boolean,\n                        pxTolerance: number, minLength?: number, minVelocity?: number): () => TouchDnD {\n    return new InteractionBuilderImpl(name => new TouchDnD(logger, cancellable, undefined, name))\n        .firstAndThen(data => data.isLeft(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenX) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"horiz\") >= minVelocity))\n        .name(leftPan.name)\n        .build();\n}\n\n/**\n * Creates a right pan (or a swipe if minVelocity is used).\n * @param logger - The logger to use for this interaction\n * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n * @param pxTolerance - The pixel tolerance for considering the line to the right.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function rightPan(logger: Logger, cancellable: boolean,\n                         pxTolerance: number, minLength?: number, minVelocity?: number): () => TouchDnD {\n    return new InteractionBuilderImpl(name => new TouchDnD(logger, cancellable, undefined, name))\n        .firstAndThen(data => data.isRight(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenX) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"horiz\") >= minVelocity))\n        .name(rightPan.name)\n        .build();\n}\n\n/**\n * Creates a top pan (or a swipe if minVelocity is used).\n * @param logger - The logger to use for this interaction\n * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n * @param pxTolerance - The pixel tolerance for considering the line to the top.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function topPan(logger: Logger, cancellable: boolean,\n                       pxTolerance: number, minLength?: number, minVelocity?: number): () => TouchDnD {\n    return new InteractionBuilderImpl(name => new TouchDnD(logger, cancellable, undefined, name))\n        .firstAndThen(data => data.isTop(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenY) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"vert\") >= minVelocity))\n        .name(topPan.name)\n        .build();\n}\n\n/**\n * Creates a bottom pan (or a swipe if minVelocity is used).\n * @param logger - The logger to use for this interaction\n * @param cancellable - Whether the DnD can be cancelled by interacting with a dwell-and-spring element.\n * @param pxTolerance - The pixel tolerance for considering the line to the bottom.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function bottomPan(logger: Logger, cancellable: boolean,\n                          pxTolerance: number, minLength?: number, minVelocity?: number): () => TouchDnD {\n    return new InteractionBuilderImpl(name => new TouchDnD(logger, cancellable, undefined, name))\n        .firstAndThen(data => data.isBottom(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenY) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"vert\") >= minVelocity))\n        .name(bottomPan.name)\n        .build();\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {MultiTouchDataBase} from \"./MultiTouchDataImpl\";\nimport {SrcTgtTouchDataImpl} from \"./SrcTgtTouchDataImpl\";\nimport type {EventModifierData} from \"../../api/interaction/EventModifierData\";\nimport type {SrcTgtPointsData} from \"../../api/interaction/SrcTgtPointsData\";\nimport type {TouchData} from \"../../api/interaction/TouchData\";\nimport type {TwoTouchData} from \"../../api/interaction/TwoTouchData\";\nimport type {UnitInteractionData} from \"../../api/interaction/UnitInteractionData\";\n\n/**\n * The implementation class of TwoTouchData\n * @category Interaction Data\n */\nexport abstract class TwoTouchDataImpl extends MultiTouchDataBase implements TwoTouchData {\n    protected readonly t1: SrcTgtTouchDataImpl;\n\n    protected readonly t2: SrcTgtTouchDataImpl;\n\n    protected constructor() {\n        super();\n        this.t1 = new SrcTgtTouchDataImpl();\n        this.t2 = new SrcTgtTouchDataImpl();\n    }\n\n    public get touch1(): SrcTgtPointsData<TouchData> {\n        return this.t1;\n    }\n\n    public get touch2(): SrcTgtPointsData<TouchData> {\n        return this.t2;\n    }\n\n    public get touches(): ReadonlyArray<SrcTgtPointsData<TouchData>> {\n        return [this.t1, this.t2];\n    }\n\n    public flush(): void {\n        this.t1.flush();\n        this.t2.flush();\n    }\n\n    public initTouch(data: Touch, evt: EventModifierData & UnitInteractionData, allTouches: Array<Touch>): void {\n        if (this.t1.src.identifier === -1) {\n            this.t1.copySrc(data, evt, allTouches);\n            this.t1.copyTgt(data, evt, allTouches);\n        } else {\n            if (this.t2.src.identifier === -1) {\n                this.t2.copySrc(data, evt, allTouches);\n                this.t2.copyTgt(data, evt, allTouches);\n            }\n        }\n    }\n\n    public copyTouch(data: Touch, evt: EventModifierData & UnitInteractionData, allTouches: Array<Touch>): void {\n        if (this.t1.src.identifier === data.identifier) {\n            this.t1.copyTgt(data, evt, allTouches);\n        } else {\n            if (this.t2.src.identifier === data.identifier) {\n                this.t2.copyTgt(data, evt, allTouches);\n            }\n        }\n    }\n\n    public get diffClientX(): number {\n        return (this.t1.diffClientX + this.t2.diffClientX) / 2;\n    }\n\n    public get diffClientY(): number {\n        return (this.t1.diffClientY + this.t2.diffClientY) / 2;\n    }\n\n    public get diffPageX(): number {\n        return (this.t1.diffPageX + this.t2.diffPageX) / 2;\n    }\n\n    public get diffPageY(): number {\n        return (this.t1.diffPageY + this.t2.diffPageY) / 2;\n    }\n\n    public get diffScreenX(): number {\n        return (this.t1.diffScreenX + this.t2.diffScreenX) / 2;\n    }\n\n    public get diffScreenY(): number {\n        return (this.t1.diffScreenY + this.t2.diffScreenY) / 2;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TwoTouchDataImpl} from \"./TwoTouchDataImpl\";\nimport type {RotationTouchData} from \"../../api/interaction/RotationTouchData\";\nimport type {TouchData} from \"../../api/interaction/TouchData\";\n\n/**\n * The implementation of the rotation interaction data.\n * @category Interaction Data\n */\nexport class RotationTouchDataImpl extends TwoTouchDataImpl implements RotationTouchData {\n    public constructor() {\n        super();\n    }\n\n    public get rotationAngle(): number {\n        return this.computeAngle(this.t1.src, this.t2.src) - this.computeAngle(this.t1.src, this.t2.tgt);\n    }\n\n    private computeAngle(t1: TouchData, t2: TouchData): number {\n        return Math.atan2(t2.clientX - t1.clientX, t1.clientY - t2.clientY);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TwoTouchDataImpl} from \"./TwoTouchDataImpl\";\nimport type {ScaleTouchData} from \"../../api/interaction/ScaleTouchData\";\n\n/**\n * The implementation of the scale/pinch interaction data.\n * @category Interaction Data\n */\nexport class ScaleTouchDataImpl extends TwoTouchDataImpl implements ScaleTouchData {\n    public constructor() {\n        super();\n    }\n\n    public scalingRatio(pxTolerance: number): number {\n        // 1. Check that there are 2 touches\n        const t0 = this.t1;\n        const t1 = this.t2;\n\n        if (t0.src.identifier === -1 || t1.src.identifier === -1) {\n            return 0;\n        }\n\n        const tgt1: [number, number] = [t0.tgt.screenX, t0.tgt.screenY];\n        const tgt2: [number, number] = [t1.tgt.screenX, t1.tgt.screenY];\n\n        const src1: [number, number] = [t0.src.screenX, t0.src.screenY];\n        const src2: [number, number] = [t1.src.screenX, t1.src.screenY];\n\n        const vector1: [number, number] = [t0.diffScreenX, t0.diffScreenY];\n        const vector2: [number, number] = [t1.diffScreenX, t1.diffScreenY];\n\n        // 2. Define the line between the 2 sources\n        const lineVector: [number, number] = [tgt2[0] - tgt1[0], tgt2[1] - tgt1[1]];\n\n        // 3. For each touch, define the projection of the target on the line\n        const projection1 = ScaleTouchDataImpl.project(vector1, lineVector);\n        const projectionVector1: [number, number] = [projection1 * lineVector[0], projection1 * lineVector[1]];\n\n        const projection2 = ScaleTouchDataImpl.project(vector2, lineVector);\n        const projectionVector2: [number, number] = [projection2 * lineVector[0], projection2 * lineVector[1]];\n\n        // 4. Check that the projections have opposite signs\n        if (projection1 / Math.abs(projection1) === projection2 / Math.abs(projection2)) {\n            return 0;\n        }\n\n        // 5. Calculate the distances between the targets and the projected points and check they are < pxTolerance\n        const distance1 = ScaleTouchDataImpl.distance(projectionVector1, vector1);\n        const distance2 = ScaleTouchDataImpl.distance(projectionVector2, vector2);\n\n        if (distance1 > pxTolerance || distance2 > pxTolerance || Number.isNaN(distance1) || Number.isNaN(distance2)) {\n            return 0;\n        }\n\n        /*\n         * 6. Calculate the ratio between the distance between the end position of the touches\n         * and the distance between the starting position of the touches\n         */\n        return ScaleTouchDataImpl.distance(tgt1, tgt2) / ScaleTouchDataImpl.distance(src1, src2);\n    }\n\n    /**\n     * @param vector1 - The first vector of the projection\n     * @param vector2 -The second vector of the projection\n     * @returns The value of the projection of vector1 on vector2\n     */\n    public static project(vector1: [number, number], vector2: [number, number]): number {\n        return (vector1[0] * vector2[0] + vector1[1] * vector2[1]) / (vector2[0] ** 2 + vector2[1] ** 2);\n    }\n\n    /**\n     * @param point1 - The first point\n     * @param point2 - The second point\n     * @returns the distance between point1 and point2\n     */\n    public static distance(point1: [number, number], point2: [number, number]): number {\n        return Math.hypot((point2[0] - point1[0]), (point2[1] - point1[1]));\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TwoTouchDataImpl} from \"./TwoTouchDataImpl\";\nimport type {LineTouchData} from \"../../api/interaction/LineTouchData\";\n\n/**\n * The user interaction data for two-touch pan interactions\n * @category Interaction Data\n */\nexport class TwoPanDataImpl extends TwoTouchDataImpl implements LineTouchData {\n    public constructor() {\n        super();\n    }\n\n    public isVertical(pxTolerance: number): boolean {\n        return this.isTop(pxTolerance) || this.isBottom(pxTolerance);\n    }\n\n    public isHorizontal(pxTolerance: number): boolean {\n        return this.isLeft(pxTolerance) || this.isRight(pxTolerance);\n    }\n\n    public isLeft(pxTolerance: number): boolean {\n        return this.t1.isLeft(pxTolerance) && this.t2.isLeft(pxTolerance);\n    }\n\n    public isRight(pxTolerance: number): boolean {\n        return this.t1.isRight(pxTolerance) && this.t2.isRight(pxTolerance);\n    }\n\n    public isTop(pxTolerance: number): boolean {\n        return this.t1.isTop(pxTolerance) && this.t2.isTop(pxTolerance);\n    }\n\n    public isBottom(pxTolerance: number): boolean {\n        return this.t1.isBottom(pxTolerance) && this.t2.isBottom(pxTolerance);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {RotationTouchDataImpl} from \"./RotationTouchDataImpl\";\nimport {ScaleTouchDataImpl} from \"./ScaleTouchDataImpl\";\nimport {TwoPanDataImpl} from \"./TwoPanDataImpl\";\nimport {TwoTouchDataImpl} from \"./TwoTouchDataImpl\";\nimport type {LineTouchData} from \"../../api/interaction/LineTouchData\";\nimport type {RotationTouchData} from \"../../api/interaction/RotationTouchData\";\nimport type {ScaleTouchData} from \"../../api/interaction/ScaleTouchData\";\nimport type {GeneralTwoTouchData} from \"../../api/interaction/TwoTouchData\";\n\n/**\n * The interaction data that stores all information related to two-touch based user\n * interactions.\n * @category Interaction Data\n */\nexport class GeneralTwoTouchDataImpl extends TwoTouchDataImpl implements GeneralTwoTouchData {\n    private readonly rotateData: RotationTouchData;\n\n    private readonly panData: LineTouchData;\n\n    private readonly scaleData: ScaleTouchData;\n\n    public constructor() {\n        super();\n        this.rotateData = new RotationTouchDataImpl();\n        this.panData = new TwoPanDataImpl();\n        this.scaleData = new ScaleTouchDataImpl();\n    }\n\n    public isVertical(pxTolerance: number): boolean {\n        return this.panData.isVertical(pxTolerance);\n    }\n\n    public isHorizontal(pxTolerance: number): boolean {\n        return this.panData.isHorizontal(pxTolerance);\n    }\n\n    public isLeft(pxTolerance: number): boolean {\n        return this.panData.isLeft(pxTolerance);\n    }\n\n    public isRight(pxTolerance: number): boolean {\n        return this.panData.isRight(pxTolerance);\n    }\n\n    public isTop(pxTolerance: number): boolean {\n        return this.panData.isTop(pxTolerance);\n    }\n\n    public isBottom(pxTolerance: number): boolean {\n        return this.panData.isBottom(pxTolerance);\n    }\n\n    public get rotationAngle(): number {\n        return this.rotateData.rotationAngle;\n    }\n\n    public scalingRatio(pxTolerance: number): number {\n        return this.scaleData.scalingRatio(pxTolerance);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {GeneralTwoTouchDataImpl} from \"./GeneralTwoTouchDataImpl\";\nimport {SrcTgtTouchDataImpl} from \"./SrcTgtTouchDataImpl\";\nimport type {EventModifierData} from \"../../api/interaction/EventModifierData\";\nimport type {SrcTgtPointsData} from \"../../api/interaction/SrcTgtPointsData\";\nimport type {ThreeTouchData} from \"../../api/interaction/ThreeTouchData\";\nimport type {TouchData} from \"../../api/interaction/TouchData\";\nimport type {UnitInteractionData} from \"../../api/interaction/UnitInteractionData\";\n\n/**\n * The user interaction data for three-touch interactions\n * @category Interaction Data\n */\nexport class ThreeTouchDataImpl extends GeneralTwoTouchDataImpl implements ThreeTouchData {\n    protected readonly t3: SrcTgtTouchDataImpl;\n\n    public constructor() {\n        super();\n        this.t3 = new SrcTgtTouchDataImpl();\n    }\n\n    public get touch3(): SrcTgtPointsData<TouchData> {\n        return this.t3;\n    }\n\n    public override flush(): void {\n        super.flush();\n        this.t3.flush();\n    }\n\n    public override initTouch(data: Touch, evt: EventModifierData & UnitInteractionData, allTouches: Array<Touch>): void {\n        // If only t3 is not initialised\n        if (this.t3.src.identifier === -1 && this.t2.src.identifier !== -1) {\n            this.t3.copySrc(data, evt, allTouches);\n            this.t3.copyTgt(data, evt, allTouches);\n        } else {\n            super.initTouch(data, evt, allTouches);\n        }\n    }\n\n    public override copyTouch(data: Touch, evt: EventModifierData & UnitInteractionData, allTouches: Array<Touch>): void {\n        if (this.t3.src.identifier === data.identifier) {\n            this.t3.copyTgt(data, evt, allTouches);\n        } else {\n            super.copyTouch(data, evt, allTouches);\n        }\n    }\n\n    public override isLeft(pxTolerance: number): boolean {\n        return super.isLeft(pxTolerance) && this.t3.isLeft(pxTolerance);\n    }\n\n    public override isRight(pxTolerance: number): boolean {\n        return super.isRight(pxTolerance) && this.t3.isRight(pxTolerance);\n    }\n\n    public override isTop(pxTolerance: number): boolean {\n        return super.isTop(pxTolerance) && this.t3.isTop(pxTolerance);\n    }\n\n    public override isBottom(pxTolerance: number): boolean {\n        return super.isBottom(pxTolerance) && this.t3.isBottom(pxTolerance);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {SrcTgtTouchDataImpl} from \"./SrcTgtTouchDataImpl\";\nimport {ThreeTouchDataImpl} from \"./ThreeTouchDataImpl\";\nimport type {EventModifierData} from \"../../api/interaction/EventModifierData\";\nimport type {FourTouchData} from \"../../api/interaction/FourTouchData\";\nimport type {SrcTgtPointsData} from \"../../api/interaction/SrcTgtPointsData\";\nimport type {TouchData} from \"../../api/interaction/TouchData\";\nimport type {UnitInteractionData} from \"../../api/interaction/UnitInteractionData\";\n\n/**\n * The interaction data for four-touch user interactions.\n * @category Interaction Data\n */\nexport class FourTouchDataImpl extends ThreeTouchDataImpl implements FourTouchData {\n    private readonly t4: SrcTgtTouchDataImpl;\n\n    public constructor() {\n        super();\n        this.t4 = new SrcTgtTouchDataImpl();\n    }\n\n    public get touch4(): SrcTgtPointsData<TouchData> {\n        return this.t4;\n    }\n\n    public override initTouch(data: Touch, evt: EventModifierData & UnitInteractionData, allTouches: Array<Touch>): void {\n        // If only t4 is not initialised\n        if (this.t4.src.identifier === -1 && this.t3.src.identifier !== -1) {\n            this.t4.copySrc(data, evt, allTouches);\n            this.t4.copyTgt(data, evt, allTouches);\n        } else {\n            super.initTouch(data, evt, allTouches);\n        }\n    }\n\n    public override copyTouch(data: Touch, evt: EventModifierData & UnitInteractionData, allTouches: Array<Touch>): void {\n        if (this.t4.src.identifier === data.identifier) {\n            this.t4.copyTgt(data, evt, allTouches);\n        } else {\n            super.copyTouch(data, evt, allTouches);\n        }\n    }\n\n    public override flush(): void {\n        super.flush();\n        this.t4.flush();\n    }\n\n    public override isLeft(pxTolerance: number): boolean {\n        return super.isLeft(pxTolerance) && this.t4.isLeft(pxTolerance);\n    }\n\n    public override isRight(pxTolerance: number): boolean {\n        return super.isRight(pxTolerance) && this.t4.isRight(pxTolerance);\n    }\n\n    public override isTop(pxTolerance: number): boolean {\n        return super.isTop(pxTolerance) && this.t4.isTop(pxTolerance);\n    }\n\n    public override isBottom(pxTolerance: number): boolean {\n        return super.isBottom(pxTolerance) && this.t4.isBottom(pxTolerance);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {MultiTouchFSM} from \"./MultiTouch\";\nimport {ConcurrentInteraction} from \"../ConcurrentInteraction\";\nimport {FourTouchDataImpl} from \"../FourTouchDataImpl\";\nimport {GeneralTwoTouchDataImpl} from \"../GeneralTwoTouchDataImpl\";\nimport {InteractionBuilderImpl} from \"../InteractionBuilderImpl\";\nimport {ThreeTouchDataImpl} from \"../ThreeTouchDataImpl\";\nimport type {TouchDnDFSMHandler} from \"./TouchDnD\";\nimport type {FourTouchData} from \"../../../api/interaction/FourTouchData\";\nimport type {ThreeTouchData} from \"../../../api/interaction/ThreeTouchData\";\nimport type {GeneralTwoTouchData, TwoTouchData} from \"../../../api/interaction/TwoTouchData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {TwoTouchDataImpl} from \"../TwoTouchDataImpl\";\n\n/**\n * The X-touch represents any touch interaction that involve more than one touch.\n * This class is usually used to build more complex touch interactions.\n * @category Interaction Library\n */\nexport class XTouchDnD<T extends TwoTouchData, S extends T & TwoTouchDataImpl> extends ConcurrentInteraction<T, S, MultiTouchFSM> {\n    /**\n     * Creates the interaction.\n     * @param nbTouches - The number of touches of the interaction\n     * @param logger - The logger to use for this interaction\n     * @param dataImpl - The interaction data instance to use.\n     * @param name - The name of the user interaction\n     * @param fsm - The optional FSM provided for the interaction\n     * @param movementRequired - Whether the DnD starts after the touch point has begun moving (default)\n     * or as soon as the screen is touched. The latter is used for the MultiTouch interaction.\n     */\n    public constructor(nbTouches: number, logger: Logger, dataImpl: S, name?: string, fsm?: MultiTouchFSM, movementRequired?: boolean) {\n        const handler: TouchDnDFSMHandler = {\n            \"onTouch\": (evt: TouchEvent): void => {\n                const all = Array.from(evt.touches);\n                for (const touch of Array.from(evt.changedTouches)) {\n                    this._data.initTouch(touch, evt, all);\n                }\n            },\n            \"onMove\": (evt: TouchEvent): void => {\n                this.setTgtData(evt);\n            },\n            \"onRelease\": (evt: TouchEvent): void => {\n                this.setTgtData(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(fsm ?? new MultiTouchFSM(nbTouches, true, logger, handler, movementRequired), dataImpl, logger, name ?? XTouchDnD.name);\n    }\n\n    protected setTgtData(evt: TouchEvent): void {\n        const all = Array.from(evt.touches);\n        for (const touch of Array.from(evt.changedTouches)) {\n            this._data.copyTouch(touch, evt, all);\n        }\n    }\n}\n\n/**\n * A shortcut that defines a two-touch interactions.\n * @category Interaction Library\n */\nexport type TwoTouch = XTouchDnD<GeneralTwoTouchData, GeneralTwoTouchDataImpl>;\n\n/**\n * Creates a two-touch user interaction\n * @param logger - The logger to use for this interaction\n * @returns A supplier that produces an interaction instance when called\n * @category Interaction Library\n */\nexport function twoTouch(logger: Logger): () => TwoTouch {\n    return new InteractionBuilderImpl(name => new XTouchDnD<GeneralTwoTouchData, GeneralTwoTouchDataImpl>(2, logger,\n        new GeneralTwoTouchDataImpl(), name, undefined, false))\n        .name(twoTouch.name)\n        .build();\n}\n\n/**\n * A touch interaction that involves three touches exactly.\n * @category Interaction Library\n */\nexport class ThreeTouchDnD extends XTouchDnD<ThreeTouchData, ThreeTouchDataImpl> {\n    public constructor(logger: Logger, name?: string, movementRequired?: boolean) {\n        super(3, logger, new ThreeTouchDataImpl(), name ?? ThreeTouchDnD.name, undefined, movementRequired);\n    }\n}\n\n/**\n * A touch interaction that involves four touches exactly.\n * @category Interaction Library\n */\nexport class FourTouchDnD extends XTouchDnD<FourTouchData, FourTouchDataImpl> {\n    public constructor(logger: Logger, name?: string, movementRequired?: boolean) {\n        super(4, logger, new FourTouchDataImpl(), name ?? FourTouchDnD.name, undefined, movementRequired);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {XTouchDnD} from \"./XTouch\";\nimport {InteractionBuilderImpl} from \"../InteractionBuilderImpl\";\nimport {TwoPanDataImpl} from \"../TwoPanDataImpl\";\nimport type {LineTouchData} from \"../../../api/interaction/LineTouchData\";\nimport type {TwoTouchData} from \"../../../api/interaction/TwoTouchData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\n\n/**\n * A type for two-touch pan user interactions\n * @category Interaction Library\n */\nexport type TwoPan = XTouchDnD<LineTouchData & TwoTouchData, TwoPanDataImpl>;\n\n/**\n * Creates the horizontal pan that uses two touches.\n * @param logger - The logger to use for this interaction\n * @param pxTolerance - The pixel tolerance for considering the line horizontal.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function twoHPan(logger: Logger, pxTolerance: number, minLength?: number, minVelocity?: number): () => TwoPan {\n    return new InteractionBuilderImpl(name => new XTouchDnD<LineTouchData & TwoTouchData, TwoPanDataImpl>(2, logger,\n        new TwoPanDataImpl(), name, undefined, true))\n        .firstAndThen(data => data.isHorizontal(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenX) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"horiz\") >= minVelocity))\n        .name(twoHPan.name)\n        .build();\n}\n\n/**\n * Creates the vertical pan that uses two touches.\n * @param logger - The logger to use for this interaction\n * @param pxTolerance - The pixel tolerance for considering the line vertical.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function twoVPan(logger: Logger, pxTolerance: number, minLength?: number, minVelocity?: number): () => TwoPan {\n    return new InteractionBuilderImpl(name => new XTouchDnD<LineTouchData & TwoTouchData, TwoPanDataImpl>(2, logger,\n        new TwoPanDataImpl(), name, undefined, true))\n        .firstAndThen(data => data.isVertical(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenY) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"horiz\") >= minVelocity))\n        .name(twoVPan.name)\n        .build();\n}\n\n/**\n * Creates a left pan that uses two touches.\n * @param logger - The logger to use for this interaction\n * @param pxTolerance - The pixel tolerance for considering the line to the left.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function twoLeftPan(logger: Logger, pxTolerance: number, minLength?: number, minVelocity?: number): () => TwoPan {\n    return new InteractionBuilderImpl(name => new XTouchDnD<LineTouchData & TwoTouchData, TwoPanDataImpl>(2, logger,\n        new TwoPanDataImpl(), name, undefined, true))\n        .firstAndThen(data => data.isLeft(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenX) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"horiz\") >= minVelocity))\n        .name(twoLeftPan.name)\n        .build();\n}\n\n/**\n * Creates a right pan that uses two touches.\n * @param logger - The logger to use for this interaction\n * @param pxTolerance - The pixel tolerance for considering the line to the right.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function twoRightPan(logger: Logger, pxTolerance: number, minLength?: number, minVelocity?: number): () => TwoPan {\n    return new InteractionBuilderImpl(name => new XTouchDnD<LineTouchData & TwoTouchData, TwoPanDataImpl>(2, logger,\n        new TwoPanDataImpl(), name, undefined, true))\n        .firstAndThen(data => data.isRight(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenX) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"horiz\") >= minVelocity))\n        .name(twoRightPan.name)\n        .build();\n}\n\n/**\n * Creates a top pan that uses two touches.\n * @param logger - The logger to use for this interaction\n * @param pxTolerance - The pixel tolerance for considering the line to the top.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function twoTopPan(logger: Logger, pxTolerance: number, minLength?: number, minVelocity?: number): () => TwoPan {\n    return new InteractionBuilderImpl(name => new XTouchDnD<LineTouchData & TwoTouchData, TwoPanDataImpl>(2, logger,\n        new TwoPanDataImpl(), name, undefined, true))\n        .firstAndThen(data => data.isTop(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenY) >= minLength) &&\n                    (minVelocity === undefined || data.velocity(\"horiz\") >= minVelocity))\n        .name(twoTopPan.name)\n        .build();\n}\n\n/**\n * Creates a bottom pan that uses two touches.\n * @param logger - The logger to use for this interaction\n * @param pxTolerance - The pixel tolerance for considering the line to the bottom.\n * @param minLength - The minimal distance from the starting point to the release point for validating the pan\n * @param minVelocity - The minimal minVelocity to reach for validating the swipe. In pixels per second.\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function twoBottomPan(logger: Logger, pxTolerance: number, minLength?: number, minVelocity?: number): () => TwoPan {\n    return new InteractionBuilderImpl(name => new XTouchDnD<LineTouchData & TwoTouchData, TwoPanDataImpl>(2, logger,\n        new TwoPanDataImpl(), name, undefined, true))\n        .firstAndThen(data => data.isBottom(pxTolerance))\n        .end(data => (minLength === undefined || Math.abs(data.diffScreenY) >= minLength) &&\n            (minVelocity === undefined || data.velocity(\"horiz\") >= minVelocity))\n        .name(twoBottomPan.name)\n        .build();\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {Click} from \"../interaction/library/Click\";\nimport {Clicks} from \"../interaction/library/Clicks\";\nimport {DoubleClick} from \"../interaction/library/DoubleClick\";\nimport {DragLock} from \"../interaction/library/DragLock\";\nimport {KeyDown} from \"../interaction/library/KeyDown\";\nimport {KeysTyped} from \"../interaction/library/KeysTyped\";\nimport {KeyTyped} from \"../interaction/library/KeyTyped\";\nimport {KeyUp} from \"../interaction/library/KeyUp\";\nimport {LongMouseDown} from \"../interaction/library/LongMouseDown\";\nimport {MouseDown} from \"../interaction/library/MouseDown\";\nimport {MouseUp} from \"../interaction/library/MouseUp\";\nimport {MultiTouch} from \"../interaction/library/MultiTouch\";\nimport {leftPan, rightPan, vPan, hPan, topPan, bottomPan} from \"../interaction/library/Pans\";\nimport {TouchDnD} from \"../interaction/library/TouchDnD\";\nimport {twoBottomPan, twoHPan, twoLeftPan, twoRightPan, twoTopPan, twoVPan} from \"../interaction/library/TwoPans\";\nimport type {Binding} from \"../../api/binding/Binding\";\nimport type {Checker, LinterRule, RuleName, Severity} from \"../../api/checker/Checker\";\nimport type {Command} from \"../../api/command/Command\";\nimport type {Interaction} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\n\n/**\n * An implementation of the Checker API\n * @category Checker\n */\nexport class CheckerImpl implements Checker {\n    private readonly linterRules: Map<RuleName, Severity>;\n\n    private readonly cacheIncluded: Map<string, Set<string>>;\n\n    public constructor() {\n        this.linterRules = new Map();\n        this.linterRules.set(\"same-interactions\", \"ignore\");\n        this.linterRules.set(\"same-data\", \"ignore\");\n        this.linterRules.set(\"included\", \"ignore\");\n        this.cacheIncluded = new Map();\n    }\n\n    public setLinterRules(...rules: ReadonlyArray<LinterRule>): void {\n        for (const rule of rules) {\n            this.linterRules.set(rule[0], rule[1]);\n        }\n        if (this.getIncludedSeverity() !== \"ignore\") {\n            this.fillCacheIncluded();\n        }\n    }\n\n    public checkRules(binding: Binding<Command, Interaction<InteractionData>, unknown>,\n                      binds: ReadonlyArray<Binding<Command, Interaction<InteractionData>, unknown>>): void {\n        this.checkSameData(binding, binds);\n        // Do not check same-interaction if already checked same-data with the same severity\n        if (this.getSameDataSeverity() !== this.getSameInteractionSeverity()) {\n            this.checkSameInteractions(binding, binds);\n        }\n        this.checkIncluded(binding, binds);\n    }\n\n    public checkSameInteractions(binding: Binding<Command, Interaction<InteractionData>, unknown>,\n                                 binds: ReadonlyArray<Binding<Command, Interaction<InteractionData>, unknown>>): void {\n        // support OR by splitting name with -\n        this.checkRule(\"same-interactions\", this.getSameInteractionSeverity(binding), binding, binds,\n            currBinding => binding.interaction.name === currBinding.interaction.name,\n            \"[same-interactions] Two bindings use the same user interaction on same widget.\");\n    }\n\n    public checkSameData(binding: Binding<Command, Interaction<InteractionData>, unknown>,\n                         binds: ReadonlyArray<Binding<Command, Interaction<InteractionData>, unknown>>): void {\n        this.checkRule(\"same-data\", this.getSameDataSeverity(binding), binding, binds,\n            currBinding => binding.interaction.data.constructor === currBinding.interaction.data.constructor,\n            \"[same-data] Two bindings use the same user interaction data type on same widget.\");\n    }\n\n    public checkIncluded(binding: Binding<Command, Interaction<InteractionData>, unknown>,\n                         binds: ReadonlyArray<Binding<Command, Interaction<InteractionData>, unknown>>): void {\n        // support OR\n        this.checkRule(\"included\", this.getIncludedSeverity(binding), binding, binds,\n            currBinding => this.isIncluded(binding.interaction.name, currBinding.interaction.name),\n            \"[included] The interaction of the first binding is included into the interaction of a second one.\");\n    }\n\n    private checkRule(ruleName: RuleName, severity: Severity,\n                      binding: Binding<Command, Interaction<InteractionData>, unknown>,\n                      binds: ReadonlyArray<Binding<Command, Interaction<InteractionData>, unknown>>,\n                      predicate: (b: Binding<Command, Interaction<InteractionData>, unknown>) => boolean, msg: string): void {\n        if (severity !== \"ignore\" && !binding.isWhenDefined() &&\n            binds\n                .filter(currBinding => currBinding.linterRules.get(ruleName) !== \"ignore\" && !currBinding.isWhenDefined())\n                .some(currBinding => predicate(currBinding) &&\n                    this.isWidgetSetsIntersecting(binding.interaction.registeredNodes, currBinding.interaction.registeredNodes))\n        ) {\n            this.printLinterMsg(severity, msg);\n        }\n    }\n\n    private isIncluded(i1: string, i2: string): boolean {\n        return (this.cacheIncluded.get(i1)?.has(i2) ?? false) || (this.cacheIncluded.get(i2)?.has(i1) ?? false);\n    }\n\n    private getSameDataSeverity(binding?: Binding<Command, Interaction<InteractionData>, unknown>): Severity {\n        return binding?.linterRules.get(\"same-data\") ?? this.linterRules.get(\"same-data\") ?? \"err\";\n    }\n\n    private getSameInteractionSeverity(binding?: Binding<Command, Interaction<InteractionData>, unknown>): Severity {\n        return binding?.linterRules.get(\"same-interactions\") ?? this.linterRules.get(\"same-interactions\") ?? \"err\";\n    }\n\n    private getIncludedSeverity(binding?: Binding<Command, Interaction<InteractionData>, unknown>): Severity {\n        return binding?.linterRules.get(\"included\") ?? this.linterRules.get(\"included\") ?? \"err\";\n    }\n\n    private isWidgetSetsIntersecting(w1: ReadonlySet<unknown>, w2: ReadonlySet<unknown>): boolean {\n        return Array.from(w1.values()).some(widget => w2.has(widget));\n    }\n\n    private printLinterMsg(severity: Severity, msg: string): void {\n        if (severity === \"err\") {\n            throw new Error(msg);\n        } else {\n            // eslint-disable-next-line no-console\n            console.warn(msg);\n        }\n    }\n\n    private fillCacheIncluded(): void {\n        if (this.cacheIncluded.size === 0) {\n            this.cacheIncluded.set(Click.name, new Set([DragLock.name, DoubleClick.name, Clicks.name]));\n            this.cacheIncluded.set(DoubleClick.name, new Set([DragLock.name]));\n            this.cacheIncluded.set(KeyDown.name, new Set([KeyTyped.name]));\n            this.cacheIncluded.set(KeyUp.name, new Set([KeyTyped.name]));\n            this.cacheIncluded.set(KeyTyped.name, new Set([KeysTyped.name]));\n            this.cacheIncluded.set(LongMouseDown.name, new Set([Click.name, DoubleClick.name, Clicks.name]));\n            this.cacheIncluded.set(MouseDown.name, new Set([LongMouseDown.name, Click.name, DoubleClick.name, Clicks.name]));\n            this.cacheIncluded.set(MouseUp.name, new Set([Click.name, DoubleClick.name, Clicks.name]));\n            this.cacheIncluded.set(leftPan.name, new Set([hPan.name, TouchDnD.name]));\n            this.cacheIncluded.set(rightPan.name, new Set([hPan.name, TouchDnD.name]));\n            this.cacheIncluded.set(topPan.name, new Set([vPan.name, TouchDnD.name]));\n            this.cacheIncluded.set(bottomPan.name, new Set([vPan.name, TouchDnD.name]));\n            this.cacheIncluded.set(hPan.name, new Set([TouchDnD.name]));\n            this.cacheIncluded.set(vPan.name, new Set([TouchDnD.name]));\n            this.cacheIncluded.set(twoHPan.name, new Set([MultiTouch.name]));\n            this.cacheIncluded.set(twoVPan.name, new Set([MultiTouch.name]));\n            this.cacheIncluded.set(twoLeftPan.name, new Set([twoHPan.name, MultiTouch.name]));\n            this.cacheIncluded.set(twoRightPan.name, new Set([twoHPan.name, MultiTouch.name]));\n            this.cacheIncluded.set(twoTopPan.name, new Set([twoVPan.name, MultiTouch.name]));\n            this.cacheIncluded.set(twoBottomPan.name, new Set([twoVPan.name, MultiTouch.name]));\n        }\n    }\n}\n\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CheckerImpl} from \"../checker/CheckerImpl\";\nimport type {Binding} from \"../../api/binding/Binding\";\nimport type {BindingsObserver} from \"../../api/binding/BindingsObserver\";\nimport type {Checker} from \"../../api/checker/Checker\";\nimport type {Command} from \"../../api/command/Command\";\nimport type {Interaction} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Subscription} from \"rxjs/internal/Subscription\";\n\n/**\n * An object for observing creates bindings.\n * Can be used with `Bindings.setBindingObserver` to set the global bindings observer\n * @category Binding\n */\nexport class BindingsContext implements BindingsObserver {\n    /**\n     * The bindings gathered when created using `Bindings` routines\n     */\n    private readonly binds: Array<Binding<Command, Interaction<InteractionData>, unknown>>;\n\n    /**\n     * For each gathered binding, listening the produced commands\n     */\n    private readonly disposables: Array<Subscription>;\n\n    /**\n     * The commands produced by the gathered bindings\n     */\n    private readonly cmds: Array<[Command, Binding<Command, Interaction<InteractionData>, unknown>]>;\n\n    public readonly checker: Checker;\n\n    public constructor() {\n        this.binds = [];\n        this.disposables = [];\n        this.cmds = [];\n        this.checker = new CheckerImpl();\n    }\n\n    public observeBinding(binding: Binding<Command, Interaction<InteractionData>, unknown>): void {\n        this.checker.checkRules(binding, this.binds);\n\n        this.binds.push(binding);\n        this.disposables.push(binding.produces.subscribe(cmd => this.cmds.push([cmd, binding])));\n    }\n\n    public clearObservedBindings(): void {\n        for (const dispos of this.disposables) {\n            dispos.unsubscribe();\n        }\n        for (const bind of this.binds) {\n            bind.uninstallBinding();\n        }\n    }\n\n    /**\n     * @returns A read-only array of the gathered bindings.\n     */\n    public get bindings(): ReadonlyArray<Binding<Command, Interaction<InteractionData>, unknown>> {\n        return this.binds;\n    }\n\n    /**\n     * @returns A read-only array of the commands produced by the gathered bindings.\n     */\n    public get commands(): ReadonlyArray<Command> {\n        return this.cmds.map(tuple => tuple[0]);\n    }\n\n    /**\n     * @param index - The index of the command (in the order of production)\n     * @returns The command at the given index. The command is casted into the provided generic type.\n     * @typeParam C - The type of the command to return.\n     */\n    public getCmd<C extends Command>(index: number): C | undefined {\n        return this.cmds[index]?.[0] as C | undefined;\n    }\n\n    /**\n     * @param binding - binding The binding to consider\n     * @returns The commands produced by the given binding.\n     */\n    public getCmdsProducedBy(binding: Binding<Command, Interaction<InteractionData>, unknown>): ReadonlyArray<Command> {\n        return this.cmds\n            .filter(cmd => cmd[1] === binding)\n            .map(cmd => cmd[0]);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CommandBase} from \"../CommandBase\";\nimport type {UndoHistoryBase} from \"../../../api/undo/UndoHistoryBase\";\n\n/**\n * A Redo action.\n * @category Command\n */\nexport class Redo extends CommandBase {\n    protected readonly history: UndoHistoryBase;\n\n    public constructor(undoHistory: UndoHistoryBase) {\n        super();\n        this.history = undoHistory;\n    }\n\n    public override canExecute(): boolean {\n        return this.history.getLastRedo() !== undefined;\n    }\n\n    protected execution(): void {\n        this.history.redo();\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CommandBase} from \"../CommandBase\";\nimport type {UndoHistoryBase} from \"../../../api/undo/UndoHistoryBase\";\n\n/**\n * An Undo command.\n * @category Command\n */\nexport class Undo extends CommandBase {\n    protected readonly history: UndoHistoryBase;\n\n    public constructor(undoHistory: UndoHistoryBase) {\n        super();\n        this.history = undoHistory;\n    }\n\n    public override canExecute(): boolean {\n        return this.history.getLastUndo() !== undefined;\n    }\n\n    protected execution(): void {\n        this.history.undo();\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isCheckBox} from \"./Events\";\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * An FSM transition for the CheckBox HTML element.\n * @category FSM Transition\n */\nexport class BoxCheckPressedTransition extends TransitionBase<InputEvent> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"input\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: InputEvent) => void, guard?: (evt: InputEvent) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(event: Event): event is InputEvent {\n        return event.currentTarget !== null && isCheckBox(event.currentTarget);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return BoxCheckPressedTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {InteractionDataBase} from \"./InteractionDataBase\";\nimport type {Flushable} from \"./Flushable\";\nimport type {WidgetData} from \"../../api/interaction/WidgetData\";\n\n/**\n * The user interaction data for widget based interaction\n * @category Interaction Data\n */\nexport class WidgetDataImpl<T> extends InteractionDataBase implements WidgetData<T>, Flushable {\n    public get widget(): T | undefined {\n        return this.targetData as unknown as T;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {BoxCheckPressedTransition} from \"../../fsm/BoxCheckPressedTransition\";\nimport {isCheckBox} from \"../../fsm/Events\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {WidgetDataImpl} from \"../WidgetDataImpl\";\nimport type {WidgetData} from \"../../../api/interaction/WidgetData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\nclass BoxCheckedFSM extends FSMImpl<BoxCheckedHandler> {\n    public constructor(logger: Logger, dataHandler: BoxCheckedHandler) {\n        super(logger, dataHandler);\n\n        new BoxCheckPressedTransition(this.initState, this.addTerminalState(\"checked\"),\n            (evt: InputEvent): void => {\n                this.dataHandler?.initToCheckHandler(evt);\n            });\n    }\n}\n\ninterface BoxCheckedHandler extends FSMDataHandler {\n    initToCheckHandler(event: Event): void;\n}\n\n/**\n * A user interaction for CheckBox.\n * @category Interaction Library\n */\nexport class BoxChecked extends InteractionBase<WidgetData<HTMLInputElement>, WidgetDataImpl<HTMLInputElement>, BoxCheckedFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: BoxCheckedHandler = {\n            \"initToCheckHandler\": (event: Event): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new BoxCheckedFSM(logger, handler), new WidgetDataImpl<HTMLInputElement>(), logger, name ?? BoxChecked.name);\n    }\n\n    public override onNewNodeRegistered(node: EventTarget): void {\n        if (isCheckBox(node)) {\n            this.registerActionHandlerInput(node);\n        }\n    }\n\n    public override onNodeUnregistered(node: EventTarget): void {\n        if (isCheckBox(node)) {\n            this.unregisterActionHandlerInput(node);\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isButton} from \"./Events\";\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * An FSM transition for the Button HTML element.\n * @category FSM Transition\n */\nexport class ButtonPressedTransition extends TransitionBase<InputEvent> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"click\", \"auxclick\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: InputEvent) => void, guard?: (evt: InputEvent) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(evt: Event): evt is InputEvent {\n        return evt.currentTarget !== null && isButton(evt.currentTarget);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return ButtonPressedTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {ButtonPressedTransition} from \"../../fsm/ButtonPressedTransition\";\nimport {isButton} from \"../../fsm/Events\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {WidgetDataImpl} from \"../WidgetDataImpl\";\nimport type {WidgetData} from \"../../../api/interaction/WidgetData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\n/**\n * The FSM for button pressures.\n * @category Interaction Library\n */\nclass ButtonPressedFSM extends FSMImpl<ButtonPressedFSMHandler> {\n    /**\n     * Creates the FSM\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(logger: Logger, dataHandler: ButtonPressedFSMHandler) {\n        super(logger, dataHandler);\n\n        new ButtonPressedTransition(this.initState, this.addTerminalState(\"pressed\"),\n            (evt: InputEvent): void => {\n                this.dataHandler?.initToPressedHandler(evt);\n            });\n    }\n}\n\ninterface ButtonPressedFSMHandler extends FSMDataHandler {\n    initToPressedHandler(event: InputEvent): void;\n}\n\n/**\n * A user interaction for buttons.\n * @category Interaction\n */\nexport class ButtonPressed extends InteractionBase<WidgetData<HTMLButtonElement>,\nWidgetDataImpl<HTMLButtonElement>, FSMImpl<ButtonPressedFSMHandler>> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: ButtonPressedFSMHandler = {\n            \"initToPressedHandler\": (event: InputEvent): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new ButtonPressedFSM(logger, handler), new WidgetDataImpl<HTMLButtonElement>(), logger, name ?? ButtonPressed.name);\n    }\n\n    public override onNewNodeRegistered(node: EventTarget): void {\n        if (isButton(node)) {\n            this.registerActionHandlerClick(node);\n        }\n    }\n\n    public override onNodeUnregistered(node: EventTarget): void {\n        if (isButton(node)) {\n            this.unregisterActionHandlerClick(node);\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isColorChoice} from \"./Events\";\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * An FSM transition for the ColorPicked HTML element.\n * @category FSM Transition\n */\nexport class ColorPickedTransition extends TransitionBase<Event> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"input\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: Event) => void, guard?: (evt: Event) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(event: Event): event is Event {\n        return event.currentTarget !== null && isColorChoice(event.currentTarget);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return ColorPickedTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\nimport {ColorPickedTransition} from \"../../fsm/ColorPickedTransition\";\nimport {isColorChoice} from \"../../fsm/Events\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {WidgetDataImpl} from \"../WidgetDataImpl\";\nimport type {WidgetData} from \"../../../api/interaction/WidgetData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\nclass ColorPickedFSM extends FSMImpl<ColorPickedHandler> {\n    public constructor(logger: Logger, dataHandler: ColorPickedHandler) {\n        super(logger, dataHandler);\n\n        new ColorPickedTransition(this.initState, this.addTerminalState(\"picked\"),\n            (evt: Event): void => {\n                this.dataHandler?.initToPickedHandler(evt);\n            });\n    }\n}\n\ninterface ColorPickedHandler extends FSMDataHandler {\n    initToPickedHandler(event: Event): void;\n}\n\n/**\n * A user interaction for CheckBox\n * @category Interaction Library\n */\nexport class ColorPicked extends InteractionBase<WidgetData<HTMLInputElement>, WidgetDataImpl<HTMLInputElement>, ColorPickedFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: ColorPickedHandler = {\n            \"initToPickedHandler\": (event: Event): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new ColorPickedFSM(logger, handler), new WidgetDataImpl<HTMLInputElement>(), logger, name ?? ColorPicked.name);\n    }\n\n    public override onNewNodeRegistered(node: EventTarget): void {\n        if (isColorChoice(node)) {\n            this.registerActionHandlerInput(node);\n        }\n    }\n\n    public override onNodeUnregistered(node: EventTarget): void {\n        if (isColorChoice(node)) {\n            this.unregisterActionHandlerInput(node);\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isComboBox} from \"./Events\";\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * An FSM transition for the ComboBox HTML element.\n * @category FSM Transition\n */\nexport class ComboBoxTransition extends TransitionBase<Event> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"input\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: Event) => void, guard?: (evt: Event) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(event: Event): event is Event {\n        return event.currentTarget !== null && isComboBox(event.currentTarget);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return ComboBoxTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {ComboBoxTransition} from \"../../fsm/ComboBoxTransition\";\nimport {isComboBox} from \"../../fsm/Events\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {WidgetDataImpl} from \"../WidgetDataImpl\";\nimport type {WidgetData} from \"../../../api/interaction/WidgetData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\nclass ComboBoxSelectedFSM extends FSMImpl<ComboBoxSelectedHandler> {\n    public constructor(logger: Logger, dataHandler: ComboBoxSelectedHandler) {\n        super(logger, dataHandler);\n\n        new ComboBoxTransition(this.initState, this.addTerminalState(\"selected\"),\n            (evt: Event): void => {\n                this.dataHandler?.initToSelectedHandler(evt);\n            });\n    }\n}\n\ninterface ComboBoxSelectedHandler extends FSMDataHandler {\n    initToSelectedHandler(event: Event): void;\n}\n\n/**\n * A user interaction for CheckBox\n * @category Interaction Library\n */\nexport class ComboBoxSelected extends InteractionBase<WidgetData<HTMLSelectElement>, WidgetDataImpl<HTMLSelectElement>, ComboBoxSelectedFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: ComboBoxSelectedHandler = {\n            \"initToSelectedHandler\": (event: Event): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new ComboBoxSelectedFSM(logger, handler), new WidgetDataImpl<HTMLSelectElement>(), logger, name ?? ComboBoxSelected.name);\n    }\n\n    public override onNewNodeRegistered(node: EventTarget): void {\n        if (isComboBox(node)) {\n            this.registerActionHandlerInput(node);\n        }\n    }\n\n    public override onNodeUnregistered(node: EventTarget): void {\n        if (isComboBox(node)) {\n            this.unregisterActionHandlerInput(node);\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isDatePicker} from \"./Events\";\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * An FSM transition for the DatePicker HTML element.\n * @category FSM Transition\n */\nexport class DatePickedTransition extends TransitionBase<Event> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"input\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: Event) => void, guard?: (evt: Event) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(event: Event): event is Event {\n        return event.currentTarget !== null && isDatePicker(event.currentTarget);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return DatePickedTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {DatePickedTransition} from \"../../fsm/DatePickedTransition\";\nimport {isDatePicker} from \"../../fsm/Events\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {WidgetDataImpl} from \"../WidgetDataImpl\";\nimport type {WidgetData} from \"../../../api/interaction/WidgetData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\nclass DatePickedFSM extends FSMImpl<DatePickedHandler> {\n    public constructor(logger: Logger, dataHandler: DatePickedHandler) {\n        super(logger, dataHandler);\n\n        new DatePickedTransition(this.initState, this.addTerminalState(\"picked\"),\n            (evt: Event): void => {\n                this.dataHandler?.initToPickedHandler(evt);\n            });\n    }\n}\n\ninterface DatePickedHandler extends FSMDataHandler {\n    initToPickedHandler(event: Event): void;\n}\n\n/**\n * A user interaction for Date input.\n * @category Interaction Library\n */\nexport class DatePicked extends InteractionBase<WidgetData<HTMLInputElement>, WidgetDataImpl<HTMLInputElement>, DatePickedFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: DatePickedHandler = {\n            \"initToPickedHandler\": (event: Event): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new DatePickedFSM(logger, handler), new WidgetDataImpl<HTMLInputElement>(), logger, name ?? DatePicked.name);\n    }\n\n    public override onNewNodeRegistered(node: EventTarget): void {\n        if (isDatePicker(node)) {\n            this.registerActionHandlerInput(node);\n        }\n    }\n\n    public override onNodeUnregistered(node: EventTarget): void {\n        if (isDatePicker(node)) {\n            this.unregisterActionHandlerInput(node);\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {EscapeKeyPressureTransition} from \"../../fsm/EscapeKeyPressureTransition\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {SrcTgtPointsDataImpl} from \"../SrcTgtPointsDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {SrcTgtPointsData} from \"../../../api/interaction/SrcTgtPointsData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\n/**\n * The FSM for DnD interactions.\n */\nclass DnDFSM extends FSMImpl<DnDFSMHandler> {\n    private readonly cancellable: boolean;\n\n    private buttonToCheck: number | undefined;\n\n    /**\n     * Creates the FSM\n     * @param cancellable - True: the FSM can be cancelled using the ESC key.\n     * @param logger - The logger to use\n     * @param dataHandler - The handler that will receive notifications from the FSM.\n     */\n    public constructor(cancellable: boolean, logger: Logger, dataHandler: DnDFSMHandler) {\n        super(logger, dataHandler);\n        this.cancellable = cancellable;\n\n        const pressed = this.addStdState(\"pressed\");\n        const dragged = this.addStdState(\"dragged\", true);\n        const cancelled = this.addCancellingState(\"cancelled\");\n\n        new MouseTransition(this.initState, pressed, \"mousedown\",\n            (evt: MouseEvent): void => {\n                this.buttonToCheck = evt.button;\n                this.dataHandler?.onPress(evt);\n            });\n\n        new MouseTransition(pressed, cancelled, \"mouseup\", (evt: MouseEvent): boolean => evt.button === this.buttonToCheck);\n\n        const move = new MouseTransition(pressed, dragged, \"mousemove\",\n            (evt: MouseEvent): void => {\n                this.dataHandler?.onDrag(evt);\n            },\n            (evt: MouseEvent): boolean => evt.button === this.buttonToCheck);\n\n        new MouseTransition(dragged, dragged, \"mousemove\", move.action, move.guard);\n\n        new MouseTransition(dragged, this.addTerminalState(\"released\"), \"mouseup\",\n            (event: MouseEvent): void => {\n                this.dataHandler?.onRelease(event);\n            },\n            (event: MouseEvent): boolean => {\n                const tgt = event.currentTarget;\n                return event.button === this.buttonToCheck && (!(tgt instanceof Element) || !tgt.classList.contains(\"ioDwellSpring\"));\n            });\n\n        if (this.cancellable) {\n            new EscapeKeyPressureTransition(pressed, cancelled);\n            new EscapeKeyPressureTransition(dragged, cancelled);\n            new MouseTransition(dragged, cancelled, \"mouseup\",\n                (evt: MouseEvent): boolean => {\n                    const tgt = evt.currentTarget;\n                    return evt.button === this.buttonToCheck && tgt instanceof Element && tgt.classList.contains(\"ioDwellSpring\");\n                });\n        }\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.buttonToCheck = undefined;\n    }\n}\n\ninterface DnDFSMHandler extends FSMDataHandler {\n    onPress(event: Event): void;\n    onDrag(event: Event): void;\n    onRelease(event: Event): void;\n}\n\n/**\n * A user interaction for Drag and Drop\n * @category Interaction Library\n */\nexport class DnD extends InteractionBase<SrcTgtPointsData<PointData>, SrcTgtPointsDataImpl, DnDFSM> {\n    /**\n     * Creates the interaction.\n     * @param cancellable - True: the interaction can be cancelled\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(cancellable: boolean, logger: Logger, name?: string) {\n        const handler: DnDFSMHandler = {\n            \"onPress\": (evt: MouseEvent): void => {\n                this._data.copySrc(evt);\n                this._data.copyTgt(evt);\n            },\n            \"onDrag\": (evt: MouseEvent): void => {\n                this._data.copyTgt(evt);\n            },\n            \"onRelease\": (evt: MouseEvent): void => {\n                this._data.copyTgt(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new DnDFSM(cancellable, logger, handler), new SrcTgtPointsDataImpl(), logger, name ?? DnD.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isHyperLink} from \"./Events\";\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * An FSM transition for the Hyperlink.\n * @category FSM Transition\n */\nexport class HyperLinkTransition extends TransitionBase<Event> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"click\", \"auxclick\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: Event) => void, guard?: (evt: Event) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(event: Event): event is Event {\n        return event.currentTarget !== null && isHyperLink(event.currentTarget);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return HyperLinkTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isHyperLink} from \"../../fsm/Events\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {HyperLinkTransition} from \"../../fsm/HyperLinkTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {WidgetDataImpl} from \"../WidgetDataImpl\";\nimport type {WidgetData} from \"../../../api/interaction/WidgetData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\nclass HyperLinkClickedFSM extends FSMImpl<HyperLinkClickedFSMHandler> {\n    public constructor(logger: Logger, dataHandler: HyperLinkClickedFSMHandler) {\n        super(logger, dataHandler);\n\n        new HyperLinkTransition(this.initState, this.addTerminalState(\"clicked\"),\n            (evt: Event): void => {\n                this.dataHandler?.initToClickedHandler(evt);\n            });\n    }\n}\n\ninterface HyperLinkClickedFSMHandler extends FSMDataHandler {\n    initToClickedHandler(event: Event): void;\n}\n\n/**\n * A user interaction for CheckBox\n * @category Interaction Library\n */\nexport class HyperLinkClicked extends InteractionBase<WidgetData<HTMLAnchorElement>, WidgetDataImpl<HTMLAnchorElement>, HyperLinkClickedFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: HyperLinkClickedFSMHandler = {\n            \"initToClickedHandler\": (event: Event): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new HyperLinkClickedFSM(logger, handler), new WidgetDataImpl<HTMLAnchorElement>(), logger, name ?? HyperLinkClicked.name);\n    }\n\n    public override onNewNodeRegistered(node: EventTarget): void {\n        if (isHyperLink(node)) {\n            this.registerActionHandlerInput(node);\n        }\n    }\n\n    public override onNodeUnregistered(node: EventTarget): void {\n        if (isHyperLink(node)) {\n            this.unregisterActionHandlerInput(node);\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {KeyTransition} from \"../../fsm/KeyTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {KeysDataImpl} from \"../KeysDataImpl\";\nimport type {KeysData} from \"../../../api/interaction/KeysData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface KeysDownFSMHandler extends FSMDataHandler {\n    onKeyPressed(event: KeyboardEvent): void;\n}\n\n/**\n * This interaction permits to define combo a key pressed that can be used to define shortcuts, etc.\n * @category FSM\n */\nexport class KeysDownFSM extends FSMImpl<KeysDownFSMHandler> {\n    private readonly currentCodes: Array<string>;\n\n    /**\n     * Creates the FSM.\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(logger: Logger, dataHandler: KeysDownFSMHandler) {\n        super(logger, dataHandler);\n        this.currentCodes = [];\n\n        const pressed = this.addStdState(\"pressed\");\n\n        const actionkp = (evt: KeyboardEvent): void => {\n            this.currentCodes.push(evt.code);\n            this.dataHandler?.onKeyPressed(evt);\n        };\n        new KeyTransition(this.initState, pressed, \"keydown\", actionkp);\n\n        new KeyTransition(pressed, pressed, \"keydown\", actionkp);\n\n        new KeyTransition(pressed, this.addTerminalState(\"ended\"), \"keyup\", undefined,\n            (evt: KeyboardEvent): boolean => this.currentCodes.includes(evt.code));\n    }\n\n    public override reinit(): void {\n        this.currentCodes.length = 0;\n        super.reinit();\n    }\n}\n\n/**\n * Several keys pressed at the same time.\n * Starts on a key pressure. Ends as soon as one of the pressed keys is released.\n * @category Interaction Library\n */\nexport class KeysDown extends InteractionBase<KeysData, KeysDataImpl, KeysDownFSM> {\n    /**\n     * Creates the user interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: KeysDownFSMHandler = {\n            \"onKeyPressed\": (event: KeyboardEvent): void => {\n                this._data.addKey(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new KeysDownFSM(logger, handler), new KeysDataImpl(), logger, name ?? KeysDown.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {TouchTransition} from \"../../fsm/TouchTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {TouchDataImpl} from \"../TouchDataImpl\";\nimport type {TouchData} from \"../../../api/interaction/TouchData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\n/**\n * The FSM for the LongTouch interaction\n */\nclass LongTouchFSM extends FSMImpl<LongTouchFSMHandler> {\n    private readonly duration: number;\n\n    private currentTouchID: number | undefined;\n\n    /**\n     * Creates the long touch FSM\n     * @param duration - Defines the duration of the touch interaction.\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(duration: number, logger: Logger, dataHandler: LongTouchFSMHandler) {\n        super(logger, dataHandler);\n\n        if (duration <= 0) {\n            throw new Error(\"Incorrect duration\");\n        }\n\n        this.duration = duration;\n        this.currentTouchID = undefined;\n\n        const touched = this.addStdState(\"touched\");\n        const cancelled = this.addCancellingState(\"cancelled\");\n\n        new TouchTransition(this.initState, touched, \"touchstart\",\n            (event: TouchEvent): void => {\n                if (event.changedTouches[0] !== undefined) {\n                    this.currentTouchID = event.changedTouches[0].identifier;\n                    this.dataHandler?.tap(event);\n                }\n            });\n\n        new TouchTransition(touched, cancelled, \"touchmove\", undefined,\n            (ev: TouchEvent): boolean => ev.changedTouches[0] !== undefined && ev.changedTouches[0].identifier === this.currentTouchID);\n\n        new TouchTransition(touched, cancelled, \"touchend\", undefined,\n            (ev: TouchEvent): boolean => ev.changedTouches[0] !== undefined && ev.changedTouches[0].identifier === this.currentTouchID);\n\n        new TimeoutTransition(touched, this.addTerminalState(\"timeouted\"), () => this.duration);\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.currentTouchID = undefined;\n    }\n}\n\ninterface LongTouchFSMHandler extends FSMDataHandler {\n    tap(evt: TouchEvent): void;\n}\n\n/**\n * The long touch interaction.\n * @category Interaction Library\n */\nexport class LongTouch extends InteractionBase<TouchData, TouchDataImpl, LongTouchFSM> {\n    /**\n     * Creates the long tap interaction\n     * @param duration - The duration of the touch required to ends the user interaction\n     * If this duration is not reached, the interaction is cancelled.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(duration: number, logger: Logger, name?: string) {\n        const handler: LongTouchFSMHandler = {\n            \"tap\": (evt: TouchEvent): void => {\n                if (evt.changedTouches[0] !== undefined) {\n                    this._data.copy(TouchDataImpl.mergeTouchEventData(evt.changedTouches[0], evt, Array.from(evt.touches)));\n                }\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new LongTouchFSM(duration, logger, handler), new TouchDataImpl(), logger, name ?? LongTouch.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface MouseEnterFSMHandler extends FSMDataHandler {\n    onEnter(event: MouseEvent): void;\n}\n\n/**\n * The FSM for mouseover interactions\n * @category FSM\n */\nexport class MouseEnterFSM extends FSMImpl<MouseEnterFSMHandler> {\n    /**\n     * Indicates if event bubbling is enabled for the interaction\n     */\n    private readonly withBubbling: boolean;\n\n    /**\n     * Creates the FSM\n     * @param withBubbling - True: event bubbling will be done\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(withBubbling: boolean, logger: Logger, dataHandler: MouseEnterFSMHandler) {\n        super(logger, dataHandler);\n        this.withBubbling = withBubbling;\n\n        const entered = this.addTerminalState(\"entered\");\n        const action = (event: MouseEvent): void => {\n            this.dataHandler?.onEnter(event);\n        };\n\n        if (this.withBubbling) {\n            new MouseTransition(this.initState, entered, \"mouseover\", action);\n        } else {\n            new MouseTransition(this.initState, entered, \"mouseenter\", action);\n        }\n    }\n}\n\n/**\n * The mouse enter interaction. Corresponds to the single event mouseEnter\n * @category Interaction Library\n */\nexport class MouseEnter extends InteractionBase<PointData, PointDataImpl, MouseEnterFSM> {\n    /**\n     * Creates the interaction.\n     * @param withBubbling - True: the event bubbling will be done\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(withBubbling: boolean, logger: Logger, name?: string) {\n        const handler: MouseEnterFSMHandler = {\n            \"onEnter\": (evt: MouseEvent): void => {\n                this._data.copy(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new MouseEnterFSM(withBubbling, logger, handler), new PointDataImpl(), logger, name ?? MouseEnter.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {TerminalState} from \"../../fsm/TerminalState\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface MouseLeaveFSMHandler extends FSMDataHandler {\n    onExit(event: MouseEvent): void;\n}\n\n/**\n * The FSM for mouseout interactions\n * @category FSM\n */\nexport class MouseLeaveFSM extends FSMImpl<MouseLeaveFSMHandler> {\n    /**\n     * Indicates if event bubbling is enabled for the interaction\n     */\n    private readonly withBubbling: boolean;\n\n    /**\n     * Creates the FSM\n     * @param withBubbling - True: event bubbling will be done\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(withBubbling: boolean, logger: Logger, dataHandler: MouseLeaveFSMHandler) {\n        super(logger, dataHandler);\n        this.withBubbling = withBubbling;\n\n        const exited = new TerminalState(this, \"exited\");\n        const action = (event: MouseEvent): void => {\n            this.dataHandler?.onExit(event);\n        };\n\n        if (this.withBubbling) {\n            new MouseTransition(this.initState, exited, \"mouseout\", action);\n        } else {\n            new MouseTransition(this.initState, exited, \"mouseleave\", action);\n        }\n    }\n}\n\n/**\n * The mouse leave interaction. Corresponds to the single event MouseLeave\n * @category Interaction Library\n */\nexport class MouseLeave extends InteractionBase<PointData, PointDataImpl, MouseLeaveFSM> {\n    /**\n     * Creates the interaction.\n     * @param withBubbling - True: the event bullebing will be done\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(withBubbling: boolean, logger: Logger, name?: string) {\n        const handler: MouseLeaveFSMHandler = {\n            \"onExit\": (evt: MouseEvent): void => {\n                this._data.copy(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new MouseLeaveFSM(withBubbling, logger, handler), new PointDataImpl(), logger, name ?? MouseLeave.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface MouseMoveFSMHandler extends FSMDataHandler {\n    onMove(event: MouseEvent): void;\n}\n\n/**\n * The FSM for mouseover interactions\n * @category FSM\n */\nexport class MouseMoveFSM extends FSMImpl<MouseMoveFSMHandler> {\n    /**\n     * Creates the FSM\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(logger: Logger, dataHandler: MouseMoveFSMHandler) {\n        super(logger, dataHandler);\n\n        new MouseTransition(this.initState, this.addTerminalState(\"moved\"), \"mousemove\",\n            (event: MouseEvent): void => {\n                this.dataHandler?.onMove(event);\n            });\n    }\n}\n\n/**\n * The mouse move interaction. Corresponds to the single event MouseMove\n * @category Interaction Library\n */\nexport class MouseMove extends InteractionBase<PointData, PointDataImpl, MouseMoveFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: MouseMoveFSMHandler = {\n            \"onMove\": (evt: MouseEvent): void => {\n                this._data.copy(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new MouseMoveFSM(logger, handler), new PointDataImpl(), logger, name ?? MouseMove.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * This transition corresponds to the scroll of a window\n * @category FSM Transition\n */\nexport class ScrollTransition extends TransitionBase<Event> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"scroll\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: Event) => void, guard?: (evt: Event) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(event: Event): event is Event {\n        return event.type === \"scroll\";\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return ScrollTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {InteractionDataBase} from \"./InteractionDataBase\";\nimport type {Flushable} from \"./Flushable\";\nimport type {ScrollData} from \"../../api/interaction/ScrollData\";\n\n/**\n * Scrolling interaction data implementation with write access.\n * @category Interaction Data\n */\nexport class ScrollDataImpl extends InteractionDataBase implements ScrollData, Flushable {\n    protected scrollXData = 0;\n\n    protected scrollYData = 0;\n\n    public override flush(): void {\n        super.flush();\n        this.scrollXData = 0;\n        this.scrollYData = 0;\n    }\n\n    public get scrollX(): number {\n        return this.scrollXData;\n    }\n\n    public get scrollY(): number {\n        return this.scrollYData;\n    }\n\n    public setScrollData(event: Event): void {\n        super.copy(event);\n\n        this.scrollXData = window.scrollX;\n        this.scrollYData = window.scrollY;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {ScrollTransition} from \"../../fsm/ScrollTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {ScrollDataImpl} from \"../ScrollDataImpl\";\nimport type {ScrollData} from \"../../../api/interaction/ScrollData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface ScrollFSMHandler extends FSMDataHandler {\n    initToScroll(event: Event): void;\n}\n\n/**\n * An FSM for scrolling.\n * @category FSM\n */\nexport class ScrollFSM extends FSMImpl<ScrollFSMHandler> {\n    public constructor(logger: Logger, dataHandler: ScrollFSMHandler) {\n        super(logger, dataHandler);\n\n        new ScrollTransition(this.initState, this.addTerminalState(\"scrolled\"),\n            (evt: Event): void => {\n                this.dataHandler?.initToScroll(evt);\n            });\n    }\n}\n\n/**\n * A user interaction for scrolling using a mouse wheel. Consists of a single scroll.\n * @category Interaction Library\n */\nexport class Scroll extends InteractionBase<ScrollData, ScrollDataImpl, ScrollFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: ScrollFSMHandler = {\n            \"initToScroll\": (event: Event): void => {\n                this._data.setScrollData(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new ScrollFSM(logger, handler), new ScrollDataImpl(), logger, name ?? Scroll.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isSpinner} from \"./Events\";\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * An FSM transition for the Spinner HTML element.\n * @category FSM Transition\n */\nexport class SpinnerChangedTransition extends TransitionBase<Event> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"input\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: Event) => void, guard?: (evt: Event) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(event: Event): event is Event {\n        return event.currentTarget !== null && isSpinner(event.currentTarget);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return SpinnerChangedTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isSpinner} from \"../../fsm/Events\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {SpinnerChangedTransition} from \"../../fsm/SpinnerChangedTransition\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {WidgetDataImpl} from \"../WidgetDataImpl\";\nimport type {WidgetData} from \"../../../api/interaction/WidgetData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface SpinnerChangedHandler extends FSMDataHandler {\n    initToChangedHandler(event: Event): void;\n}\n\n/**\n * The FSM of the spinner interaction\n * @category FSM\n */\nexport class SpinnerChangedFSM extends FSMImpl<SpinnerChangedHandler> {\n    /** The time gap between the two spinner events. */\n    private static timeGap = 300;\n\n    /**\n     * The supplier that provides the time gap.\n     * @returns The time gap\n     */\n    private static readonly timeGapSupplier: () => number = () => SpinnerChangedFSM.getTimeGap();\n\n    /**\n     * @returns The time gap between the two spinner events.\n     */\n    public static getTimeGap(): number {\n        return SpinnerChangedFSM.timeGap;\n    }\n\n    /**\n     * Sets The time gap between the two spinner events.\n     * @param timeGapBetweenClicks - The time gap between the two spinner events. Not done if negative.\n     */\n    public static setTimeGap(timeGapBetweenClicks: number): void {\n        if (timeGapBetweenClicks > 0) {\n            SpinnerChangedFSM.timeGap = timeGapBetweenClicks;\n        }\n    }\n\n    public constructor(logger: Logger, dataHandler: SpinnerChangedHandler) {\n        super(logger, dataHandler);\n\n        const changed = this.addStdState(\"changed\");\n        const spinnerAction = (evt: Event): void => {\n            this.dataHandler?.initToChangedHandler(evt);\n        };\n\n        new SpinnerChangedTransition(this.initState, changed, spinnerAction);\n        new SpinnerChangedTransition(changed, changed, spinnerAction);\n        new TimeoutTransition(changed, this.addTerminalState(\"ended\"), SpinnerChangedFSM.timeGapSupplier);\n    }\n}\n\n/**\n * A user interaction for Number input.\n * @category Interaction Library\n */\nexport class SpinnerChanged extends InteractionBase<WidgetData<HTMLInputElement>, WidgetDataImpl<HTMLInputElement>, SpinnerChangedFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: SpinnerChangedHandler = {\n            \"initToChangedHandler\": (event: Event): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new SpinnerChangedFSM(logger, handler), new WidgetDataImpl<HTMLInputElement>(), logger, name ?? SpinnerChanged.name);\n    }\n\n    public override onNewNodeRegistered(node: EventTarget): void {\n        if (isSpinner(node)) {\n            this.registerActionHandlerInput(node);\n        }\n    }\n\n    public override onNodeUnregistered(node: EventTarget): void {\n        if (isSpinner(node)) {\n            this.unregisterActionHandlerInput(node);\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {PointsDataImpl} from \"./PointsDataImpl\";\nimport type {TouchData} from \"../../api/interaction/TouchData\";\n\n/**\n * Tapping interaction data implementation\n * @category Interaction Data\n */\nexport class TapDataImpl extends PointsDataImpl<TouchData> {\n    /**\n     * Creates the interaction data\n     */\n    public constructor() {\n        super();\n    }\n\n    public get lastId(): number | undefined {\n        return this.pointsData.at(-1)?.identifier;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {TouchTransition} from \"../../fsm/TouchTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {TapDataImpl} from \"../TapDataImpl\";\nimport {TouchDataImpl} from \"../TouchDataImpl\";\nimport type {PointsData} from \"../../../api/interaction/PointsData\";\nimport type {TouchData} from \"../../../api/interaction/TouchData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {CancellingState} from \"../../fsm/CancellingState\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\nimport type {StdState} from \"../../fsm/StdState\";\nimport type {PointsDataImpl} from \"../PointsDataImpl\";\n\ninterface TapFSMHandler extends FSMDataHandler {\n    tap(evt: TouchEvent): void;\n}\n\n/**\n * The FSM for the Tap interaction\n * @category FSM\n */\nexport class TapFSM extends FSMImpl<TapFSMHandler> {\n    private countTaps: number;\n\n    private readonly nbTaps: number;\n\n    private touchID?: number;\n\n    protected readonly downState: StdState;\n\n    protected readonly cancelState: CancellingState;\n\n    /**\n     * Creates the Tap FSM\n     * @param nbTaps - The number of taps to support\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(nbTaps: number, logger: Logger, dataHandler: TapFSMHandler) {\n        super(logger, dataHandler);\n        this.nbTaps = nbTaps;\n        this.countTaps = 0;\n\n        this.downState = this.addStdState(\"down\");\n        const up = this.addStdState(\"up\");\n        this.cancelState = this.addCancellingState(\"cancelled\");\n        const action = (event: TouchEvent): void => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.touchID = event.changedTouches[0]!.identifier;\n            this.countTaps++;\n            this.dataHandler?.tap(event);\n        };\n\n        new TouchTransition(this.initState, this.downState, \"touchstart\", action);\n        new TouchTransition(up, this.downState, \"touchstart\", action);\n\n        new TouchTransition(this.downState, this.cancelState, \"touchmove\", undefined,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            (evt: TouchEvent): boolean => evt.changedTouches[0]!.identifier === this.touchID);\n\n        // No multi-touch\n        new TouchTransition(this.downState, this.cancelState, \"touchstart\", undefined,\n            (evt: TouchEvent): boolean => Array.from(evt.touches).some(touch => touch.identifier === this.touchID));\n\n        // Required to clean touch events lost by the browser\n        new TouchTransition(this.downState, this.downState, \"touchstart\",\n            // Replacing the current tap (but not increment)\n            (event: TouchEvent): void => {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this.touchID = event.changedTouches[0]!.identifier;\n                this.dataHandler?.tap(event);\n            },\n            // To detect the event is lost, checking it is not part of the touches any more\n            (evt: TouchEvent): boolean => Array.from(evt.touches).filter(touch => touch.identifier === this.touchID).length === 0);\n\n        new TouchTransition(this.downState, this.addTerminalState(\"ended\"), \"touchend\", undefined,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            (evt: TouchEvent): boolean => evt.changedTouches[0]!.identifier === this.touchID && this.nbTaps === this.countTaps);\n\n        new TouchTransition(this.downState, up, \"touchend\", undefined,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            (evt: TouchEvent): boolean => evt.changedTouches[0]!.identifier === this.touchID && this.nbTaps !== this.countTaps);\n\n        new TouchTransition(up, this.cancelState, \"touchmove\");\n        new TimeoutTransition(up, this.cancelState, () => 1000);\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.countTaps = 0;\n    }\n}\n\n/**\n * A tap user interaction.\n * This touch interaction takes as input the number of taps expected to end the interaction.\n * If this number is not reached after a timeout, the interaction is cancelled.\n * @category Interaction Library\n */\nexport class Tap extends InteractionBase<PointsData<TouchData>, PointsDataImpl<TouchData>, TapFSM> {\n    /**\n     * Creates the tap interaction\n     * @param numberTaps - The number of taps expected to end the interaction.\n     * If this number is not reached after a timeout, the interaction is cancelled.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(numberTaps: number, logger: Logger, name?: string) {\n        const handler: TapFSMHandler = {\n            \"tap\": (evt: TouchEvent): void => {\n                if (evt.changedTouches.length > 0) {\n                    const touch = new TouchDataImpl();\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    touch.copy(TouchDataImpl.mergeTouchEventData(evt.changedTouches[0]!, evt, Array.from(evt.touches)));\n                    this._data.addPoint(touch);\n                }\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new TapFSM(numberTaps, logger, handler), new TapDataImpl(), logger, name ?? Tap.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isTextInput} from \"./Events\";\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * An FSM transition for the different text input HTML element.\n * @category FSM Transition\n */\nexport class TextInputChangedTransition extends TransitionBase<Event> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"input\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: Event) => void, guard?: (evt: Event) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(event: Event): event is Event {\n        return event.currentTarget !== null && isTextInput(event.currentTarget);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return TextInputChangedTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {isTextInput} from \"../../fsm/Events\";\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {TextInputChangedTransition} from \"../../fsm/TextInputChangedTransition\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {WidgetDataImpl} from \"../WidgetDataImpl\";\nimport type {WidgetData} from \"../../../api/interaction/WidgetData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\nclass TextInputChangedFSM extends FSMImpl<TextInputChangedHandler> {\n    /** The time gap between the two spinner events. */\n    private readonly _timeGap: number = 1000;\n\n    /**\n     * The supplier that provides the time gap.\n     * @returns The time gap\n     */\n    private readonly timeGapSupplier: () => number = () => this.getTimeGap();\n\n    /**\n     * @returns The time gap between the two spinner events.\n     */\n    public getTimeGap(): number {\n        return this._timeGap;\n    }\n\n    public constructor(logger: Logger, dataHandler: TextInputChangedHandler, timeSet?: number) {\n        super(logger, dataHandler);\n        if (timeSet !== undefined) {\n            this._timeGap = timeSet;\n        }\n\n        const changed = this.addStdState(\"changed\");\n\n        new TextInputChangedTransition(this.initState, changed,\n            (evt: Event): void => {\n                this.dataHandler?.initToChangedHandler(evt);\n            });\n\n        new TextInputChangedTransition(changed, changed,\n            (evt: Event): void => {\n                this.dataHandler?.initToChangedHandler(evt);\n            });\n\n        new TimeoutTransition(changed, this.addTerminalState(\"ended\"), this.timeGapSupplier);\n    }\n}\n\ninterface TextInputChangedHandler extends FSMDataHandler {\n    initToChangedHandler(event: Event): void;\n}\n\n/**\n * A user interaction for Number input.\n * @category Interaction Library\n */\nexport class TextInputChanged extends InteractionBase<WidgetData<HTMLInputElement | HTMLTextAreaElement>,\nWidgetDataImpl<HTMLInputElement | HTMLTextAreaElement>, TextInputChangedFSM> {\n\n    public constructor(logger: Logger, timeGap?: number, name?: string) {\n        const handler: TextInputChangedHandler = {\n            \"initToChangedHandler\": (event: Event): void => {\n                this._data.copy(event);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new TextInputChangedFSM(logger, handler, timeGap),\n            new WidgetDataImpl<HTMLInputElement | HTMLTextAreaElement>(), logger, name ?? TextInputChanged.name);\n    }\n\n    public override onNewNodeRegistered(node: EventTarget): void {\n        if (isTextInput(node)) {\n            this.registerActionHandlerInput(node);\n        }\n    }\n\n    public override onNodeUnregistered(node: EventTarget): void {\n        if (isTextInput(node)) {\n            this.unregisterActionHandlerInput(node);\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {TouchTransition} from \"../../fsm/TouchTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {TouchDataImpl} from \"../TouchDataImpl\";\nimport type {TouchData} from \"../../../api/interaction/TouchData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\nclass TouchStartFSM extends FSMImpl<TouchStartFSMHandler> {\n    public constructor(logger: Logger, dataHandler: TouchStartFSMHandler) {\n        super(logger, dataHandler);\n\n        new TouchTransition(this.initState, this.addTerminalState(\"touched\"), \"touchstart\",\n            (event: TouchEvent): void => {\n                this.dataHandler?.initToTouch(event);\n            });\n    }\n}\n\ninterface TouchStartFSMHandler extends FSMDataHandler {\n    initToTouch(event: TouchEvent): void;\n}\n\n/**\n * A user interaction for touching down\n * @category Interaction Library\n */\nexport class TouchStart extends InteractionBase<TouchData, TouchDataImpl, TouchStartFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, name?: string) {\n        const handler: TouchStartFSMHandler = {\n            \"initToTouch\": (evt: TouchEvent): void => {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this._data.copy(TouchDataImpl.mergeTouchEventData(evt.changedTouches[0]!, evt, Array.from(evt.touches)));\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new TouchStartFSM(logger, handler), new TouchDataImpl(), logger, name ?? TouchStart.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {XTouchDnD} from \"./XTouch\";\nimport {InteractionBuilderImpl} from \"../InteractionBuilderImpl\";\nimport {RotationTouchDataImpl} from \"../RotationTouchDataImpl\";\nimport {ScaleTouchDataImpl} from \"../ScaleTouchDataImpl\";\nimport type {RotationTouchData} from \"../../../api/interaction/RotationTouchData\";\nimport type {ScaleTouchData} from \"../../../api/interaction/ScaleTouchData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\n\n/**\n * Define a type for touch interactions performing a rotation.\n * @category Interaction Library\n */\nexport type Rotate = XTouchDnD<RotationTouchData, RotationTouchDataImpl>;\n\n/**\n * Define a type for touch interactions performing a scale/pinch.\n * @category Interaction Library\n */\nexport type Scale = XTouchDnD<ScaleTouchData, ScaleTouchDataImpl>;\n\n/**\n * Creates a touch-based rotation interaction (two-touch).\n * @param logger - The logger to use for this interaction\n * @param pxTolerance - The pixel tolerance for considering the rotation (tolerance while moving the fixation point).\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function rotate(logger: Logger, pxTolerance: number): () => Rotate {\n    return new InteractionBuilderImpl(name => new XTouchDnD<RotationTouchData, RotationTouchDataImpl>(2, logger,\n        new RotationTouchDataImpl(), name, undefined, true))\n        .then(data => data.touch1.diffClientX < pxTolerance && data.touch1.diffClientY < pxTolerance)\n        .name(rotate.name)\n        .build();\n}\n\n/**\n * Creates a touch-based scale/pinch interaction (two-touch).\n * @param logger - The logger to use for this interaction\n * @param pxTolerance - The pixel tolerance for considering the scale/pinch (tolerance as the two\n * points must be on the same line).\n * @returns The supplier that will produce the interaction when called\n * @category Interaction Library\n */\nexport function scale(logger: Logger, pxTolerance: number): () => Scale {\n    return new InteractionBuilderImpl(name => new XTouchDnD<ScaleTouchData, ScaleTouchDataImpl>(2, logger,\n        new ScaleTouchDataImpl(), name, undefined, true))\n        .then(data => data.scalingRatio(pxTolerance) !== 0)\n        .name(scale.name)\n        .build();\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TransitionBase} from \"./TransitionBase\";\nimport type {EventType} from \"../../api/fsm/EventType\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\n\n/**\n * This transition corresponds to the user moving a mouse wheel or a similar input device.\n * @category FSM Transition\n */\nexport class WheelTransition extends TransitionBase<WheelEvent> {\n    private static readonly acceptedEvents: ReadonlySet<EventType> = new Set([\"wheel\"]);\n\n    /**\n     * Creates the transition.\n     * @param srcState - The source state of the transition\n     * @param tgtState - The output state of the transition\n     * @param action - The action to execute when going through the transition\n     * @param guard - The guard to fulfil to execute the transition\n     */\n    public constructor(srcState: OutputState, tgtState: InputState,\n                       action?: (evt: WheelEvent) => void, guard?: (evt: WheelEvent) => boolean) {\n        super(srcState, tgtState, action, guard);\n    }\n\n    public accept(event: Event): event is WheelEvent {\n        return event instanceof WheelEvent && this.getAcceptedEvents().has(event.type as EventType);\n    }\n\n    public getAcceptedEvents(): ReadonlySet<EventType> {\n        return WheelTransition.acceptedEvents;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {PointDataImpl} from \"./PointDataImpl\";\nimport type {WheelData} from \"../../api/interaction/WheelData\";\n\n/**\n * Single point interaction data whith mousewheel implementation with write accesses.\n * @category Interaction Data\n */\nexport class WheelDataImpl extends PointDataImpl implements WheelData {\n    private deltaModeData = 0;\n\n    private deltaXData = 0;\n\n    private deltaYData = 0;\n\n    private deltaZData = 0;\n\n    public override flush(): void {\n        super.flush();\n        this.deltaModeData = 0;\n        this.deltaXData = 0;\n        this.deltaYData = 0;\n        this.deltaZData = 0;\n    }\n\n    public override copy(data: WheelData): void {\n        super.copy(data);\n        /*\n         * Cannot use Object.assign because of a strange implementation of Event\n         * that prevents accessing the properties\n         */\n        this.deltaXData = data.deltaX;\n        this.deltaYData = data.deltaY;\n        this.deltaZData = data.deltaZ;\n        this.deltaModeData = data.deltaMode;\n    }\n\n    public get deltaMode(): number {\n        return this.deltaModeData;\n    }\n\n    public get deltaX(): number {\n        return this.deltaXData;\n    }\n\n    public get deltaY(): number {\n        return this.deltaYData;\n    }\n\n    public get deltaZ(): number {\n        return this.deltaZData;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {WheelTransition} from \"../../fsm/WheelTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {WheelDataImpl} from \"../WheelDataImpl\";\nimport type {WheelData} from \"../../../api/interaction/WheelData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface WheelFSMHandler extends FSMDataHandler {\n    initToMoved(event: WheelEvent): void;\n}\n\n/**\n * The FSM for wheel interactions\n * @category FSM\n */\nexport class WheelFSM extends FSMImpl<WheelFSMHandler> {\n    /**\n     * Creates the FSM\n     * @param logger - The logger to use for this interaction\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(logger: Logger, dataHandler: WheelFSMHandler) {\n        super(logger, dataHandler);\n\n        new WheelTransition(this.initState, this.addTerminalState(\"moved\"),\n            (evt: WheelEvent): void => {\n                this.dataHandler?.initToMoved(evt);\n            });\n    }\n}\n\n/**\n * The mouse wheel interaction\n * @category Interaction Library\n */\nexport class Wheel extends InteractionBase<WheelData, WheelDataImpl, WheelFSM> {\n    /**\n     * Creates the interaction.\n     * @param logger - The logger to use for this interaction\n     * @param fsm - The optional FSM provided for the interaction\n     * @param data - The interaction data to use\n     * @param name - The name of the user interaction\n     */\n    public constructor(logger: Logger, fsm?: WheelFSM, data?: WheelDataImpl, name?: string) {\n        const handler: WheelFSMHandler = {\n            \"initToMoved\": (evt: WheelEvent): void => {\n                this._data.copy(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(fsm ?? new WheelFSM(logger, handler), data ?? new WheelDataImpl(), logger, name ?? Wheel.name);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"./FSMImpl\";\nimport type {FSMDataHandler} from \"./FSMDataHandler\";\nimport type {ConcurrentFSM} from \"../../api/fsm/ConcurrentFSM\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {FSMHandler} from \"../../api/fsm/FSMHandler\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\nimport type {Logger} from \"../../api/logging/Logger\";\n\n/**\n * A concurrent FSM: an FSM that contains multiple FSMs where only one of them can run at\n * the same time. This is thus a XOR concurrent FSM.\n * If one FSM has started, the other ones cannot start.\n * @category FSM\n */\nexport class ConcurrentXOrFSM<F extends FSM, T extends FSMDataHandler> extends FSMImpl<T> implements ConcurrentFSM<F> {\n    /**\n     * The main fsms\n     */\n    private readonly _conccurFSMs: ReadonlyArray<F>;\n\n    /**\n     * Creates the FSM\n     * @param fsms - The main concurrent FSMs\n     * @param logger - The logger to use for logging FSM messages\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(fsms: ReadonlyArray<F>, logger: Logger, dataHandler?: T) {\n        if (new Set(fsms.map(fsm => fsm.constructor.name)).size !== fsms.length) {\n            throw new Error(\"Cannot create an XOR interaction using two interactions of the same type\");\n        }\n\n        super(logger, dataHandler);\n\n        const handler: FSMHandler = {\n            \"fsmStarts\": (): void => {\n                this.onStarting();\n            },\n            \"fsmUpdates\": (): void => {\n                this.onUpdating();\n            },\n            \"fsmStops\": (): void => {\n                this.onTerminating();\n            },\n            \"fsmCancels\": (): void => {\n                this.onCancelling();\n            },\n            \"fsmError\": (err: unknown): void => {\n                this.notifyHandlerOnError(err);\n            }\n        };\n        this._conccurFSMs = Array.from(fsms);\n        for (const fsm of this._conccurFSMs) {\n            fsm.addHandler(handler);\n        }\n    }\n\n    public override process(event: Event): boolean {\n        const startedFSM = this._conccurFSMs.find(fsm => fsm.started);\n        if (startedFSM === undefined) {\n            return this._conccurFSMs.some(conccurFSM => conccurFSM.process(event));\n        }\n        return startedFSM.process(event);\n    }\n\n    public getAllConccurFSMs(): ReadonlyArray<F> {\n        return Array.from(this._conccurFSMs);\n    }\n\n    public override get started(): boolean {\n        return this._conccurFSMs.some(fsm => fsm.started);\n    }\n\n    // eslint-disable-next-line accessor-pairs\n    public override set log(log: boolean) {\n        super.log = log;\n        for (const fsm of this._conccurFSMs) {\n            fsm.log = log;\n        }\n    }\n\n    public override uninstall(): void {\n        super.uninstall();\n        for (const fsm of this._conccurFSMs) {\n            fsm.uninstall();\n        }\n    }\n\n    public override fullReinit(): void {\n        for (const fsm of this._conccurFSMs) {\n            fsm.fullReinit();\n        }\n        super.fullReinit();\n    }\n\n    public override reinit(): void {\n        for (const fsm of this._conccurFSMs) {\n            fsm.reinit();\n        }\n        super.reinit();\n    }\n\n    public override acceptVisitor(visitor: VisitorFSM): void {\n        visitor.visitXOrConcurrentFSM(this);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {ConcurrentInteraction} from \"./ConcurrentInteraction\";\nimport {ConcurrentXOrFSM} from \"../fsm/ConcurrentXOrFSM\";\nimport type {Flushable} from \"./Flushable\";\nimport type {InteractionBase, InteractionDataImplType} from \"./InteractionBase\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {InteractionDataType} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../fsm/FSMDataHandler\";\n\n/**\n * The Or user interaction. This is an XOr. Either one of the two interactions\n * can run at a given instant.\n * @typeParam I1 - The type of the first interaction\n * @typeParam I2 - The type of the second interaction\n * @typeParam D1 - The type of the first interaction data\n * @typeParam D1Impl - The class of the first interaction data\n * @typeParam D2Impl - The class of the second interaction data\n * @category Interaction Library\n */\nexport class Or<\n    I1 extends InteractionBase<D1, D1Impl, FSM>,\n    I2 extends InteractionBase<D2, D2Impl, FSM>,\n    D1 extends InteractionData = InteractionDataType<I1>,\n    D2 extends InteractionData = InteractionDataType<I2>,\n    D1Impl extends D1 & Flushable = InteractionDataImplType<I1>,\n    D2Impl extends D2 & Flushable = InteractionDataImplType<I2>>\n    extends ConcurrentInteraction<D1 | D2, D1Impl | D2Impl, ConcurrentXOrFSM<FSM, FSMDataHandler>> {\n    private readonly i1: I1;\n\n    private readonly i2: I2;\n\n    public constructor(i1: I1, i2: I2, logger: Logger) {\n        const handler: FSMDataHandler = {\n            \"reinitData\": () => {}\n        };\n        super(new ConcurrentXOrFSM([i1.fsm, i2.fsm], logger, handler), {\n            \"flush\": () => {}\n        } as D1Impl | D2Impl, logger, `${i1.name}-${i2.name}`);\n        this.i1 = i1;\n        this.i2 = i2;\n    }\n\n    public override get data(): D1 | D2 {\n        return this.i1.fsm.started ? this.i1.data : this.i2.data;\n    }\n\n    public override uninstall(): void {\n        this.i1.uninstall();\n        this.i2.uninstall();\n    }\n\n    public override reinit(): void {\n        this.i1.reinit();\n        this.i2.reinit();\n        super.reinit();\n    }\n\n    public override fullReinit(): void {\n        this.i1.fullReinit();\n        this.i2.fullReinit();\n        super.fullReinit();\n    }\n\n    public override reinitData(): void {\n        this.i1.reinitData();\n        this.i2.reinitData();\n        super.reinitData();\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\nimport type {Flushable} from \"./Flushable\";\nimport type {ThenData} from \"../../api/interaction/ThenData\";\n\n/**\n * The implementation of ThenData\n * @typeParam DX - The types of the sub interaction data.\n * @category Interaction Data\n */\nexport class ThenDataImpl<DX extends Array<Flushable>> implements ThenData<DX>, Flushable {\n    public readonly dx: DX;\n\n    public constructor(dx: DX) {\n        this.dx = dx;\n    }\n\n    public flush(): void {\n        for (const data of this.dx) {\n            data.flush();\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"./FSMImpl\";\nimport {StdState} from \"./StdState\";\nimport {SubFSMTransition} from \"./SubFSMTransition\";\nimport {TerminalState} from \"./TerminalState\";\nimport type {FSMDataHandler} from \"./FSMDataHandler\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\nimport type {Logger} from \"../../api/logging/Logger\";\n\n/**\n * An FSM that executes a serie of sub-FSMs.\n * @category FSM\n */\nexport class ThenFSM<T extends FSMDataHandler> extends FSMImpl<T> {\n    public constructor(fsms: Array<FSM>, logger: Logger) {\n        super(logger);\n\n        let currentState: OutputState = this.initState;\n        const last = fsms.length - 1;\n\n        for (const [i, fsm] of fsms.entries()) {\n            if (i === last) {\n                new SubFSMTransition(currentState, new TerminalState(this, i.toString()), fsm);\n            } else {\n                const state = new StdState(this, i.toString());\n                new SubFSMTransition(currentState, state, fsm);\n                currentState = state;\n            }\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {InteractionBase} from \"./InteractionBase\";\nimport {ThenDataImpl} from \"./ThenDataImpl\";\nimport {ThenFSM} from \"../fsm/ThenFSM\";\nimport type {Flushable} from \"./Flushable\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {Interaction, InteractionsDataTypes} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {ThenData} from \"../../api/interaction/ThenData\";\nimport type {Logger} from \"../../api/logging/Logger\";\n\n/**\n * A user interaction composed of a serie of sub user interactions.\n * @category Interaction Library\n */\nexport class Then<\n    IX extends Array<Interaction<InteractionData>>,\n    DX extends Array<InteractionData> = InteractionsDataTypes<IX>>\n    extends InteractionBase<ThenData<DX>, ThenDataImpl<Array<Flushable> & DX>, FSM> {\n\n    private readonly ix: IX;\n\n    public constructor(ix: IX, logger: Logger) {\n        super(new ThenFSM(ix.map(inter => inter.fsm), logger),\n            new ThenDataImpl(ix.map(inter => inter.data) as unknown as Array<Flushable> & DX), logger, \"\");\n        this.ix = ix;\n    }\n\n    public override uninstall(): void {\n        super.uninstall();\n        for (const inter of this.ix) {\n            inter.uninstall();\n        }\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        for (const inter of this.ix) {\n            inter.reinit();\n        }\n    }\n\n    public override fullReinit(): void {\n        super.fullReinit();\n        for (const inter of this.ix) {\n            inter.fullReinit();\n        }\n    }\n\n    public override reinitData(): void {\n        super.reinitData();\n        for (const inter of this.ix) {\n            inter.reinitData();\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {LogLevel} from \"../../api/logging/LogLevel\";\n\n/**\n * The logging item\n * @category Logging\n */\nexport class LoggingData {\n    public readonly name: string;\n\n    public readonly sessionID: string;\n\n    public readonly date: number;\n\n    public readonly msg: string;\n\n    public readonly level: LogLevel;\n\n    public readonly type: \"ERR\" | \"INFO\";\n\n    public readonly stack: string | undefined;\n\n    public readonly frontVersion: string | undefined;\n\n    public constructor(date: number, msg: string, level: LogLevel, name: string, type: \"ERR\" | \"INFO\",\n                       sessionID: string, stack?: string, frontVersion?: string) {\n        this.frontVersion = frontVersion;\n        this.stack = stack;\n        this.sessionID = sessionID;\n        this.type = type;\n        this.name = name;\n        this.level = level;\n        this.msg = msg;\n        this.date = date;\n    }\n\n    public toString(): string {\n        const withstack = this.stack === undefined ? \"\" : `, ${this.stack}`;\n        const withversion = this.frontVersion === undefined ? \"\" : ` ${this.frontVersion}`;\n        return `${this.type}${withversion} [${this.sessionID}] [${this.level}:${this.name}] at ${this.date}: '${this.msg}'${withstack}`;\n    }\n}\n\n/**\n * A logging usage item\n * @category Logging\n */\nexport class UsageLog {\n    public name: string;\n\n    public readonly sessionID: string;\n\n    public readonly date: number;\n\n    public duration: number;\n\n    public cancelled: boolean;\n\n    public readonly frontVersion: string | undefined;\n\n    public constructor(name: string, sessionID: string, date: number, frontVersion?: string) {\n        this.frontVersion = frontVersion;\n        this.date = date;\n        this.sessionID = sessionID;\n        this.name = name;\n        this.duration = 0;\n        this.cancelled = false;\n    }\n\n    public toString(): string {\n        const withversion = this.frontVersion === undefined ? \"\" : ` v:${this.frontVersion}`;\n        return `Usage.${withversion} id:${this.sessionID} binding:${this.name} ` +\n            `date:${this.date} duration:${this.duration} cancelled:${String(this.cancelled)}`;\n    }\n}\n\n/**\n * An implementation of the logger\n * @category Logging\n */\nexport class LoggerImpl implements Logger {\n    public writeConsole: boolean;\n\n    public serverAddress: string | undefined;\n\n    public readonly sessionID: string;\n\n    public readonly frontVersion: string | undefined;\n\n    public ongoingBindings: Array<UsageLog>;\n\n    public constructor(version?: string) {\n        this.frontVersion = version;\n        this.ongoingBindings = [];\n        this.serverAddress = undefined;\n        this.writeConsole = true;\n        this.sessionID = Date.now().toString(36) + Math.random().toString(36)\n            .slice(2, 8);\n    }\n\n    private processLoggingData(data: LoggingData): void {\n        if (this.writeConsole) {\n            // eslint-disable-next-line no-console\n            console.log(data.toString());\n        }\n\n        if (this.serverAddress !== undefined && data.type === \"ERR\") {\n            const rq = new XMLHttpRequest();\n            rq.open(\"POST\", `${this.serverAddress}/api/err`, true);\n            rq.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n            rq.send(JSON.stringify(data));\n        }\n    }\n\n    private formatError(ex: unknown): string {\n        if (ex instanceof Error) {\n            return `${ex.message} ${ex.stack ?? \"\"}`;\n        }\n        return String(ex);\n    }\n\n    public logBindingErr(msg: string, ex: unknown, bindingName = \"\"): void {\n        this.processLoggingData(new LoggingData(performance.now(), msg,\n            \"binding\", bindingName, \"ERR\", this.sessionID, this.formatError(ex), this.frontVersion));\n    }\n\n    public logBindingMsg(msg: string, bindingName = \"\"): void {\n        this.processLoggingData(new LoggingData(performance.now(), msg, \"binding\", bindingName, \"INFO\",\n            this.sessionID, undefined, this.frontVersion));\n    }\n\n    public logCmdErr(msg: string, ex: unknown, cmdName = \"\"): void {\n        this.processLoggingData(new LoggingData(performance.now(), msg,\n            \"command\", cmdName, \"ERR\", this.sessionID, this.formatError(ex), this.frontVersion));\n    }\n\n    public logCmdMsg(msg: string, cmdName = \"\"): void {\n        this.processLoggingData(new LoggingData(performance.now(), msg, \"command\", cmdName, \"INFO\",\n            this.sessionID, undefined, this.frontVersion));\n    }\n\n    public logInteractionErr(msg: string, ex: unknown, interactionName = \"\"): void {\n        this.processLoggingData(new LoggingData(performance.now(), msg,\n            \"interaction\", interactionName, \"ERR\", this.sessionID, this.formatError(ex), this.frontVersion));\n    }\n\n    public logInteractionMsg(msg: string, interactionName = \"\"): void {\n        this.processLoggingData(new LoggingData(performance.now(), msg, \"interaction\", interactionName, \"INFO\",\n            this.sessionID, undefined, this.frontVersion));\n    }\n\n    public logBindingStart(bindingName: string): void {\n        this.ongoingBindings.push(new UsageLog(bindingName, this.sessionID, performance.now(), this.frontVersion));\n    }\n\n    public logBindingEnd(bindingName: string, cancelled: boolean): void {\n        const logs = this.ongoingBindings.filter(bind => bindingName.includes(bind.name));\n\n        // Removing these logs\n        this.ongoingBindings = this.ongoingBindings.filter(bind => !logs.includes(bind));\n\n        if (logs.length === 1) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const log = logs[0]!;\n            log.name = bindingName;\n            log.duration = performance.now() - log.date;\n            log.cancelled = cancelled;\n\n            if (this.writeConsole) {\n                // eslint-disable-next-line no-console\n                console.log(log.toString());\n            }\n\n            if (this.serverAddress !== undefined) {\n                const rq = new XMLHttpRequest();\n                rq.open(\"POST\", `${this.serverAddress}/api/usage`, true);\n                rq.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n                rq.send(JSON.stringify(log));\n            }\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General export function License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General export function License for more details.\n * You should have received a copy of the GNU General export function License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {Bindings} from \"../../api/binding/Bindings\";\nimport {DwellSpringAnimation} from \"../animation/DwellSpringAnimation\";\nimport {KeysBinder} from \"../binder/KeysBinder\";\nimport {UpdateBinder} from \"../binder/UpdateBinder\";\nimport {Redo} from \"../command/library/Redo\";\nimport {Undo} from \"../command/library/Undo\";\nimport {BoxChecked} from \"../interaction/library/BoxChecked\";\nimport {ButtonPressed} from \"../interaction/library/ButtonPressed\";\nimport {Click} from \"../interaction/library/Click\";\nimport {Clicks} from \"../interaction/library/Clicks\";\nimport {ColorPicked} from \"../interaction/library/ColorPicked\";\nimport {ComboBoxSelected} from \"../interaction/library/ComboBoxSelected\";\nimport {DatePicked} from \"../interaction/library/DatePicked\";\nimport {DnD} from \"../interaction/library/DnD\";\nimport {DoubleClick} from \"../interaction/library/DoubleClick\";\nimport {DragLock} from \"../interaction/library/DragLock\";\nimport {HyperLinkClicked} from \"../interaction/library/HyperLinkClicked\";\nimport {KeyDown} from \"../interaction/library/KeyDown\";\nimport {KeysDown} from \"../interaction/library/KeysDown\";\nimport {KeysTyped} from \"../interaction/library/KeysTyped\";\nimport {KeyTyped} from \"../interaction/library/KeyTyped\";\nimport {KeyUp} from \"../interaction/library/KeyUp\";\nimport {LongMouseDown} from \"../interaction/library/LongMouseDown\";\nimport {LongTouch} from \"../interaction/library/LongTouch\";\nimport {MouseDown} from \"../interaction/library/MouseDown\";\nimport {MouseEnter} from \"../interaction/library/MouseEnter\";\nimport {MouseLeave} from \"../interaction/library/MouseLeave\";\nimport {MouseMove} from \"../interaction/library/MouseMove\";\nimport {MouseUp} from \"../interaction/library/MouseUp\";\nimport {MultiTouch} from \"../interaction/library/MultiTouch\";\nimport {bottomPan, hPan, leftPan, rightPan, topPan, vPan} from \"../interaction/library/Pans\";\nimport {Scroll} from \"../interaction/library/Scroll\";\nimport {SpinnerChanged} from \"../interaction/library/SpinnerChanged\";\nimport {Tap} from \"../interaction/library/Tap\";\nimport {TextInputChanged} from \"../interaction/library/TextInputChanged\";\nimport {TouchDnD} from \"../interaction/library/TouchDnD\";\nimport {TouchStart} from \"../interaction/library/TouchStart\";\nimport {twoBottomPan, twoHPan, twoLeftPan, twoRightPan, twoTopPan, twoVPan} from \"../interaction/library/TwoPans\";\nimport {rotate, scale} from \"../interaction/library/TwoTouch\";\nimport {Wheel} from \"../interaction/library/Wheel\";\nimport {ThreeTouchDnD, FourTouchDnD, twoTouch} from \"../interaction/library/XTouch\";\nimport {Or} from \"../interaction/Or\";\nimport {Then} from \"../interaction/Then\";\nimport {LoggerImpl} from \"../logging/LoggerImpl\";\nimport type {EltRef, Widget} from \"../../api/binder/BaseBinderBuilder\";\nimport type {BaseUpdateBinder} from \"../../api/binder/BaseUpdateBinder\";\nimport type {Binding} from \"../../api/binding/Binding\";\nimport type {\n    PartialAnchorTypedBinder,\n    PartialButtonTypedBinder,\n    PartialInputTypedBinder,\n    PartialKeyTypedBinder,\n    PartialKeysTypedBinder,\n    PartialMultiTouchTypedBinder,\n    PartialPointTypedBinder,\n    PartialPointsTypedBinder,\n    PartialPointSrcTgtTypedBinder,\n    PartialScrollTypedBinder,\n    PartialSelectTypedBinder,\n    PartialSpinnerTypedBinder,\n    PartialTapsTypedBinder,\n    PartialTextInputTypedBinder,\n    PartialTouchTypedBinder,\n    PartialTouchSrcTgtTypedBinder,\n    PartialUpdatePointTypedBinder,\n    PartialWheelTypedBinder,\n    PartialPointOrTouchTypedBinder,\n    PartialTwoTouchTypedBinder,\n    PartialThreeTouchTypedBinder,\n    PartialFourTouchTypedBinder,\n    PartialRotateTypedBinder,\n    PartialTwoPanTypedBinder,\n    PartialScaleTypedBinder,\n    PartialThenBinder,\n    PartialPointsOrTapsTypedBinder,\n    PartialTouchMouseDnDTypedBinder\n} from \"../../api/binding/Bindings\";\nimport type {BindingsObserver} from \"../../api/binding/BindingsObserver\";\nimport type {VisitorBinding} from \"../../api/binding/VisitorBinding\";\nimport type {LinterRule} from \"../../api/checker/Checker\";\nimport type {Interaction} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {GeneralTwoTouchData} from \"../../api/interaction/TwoTouchData\";\nimport type {WidgetData} from \"../../api/interaction/WidgetData\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {UndoHistoryBase} from \"../../api/undo/UndoHistoryBase\";\nimport type {CommandBase} from \"../command/CommandBase\";\nimport type {GeneralTwoTouchDataImpl} from \"../interaction/GeneralTwoTouchDataImpl\";\nimport type {TwoPan} from \"../interaction/library/TwoPans\";\nimport type {Rotate, Scale} from \"../interaction/library/TwoTouch\";\nimport type {XTouchDnD} from \"../interaction/library/XTouch\";\n\n/**\n * Implementation of Bindings. This class to be used in DI\n * for creating binders and bindings.\n * @category Binding\n */\nexport class BindingsImpl<H extends UndoHistoryBase> extends Bindings<H> {\n    protected observer: BindingsObserver | undefined;\n\n    protected readonly undoHistoryData: H;\n\n    public readonly logger: Logger;\n\n    public constructor(history: H, logger?: Logger) {\n        super();\n        this.undoHistoryData = history;\n        this.logger = logger ?? new LoggerImpl();\n    }\n\n    public setLinterRules(...rules: ReadonlyArray<LinterRule>): void {\n        this.observer?.checker.setLinterRules(...rules);\n    }\n\n    public get undoHistory(): H {\n        return this.undoHistoryData;\n    }\n\n    public nodeBinder<A>(accInit?: A): BaseUpdateBinder {\n        return new UpdateBinder<CommandBase, Interaction<InteractionData>, A>(this.undoHistory,\n            this.logger, this.observer, undefined, accInit) as BaseUpdateBinder;\n    }\n\n    public buttonBinder<A>(accInit?: A): PartialButtonTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<ButtonPressed, A>(() => new ButtonPressed(this.logger));\n    }\n\n    public checkboxBinder<A>(accInit?: A): PartialInputTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<BoxChecked, A>(() => new BoxChecked(this.logger));\n    }\n\n    public colorPickerBinder<A>(accInit?: A): PartialInputTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<ColorPicked, A>(() => new ColorPicked(this.logger));\n    }\n\n    public comboBoxBinder<A>(accInit?: A): PartialSelectTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<ComboBoxSelected, A>(() => new ComboBoxSelected(this.logger));\n    }\n\n    public spinnerBinder<A>(accInit?: A): PartialSpinnerTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<SpinnerChanged, A>(() => new SpinnerChanged(this.logger));\n    }\n\n    public dateBinder<A>(accInit?: A): PartialInputTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<DatePicked, A>(() => new DatePicked(this.logger));\n    }\n\n    public hyperlinkBinder<A>(accInit?: A): PartialAnchorTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<HyperLinkClicked, A>(() => new HyperLinkClicked(this.logger));\n    }\n\n    public textInputBinder<A>(timeout?: number, accInit?: A): PartialTextInputTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TextInputChanged, A>(() => new TextInputChanged(this.logger, timeout));\n    }\n\n    public touchDnDBinder<A>(cancellable: boolean, accInit?: A): PartialTouchSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchDnD, A>(() => new TouchDnD(this.logger, cancellable));\n    }\n\n    public override touchStartBinder<A>(accInit?: A): PartialTouchTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchStart, A>(() => new TouchStart(this.logger));\n    }\n\n    public reciprocalTouchDnDBinder<A>(handle: EltRef<SVGCircleElement>, spring: EltRef<SVGLineElement>, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A> {\n        const anim = new DwellSpringAnimation(handle, spring);\n\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchDnD, A>(() => new TouchDnD(this.logger, true))\n            .on(handle)\n            .then((_c, i) => {\n                anim.process(i);\n            })\n            .endOrCancel(() => {\n                anim.end();\n            });\n    }\n\n    public reciprocalMouseOrTouchDnD<A>(handle: EltRef<SVGCircleElement>, spring: EltRef<SVGLineElement>,\n                                        accInit?: A): PartialTouchMouseDnDTypedBinder<A> {\n        const anim = new DwellSpringAnimation(handle, spring);\n\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Or<TouchDnD, DnD>, A>(() => new Or<TouchDnD, DnD>(\n            new TouchDnD(this.logger, true), new DnD(true, this.logger), this.logger))\n            .on(handle)\n            .then((_c, i) => {\n                anim.process(i);\n            })\n            .endOrCancel(() => {\n                anim.end();\n            });\n    }\n\n    public multiTouchBinder<A>(nbTouches: number, accInit?: A): PartialMultiTouchTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<MultiTouch, A>(() => new MultiTouch(nbTouches, false, this.logger));\n    }\n\n    public twoTouchBinder<A>(accInit?: A): PartialTwoTouchTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<XTouchDnD<GeneralTwoTouchData, GeneralTwoTouchDataImpl>, A>(twoTouch(this.logger));\n    }\n\n    public threeTouchBinder<A>(accInit?: A): PartialThreeTouchTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<ThreeTouchDnD, A>(() => new ThreeTouchDnD(this.logger));\n    }\n\n    public fourTouchBinder<A>(accInit?: A): PartialFourTouchTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<FourTouchDnD, A>(() => new FourTouchDnD(this.logger));\n    }\n\n    public tapBinder<A>(nbTap: number, accInit?: A): PartialTapsTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Tap, A>(() => new Tap(nbTap, this.logger));\n    }\n\n    public longTouchBinder<A>(duration: number, accInit?: A): PartialTouchTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<LongTouch, A>(() => new LongTouch(duration, this.logger));\n    }\n\n    public panBinder<A>(cancellable: boolean, accInit?: A): PartialTouchSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchDnD, A>(() => new TouchDnD(this.logger, cancellable));\n    }\n\n    public panVerticalBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchDnD, A>(vPan(this.logger, cancellable, pxTolerance, minLength, minVelocity));\n    }\n\n    public panHorizontalBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchDnD, A>(hPan(this.logger, cancellable, pxTolerance, minLength, minVelocity));\n    }\n\n    public panLeftBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchDnD, A>(leftPan(this.logger, cancellable, pxTolerance, minLength, minVelocity));\n    }\n\n    public panRightBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchDnD, A>(rightPan(this.logger, cancellable, pxTolerance, minLength, minVelocity));\n    }\n\n    public panTopBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchDnD, A>(topPan(this.logger, cancellable, pxTolerance, minLength, minVelocity));\n    }\n\n    public panBottomBinder<A>(pxTolerance: number, cancellable: boolean, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTouchSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TouchDnD, A>(bottomPan(this.logger, cancellable, pxTolerance, minLength, minVelocity));\n    }\n\n    public twoPanVerticalBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TwoPan, A>(twoVPan(this.logger, pxTolerance, minLength, minVelocity));\n    }\n\n    public twoPanHorizontalBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TwoPan, A>(twoHPan(this.logger, pxTolerance, minLength, minVelocity));\n    }\n\n    public twoPanLeftBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TwoPan, A>(twoLeftPan(this.logger, pxTolerance, minLength, minVelocity));\n    }\n\n    public twoPanRightBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TwoPan, A>(twoRightPan(this.logger, pxTolerance, minLength, minVelocity));\n    }\n\n    public twoPanTopBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TwoPan, A>(twoTopPan(this.logger, pxTolerance, minLength, minVelocity));\n    }\n\n    public twoPanBottomBinder<A>(pxTolerance: number, minLength?: number, minVelocity?: number, accInit?: A):\n    PartialTwoPanTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<TwoPan, A>(twoBottomPan(this.logger, pxTolerance, minLength, minVelocity));\n    }\n\n    public rotateBinder<A>(pxTolerance: number, accInit?: A): PartialRotateTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Rotate, A>(rotate(this.logger, pxTolerance));\n    }\n\n    public scaleBinder<A>(pxTolerance: number, accInit?: A): PartialScaleTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Scale, A>(scale(this.logger, pxTolerance));\n    }\n\n    public clickBinder<A>(accInit?: A): PartialPointTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Click, A>(() => new Click(this.logger));\n    }\n\n    public dbleClickBinder<A>(accInit?: A): PartialUpdatePointTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<DoubleClick, A>(() => new DoubleClick(this.logger));\n    }\n\n    public mouseUpBinder<A>(accInit?: A): PartialPointTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<MouseUp, A>(() => new MouseUp(this.logger));\n    }\n\n    public mouseDownBinder<A>(accInit?: A): PartialPointTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<MouseDown, A>(() => new MouseDown(this.logger));\n    }\n\n    public longMouseDownBinder<A>(duration: number, accInit?: A): PartialUpdatePointTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<LongMouseDown, A>(() => new LongMouseDown(duration, this.logger));\n    }\n\n    public clicksBinder<A>(nbClicks: number, accInit?: A): PartialPointsTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Clicks, A>(() => new Clicks(nbClicks, this.logger));\n    }\n\n    public mouseLeaveBinder<A>(withBubbling: boolean, accInit?: A): PartialPointTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<MouseLeave, A>(() => new MouseLeave(withBubbling, this.logger));\n    }\n\n    public mouseEnterBinder<A>(withBubbling: boolean, accInit?: A): PartialPointTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<MouseEnter, A>(() => new MouseEnter(withBubbling, this.logger));\n    }\n\n    public mouseMoveBinder<A>(accInit?: A): PartialPointTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<MouseMove, A>(() => new MouseMove(this.logger));\n    }\n\n    public wheelBinder<A>(accInit?: A): PartialWheelTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Wheel, A>(() => new Wheel(this.logger));\n    }\n\n    public scrollBinder<A>(accInit?: A): PartialScrollTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Scroll, A>(() => new Scroll(this.logger));\n    }\n\n    public dndBinder<A>(cancellable: boolean, accInit?: A): PartialPointSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<DnD, A>(() => new DnD(cancellable, this.logger));\n    }\n\n    public reciprocalDndBinder<A>(handle: EltRef<SVGCircleElement>, spring: EltRef<SVGLineElement>, accInit?: A): PartialPointSrcTgtTypedBinder<A> {\n        const anim = new DwellSpringAnimation(handle, spring);\n\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<DnD, A>(() => new DnD(true, this.logger))\n            .on(handle)\n            .then((_c, i) => {\n                anim.process(i);\n            })\n            .endOrCancel(() => {\n                anim.end();\n            });\n    }\n\n    public dragLockBinder<A>(accInit?: A): PartialPointSrcTgtTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<DragLock, A>(() => new DragLock(this.logger));\n    }\n\n    public keyUpBinder<A>(modifierAccepted: boolean, accInit?: A): PartialKeyTypedBinder<A> {\n        return new KeysBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<KeyUp, A>(() => new KeyUp(this.logger, modifierAccepted));\n    }\n\n    public keyDownBinder<A>(modifierAccepted: boolean, accInit?: A): PartialKeyTypedBinder<A> {\n        return new KeysBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<KeyDown, A>(() => new KeyDown(this.logger, modifierAccepted));\n    }\n\n    public keysDownBinder<A>(accInit?: A): PartialKeysTypedBinder<A> {\n        return new KeysBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<KeysDown, A>(() => new KeysDown(this.logger));\n    }\n\n    public keysTypeBinder<A>(accInit?: A): PartialKeysTypedBinder<A> {\n        return new KeysBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<KeysTyped, A>(() => new KeysTyped(this.logger));\n    }\n\n    public keyTypeBinder<A>(accInit?: A): PartialKeyTypedBinder<A> {\n        return new KeysBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<KeyTyped, A>(() => new KeyTyped(this.logger));\n    }\n\n    public mouseDownOrTouchStartBinder<A>(accInit?: A): PartialPointOrTouchTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Or<MouseDown, TouchStart>, A>(() => new Or(new MouseDown(this.logger), new TouchStart(this.logger), this.logger));\n    }\n\n    public tapsOrClicksBinder<A>(nbTap: number, accInit?: A): PartialPointsOrTapsTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Or<Tap, Clicks>, A>(() => new Or(new Tap(nbTap, this.logger), new Clicks(nbTap, this.logger), this.logger));\n    }\n\n    public  longpressOrTouchBinder<A>(duration: number, accInit?: A): PartialPointOrTouchTypedBinder<A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Or<LongMouseDown, LongTouch>, A>(\n            () => new Or(new LongMouseDown(duration, this.logger), new LongTouch(duration, this.logger), this.logger));\n    }\n\n    public combine<IX extends Array<Interaction<InteractionData>>, A>(interactions: IX, accInit?: A): PartialThenBinder<IX, A> {\n        return new UpdateBinder(this.undoHistory, this.logger, this.observer, undefined, accInit)\n            .usingInteraction<Then<IX>, A>(() => new Then<IX>(interactions, this.logger));\n    }\n\n    public undoRedoBinder(undo: Widget<HTMLButtonElement>, redo: Widget<HTMLButtonElement>,\n                          catchFn: ((err: unknown) => void) = ((): void => {})):\n        [Binding<Undo, Interaction<WidgetData<HTMLButtonElement>>, unknown>,\n            Binding<Redo, Interaction<WidgetData<HTMLButtonElement>>, unknown>] {\n        return [\n            this.buttonBinder()\n                .on(undo)\n                .toProduce(() => new Undo(this.undoHistory))\n                .catch(catchFn)\n                .bind(),\n            this.buttonBinder()\n                .on(redo)\n                .toProduce(() => new Redo(this.undoHistory))\n                .catch(catchFn)\n                .bind()\n        ];\n    }\n\n    public clear(): void {\n        this.observer?.clearObservedBindings();\n        this.undoHistory.clear();\n    }\n\n    public setBindingObserver(obs?: BindingsObserver): void {\n        this.observer?.clearObservedBindings();\n        this.observer = obs;\n    }\n\n    public override acceptVisitor(visitor: VisitorBinding): void {\n        visitor.visitBindings(this);\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CommandBase} from \"./CommandBase\";\nimport type {Undoable, UndoableSnapshot} from \"../../api/undo/Undoable\";\n\n/**\n * The base class for undoable UI commands.\n * @category Command\n */\nexport abstract class UndoableCommand extends CommandBase implements Undoable {\n    public getUndoName(): string {\n        return this.constructor.name;\n    }\n\n    public getVisualSnapshot(): UndoableSnapshot {\n        return undefined;\n    }\n\n    public abstract redo(): void;\n\n    public abstract undo(): void;\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\nimport {CommandBase} from \"../CommandBase\";\n\n/**\n * A predefined command for focusing a given element\n * @category Command\n */\nexport class FocusHTMLElement extends CommandBase {\n    private readonly element: unknown;\n\n    public constructor(elt: unknown) {\n        super();\n        this.element = elt;\n    }\n\n    protected execution(): void {\n        (this.element as HTMLElement).focus();\n    }\n\n    public override canExecute(): boolean {\n        return this.element instanceof HTMLElement;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CommandBase} from \"../CommandBase\";\nimport type {UndoHistory} from \"../../../api/undo/UndoHistory\";\n\n/**\n * An Redo command that redoes the last N commands.\n * @category Command\n */\nexport class RedoNTimes extends CommandBase {\n    protected readonly history: UndoHistory;\n\n    protected readonly numberOfRedos: number;\n\n    public constructor(undoHistory: UndoHistory, numberOfRedos: number) {\n        super();\n        this.history = undoHistory;\n        this.numberOfRedos = numberOfRedos;\n    }\n\n    public override canExecute(): boolean {\n        return this.history.getRedo().length >= this.numberOfRedos;\n    }\n\n    protected execution(): void {\n        for (let i = 0; i < this.numberOfRedos; i++) {\n            this.history.redo();\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {UndoableCommand} from \"../UndoableCommand\";\n\n/**\n * An undoable command that changes the value of an object property.\n * @typeParam T - The type of the object to change\n * @typeParam S - The property of T to set\n * @category Command\n */\nexport class SetProperty<T, S extends keyof T> extends UndoableCommand {\n    protected readonly obj: T;\n\n    protected readonly prop: S;\n\n    public newvalue: T[S];\n\n    protected mementoValue: T[S] | undefined;\n\n    public constructor(obj: T, prop: S, newvalue: T[S]) {\n        super();\n        this.obj = obj;\n        this.prop = prop;\n        this.newvalue = newvalue;\n        this.mementoValue = undefined;\n    }\n\n    protected override createMemento(): void {\n        this.mementoValue = this.obj[this.prop];\n    }\n\n    protected execution(): void {\n        this.obj[this.prop] = this.newvalue;\n    }\n\n    public redo(): void {\n        this.execution();\n    }\n\n    public undo(): void {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.obj[this.prop] = this.mementoValue!;\n    }\n\n    public override getUndoName(): string {\n        return `Set '${String(this.prop)}' value: ${String(this.newvalue)}`;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {SetProperty} from \"./SetProperty\";\nimport {UndoableCommand} from \"../UndoableCommand\";\n\n/**\n * An undoable command that changes the value of a set of object properties.\n * @typeParam T - The type of the object to change\n * @category Command\n */\nexport class SetProperties<T> extends UndoableCommand {\n    public readonly obj: T;\n\n    protected _newvalues: Partial<T>;\n\n    public readonly compositeCmds: Array<SetProperty<T, keyof T>>;\n\n    public constructor(obj: T, newvalues: Partial<T>) {\n        super();\n        this.obj = obj;\n\n        this.compositeCmds = [];\n        this._newvalues = newvalues;\n        this.newvalues = newvalues;\n    }\n\n    public get newvalues(): Partial<T> {\n        return this._newvalues;\n    }\n\n    public set newvalues(value: Partial<T>) {\n        this._newvalues = value;\n\n        // eslint-disable-next-line guard-for-in,no-restricted-syntax\n        for (const key in value) {\n            this.compositeCmds.push(new SetProperty<T, keyof T>(this.obj, key, value[key] as T[keyof T]));\n        }\n    }\n\n    public override execute(): Promise<boolean> | boolean {\n        for (const cmd of this.compositeCmds) {\n            // eslint-disable-next-line no-void\n            void cmd.execute();\n        }\n        return super.execute();\n    }\n\n    protected execution(): void {}\n\n    public redo(): void {\n        for (const cmd of this.compositeCmds) {\n            cmd.redo();\n        }\n    }\n\n    public undo(): void {\n        for (const cmd of this.compositeCmds) {\n            cmd.undo();\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {UndoableCommand} from \"../UndoableCommand\";\n\n/**\n * An undoable command that transfers an element from one array to another.\n * @category Command\n */\nexport class TransferArrayItem<T> extends UndoableCommand {\n    /**\n     * The array to take the transferred element from.\n     */\n    protected _srcArray: Array<T>;\n\n    /**\n     * The array to put the transferred element in.\n     */\n    protected _tgtArray: Array<T>;\n\n    /**\n     * The index at which the element is located in the source array.\n     */\n    protected _srcIndex: number;\n\n    /**\n     * The index at which the element must be put in the target array.\n     */\n    protected _tgtIndex: number;\n\n    /**\n     * The name of the command.\n     */\n    protected readonly cmdName: string;\n\n    /**\n     * Creates the command.\n     * @param srcArray - The array to take the transferred element from.\n     * @param tgtArray - The array to put the transferred element in.\n     * @param srcIndex - The index at which the element is located in the source array.\n     * @param tgtIndex - The index at which the element must be put in the destination array.\n     * @param cmdName - The name of the command.\n     */\n    public constructor(srcArray: Array<T>,\n                       tgtArray: Array<T>,\n                       srcIndex: number,\n                       tgtIndex: number,\n                       cmdName: string) {\n        super();\n        this._srcArray = srcArray;\n        this._tgtArray = tgtArray;\n        this._srcIndex = srcIndex;\n        this._tgtIndex = tgtIndex;\n        this.cmdName = cmdName;\n    }\n\n    protected execution(): void {\n        this.redo();\n    }\n\n    public override canExecute(): boolean {\n        return (this._srcIndex >= 0 && this._srcIndex < this._srcArray.length) &&\n            (this._tgtIndex >= 0 && this._tgtIndex <= this._tgtArray.length);\n    }\n\n    public override getUndoName(): string {\n        return this.cmdName;\n    }\n\n    public redo(): void {\n        const elt = this._srcArray[this._srcIndex];\n        if (elt !== undefined) {\n            this._srcArray.splice(this._srcIndex, 1);\n            this._tgtArray.splice(this._tgtIndex, 0, elt);\n        }\n    }\n\n    public undo(): void {\n        const elt = this._tgtArray[this._tgtIndex];\n        if (elt !== undefined) {\n            this._tgtArray.splice(this._tgtIndex, 1);\n            this._srcArray.splice(this._srcIndex, 0, elt);\n        }\n    }\n\n    public get srcArray(): Array<T> {\n        return this._srcArray;\n    }\n\n    public set srcArray(value: Array<T>) {\n        this._srcArray = value;\n    }\n\n    public get tgtArray(): Array<T> {\n        return this._tgtArray;\n    }\n\n    public set tgtArray(value: Array<T>) {\n        this._tgtArray = value;\n    }\n\n    public get srcIndex(): number {\n        return this._srcIndex;\n    }\n\n    public set srcIndex(value: number) {\n        this._srcIndex = value;\n    }\n\n    public get tgtIndex(): number {\n        return this._tgtIndex;\n    }\n\n    public set tgtIndex(value: number) {\n        this._tgtIndex = value;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CommandBase} from \"../CommandBase\";\nimport type {UndoHistory} from \"../../../api/undo/UndoHistory\";\n\n/**\n * An Undo command that undoes the last N commands.\n * @category Command\n */\nexport class UndoNTimes extends CommandBase {\n    protected readonly history: UndoHistory;\n\n    protected readonly numberOfUndos: number;\n\n    public constructor(undoHistory: UndoHistory, numberOfUndos: number) {\n        super();\n        this.history = undoHistory;\n        this.numberOfUndos = numberOfUndos;\n    }\n\n    public override canExecute(): boolean {\n        return this.history.getUndo().length >= this.numberOfUndos;\n    }\n\n    protected execution(): void {\n        for (let i = 0; i < this.numberOfUndos; i++) {\n            this.history.undo();\n        }\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {CancelFSMError} from \"./CancelFSMError\";\nimport {ConcurrentAndFSM} from \"./ConcurrentAndFSM\";\nimport type {FSMDataHandler} from \"./FSMDataHandler\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {Logger} from \"../../api/logging/Logger\";\n\n/**\n * An FSM that corresponds to the ! operator.\n * DnD ! KeyTyped(\"ESC\")  uses a NotFSM where DnD gives is the main FSM\n * and KeyTyped the FSM that can cancel the FSMs.\n * @category FSM\n */\nexport class NotFSM<H extends FSMDataHandler> extends ConcurrentAndFSM<FSM, H> {\n    private readonly mainFSM: FSM;\n\n    public constructor(mainFSM: FSM, negFSM: FSM, logger: Logger) {\n        super([mainFSM], logger, [negFSM]);\n        this.mainFSM = mainFSM;\n\n        negFSM.addHandler({\n            \"fsmStops\": () => {\n                this.mainFSM.onCancelling();\n                throw new CancelFSMError();\n            }\n        });\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\nimport type {ConcurrentFSM} from \"../../api/fsm/ConcurrentFSM\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {InputState} from \"../../api/fsm/InputState\";\nimport type {OutputState} from \"../../api/fsm/OutputState\";\nimport type {State} from \"../../api/fsm/State\";\nimport type {Transition} from \"../../api/fsm/Transition\";\nimport type {VisitorFSM} from \"../../api/fsm/VisitorFSM\";\n\n/**\n * A depth-first implementation of the FSM visitor. No treatment here, just visiting.\n * To customize this visitor, extends it and override the different methods.\n * @category FSM\n */\nexport class VisitorFSMDepthFirst implements VisitorFSM {\n    private readonly visited: Set<State>;\n\n    public constructor() {\n        this.visited = new Set();\n    }\n\n    public visitAndConcurrentFSM(fsm: ConcurrentFSM<FSM>): void {\n        for (const concFSM of fsm.getAllConccurFSMs()) {\n            concFSM.acceptVisitor(this);\n        }\n    }\n\n    public visitXOrConcurrentFSM(fsm: ConcurrentFSM<FSM>): void {\n        for (const concFSM of fsm.getAllConccurFSMs()) {\n            concFSM.acceptVisitor(this);\n        }\n    }\n\n    public visitInitState(state: OutputState & State): void {\n        if (this.alreadyVisited(state)) {\n            return;\n        }\n        for (const tr of state.transitions) {\n            tr.acceptVisitor(this);\n        }\n    }\n\n    public visitState(state: OutputState & State): void {\n        if (this.alreadyVisited(state)) {\n            return;\n        }\n        for (const tr of state.transitions) {\n            tr.acceptVisitor(this);\n        }\n    }\n\n    public visitCancellingState(_state: InputState & State): void {}\n\n    public visitTerminalState(_state: InputState & State): void {}\n\n    public visitFSM(fsm: FSM): void {\n        fsm.initState.acceptVisitor(this);\n    }\n\n    public visitTransition(transition: Transition<Event>): void {\n        transition.target.acceptVisitor(this);\n    }\n\n    public visitTimeoutTransition(transition: Transition<Event>): void {\n        transition.target.acceptVisitor(this);\n    }\n\n    public clear(): void {\n        this.visited.clear();\n    }\n\n    protected alreadyVisited(state: State): boolean {\n        const already = this.visited.has(state);\n        if (!already) {\n            this.visited.add(state);\n        }\n        return already;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {ConcurrentInteraction} from \"./ConcurrentInteraction\";\nimport {NotFSM} from \"../fsm/NotFSM\";\nimport type {Flushable} from \"./Flushable\";\nimport type {InteractionBase, InteractionDataImplType} from \"./InteractionBase\";\nimport type {FSM} from \"../../api/fsm/FSM\";\nimport type {Interaction, InteractionDataType} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Logger} from \"../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../fsm/FSMDataHandler\";\n\n/**\n * An interaction that corresponds to the ! operator.\n * DnD ! KeyTyped(\"ESC\")  uses a Not interaction where DnD is the main interaction\n * and KeyTyped the one that can cancel the interactions.\n * @category Interaction Library\n */\nexport class Not<I extends InteractionBase<DI & InteractionData, DI & DImpl & Flushable, FSM>, N extends Interaction<InteractionData>,\n    DI = InteractionDataType<I>, DImpl = InteractionDataImplType<I>>\n    extends ConcurrentInteraction<DI & InteractionData, DI & DImpl & Flushable, NotFSM<FSMDataHandler>> {\n\n    private readonly mainInteraction: I;\n\n    private readonly negInteraction: N;\n\n    public constructor(i1: I, not: N, logger: Logger, name: string) {\n        super(new NotFSM(i1.fsm, not.fsm, logger), i1.data as (DI & DImpl & Flushable), logger, name);\n        this.mainInteraction = i1;\n        this.negInteraction = not;\n    }\n\n    public override uninstall(): void {\n        this.mainInteraction.uninstall();\n        this.negInteraction.uninstall();\n        super.uninstall();\n    }\n\n    public override reinit(): void {\n        this.mainInteraction.reinit();\n        this.negInteraction.reinit();\n        super.reinit();\n    }\n\n    public override fullReinit(): void {\n        this.mainInteraction.fullReinit();\n        this.negInteraction.fullReinit();\n        super.fullReinit();\n    }\n\n    public override reinitData(): void {\n        this.mainInteraction.reinitData();\n        this.negInteraction.reinitData();\n        super.reinitData();\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {FSMImpl} from \"../../fsm/FSMImpl\";\nimport {MouseTransition} from \"../../fsm/MouseTransition\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {PointDataImpl} from \"../PointDataImpl\";\nimport type {PointData} from \"../../../api/interaction/PointData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\n\ninterface ClickFSMHandler extends FSMDataHandler {\n    initToClicked(event: MouseEvent): void;\n}\n\n/**\n * The FSM of the timed click interaction\n * @category FSM\n */\nexport class TimedClickFSM extends FSMImpl<ClickFSMHandler> {\n    private currentButton: number | undefined;\n\n    private readonly buttonToConsider: number | undefined;\n\n    /**\n     * Creates the FSM\n     * @param duration - The max duration of the click\n     * @param logger - The logger to use for this interaction\n     * @param button - The button to be used\n     * @param dataHandler - The data handler the FSM will use\n     */\n    public constructor(duration: number, logger: Logger, button?: number, dataHandler?: ClickFSMHandler) {\n        super(logger, dataHandler);\n\n        if (duration <= 0) {\n            throw new Error(\"Incorrect duration\");\n        }\n\n        this.buttonToConsider = button;\n\n        const pressed = this.addStdState(\"pressed\");\n        const cancelled = this.addCancellingState(\"cancelled\");\n\n        new MouseTransition(this.initState, pressed, \"mousedown\",\n            (evt: MouseEvent): void => {\n                this.setButtonToCheck(evt.button);\n                this.dataHandler?.initToClicked(evt);\n            },\n            (evt: MouseEvent): boolean => this.buttonToConsider === undefined || evt.button === this.buttonToConsider);\n\n        new MouseTransition(pressed, this.addTerminalState(\"clicked\", true), \"mouseup\",\n            (evt: MouseEvent): void => {\n                this.dataHandler?.initToClicked(evt);\n            },\n            (evt: MouseEvent): boolean => this.currentButton === undefined || evt.button === this.currentButton);\n\n        new MouseTransition(pressed, cancelled, \"mousemove\");\n        new TimeoutTransition(pressed, cancelled, () => duration);\n    }\n\n    private setButtonToCheck(evtButton: number): void {\n        this.currentButton = this.buttonToConsider ?? evtButton;\n    }\n\n    public override reinit(): void {\n        super.reinit();\n        this.currentButton = undefined;\n    }\n}\n\n/**\n * A click interaction that is cancelled if the mouse up is not done before a given delay\n * @category Interaction Library\n */\nexport class TimedClick extends InteractionBase<PointData, PointDataImpl, TimedClickFSM> {\n    /**\n     * Creates the interaction.\n     * @param duration - The duration of the touch required to ends the user interaction\n     * If this duration is not reached, the interaction is cancelled.\n     * @param logger - The logger to use for this interaction\n     * @param button - The mouse button to use\n     * @param fsm - The optional FSM provided for the interaction\n     * @param data - The interaction data to use\n     * @param name - The name of the user interaction\n     */\n    public constructor(duration: number, logger: Logger, button?: number, fsm?: TimedClickFSM, data?: PointDataImpl, name?: string) {\n        super(fsm ?? new TimedClickFSM(duration, logger, button), data ?? new PointDataImpl(), logger, name ?? TimedClick.name);\n        this.fsm.dataHandler = {\n            \"initToClicked\": (evt: MouseEvent): void => {\n                this._data.copy(evt);\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TapFSM} from \"./Tap\";\nimport {TimeoutTransition} from \"../../fsm/TimeoutTransition\";\nimport {InteractionBase} from \"../InteractionBase\";\nimport {TapDataImpl} from \"../TapDataImpl\";\nimport {TouchDataImpl} from \"../TouchDataImpl\";\nimport type {PointsData} from \"../../../api/interaction/PointsData\";\nimport type {TouchData} from \"../../../api/interaction/TouchData\";\nimport type {Logger} from \"../../../api/logging/Logger\";\nimport type {FSMDataHandler} from \"../../fsm/FSMDataHandler\";\nimport type {PointsDataImpl} from \"../PointsDataImpl\";\n\nclass TimedTapFSM extends TapFSM {\n    public constructor(duration: number, nbTaps: number, logger: Logger, dataHandler: TapFSMHandler) {\n        super(nbTaps, logger, dataHandler);\n\n        if (duration <= 0) {\n            throw new Error(\"Incorrect duration\");\n        }\n\n        new TimeoutTransition(this.downState, this.cancelState, () => duration);\n    }\n}\n\ninterface TapFSMHandler extends FSMDataHandler {\n    tap(evt: TouchEvent): void;\n}\n\n/**\n * A tap user interaction that has a timeout:\n * while touching, if the timeout is reached the interaction is cancelled.\n * This touch interaction takes as input the timeout (in ms) the number of taps expected to end the interaction.\n * If this number is not reached after a timeout, the interaction is cancelled.\n * @category Interaction Library\n */\nexport class TimedTap extends InteractionBase<PointsData<TouchData>, PointsDataImpl<TouchData>, TapFSM> {\n    /**\n     * Creates the timed tap interaction\n     * @param duration - The max duration before a timeout while touching.\n     * @param numberTaps - The number of taps expected to end the interaction.\n     * If this number is not reached after a timeout, the interaction is cancelled.\n     * @param logger - The logger to use for this interaction\n     * @param name - The name of the user interaction\n     */\n    public constructor(duration: number, numberTaps: number, logger: Logger, name?: string) {\n        const handler: TapFSMHandler = {\n            \"tap\": (evt: TouchEvent): void => {\n                if (evt.changedTouches.length > 0) {\n                    const touch = new TouchDataImpl();\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    touch.copy(TouchDataImpl.mergeTouchEventData(evt.changedTouches[0]!, evt, Array.from(evt.touches)));\n                    this._data.addPoint(touch);\n                }\n            },\n            \"reinitData\": (): void => {\n                this.reinitData();\n            }\n        };\n\n        super(new TimedTapFSM(duration, numberTaps, logger, handler), new TapDataImpl(), logger, name ?? TimedTap.name);\n    }\n}\n","/* eslint-disable id-length */\n/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport type {Binding} from \"../../api/binding/Binding\";\nimport type {Command} from \"../../api/command/Command\";\nimport type {Interaction} from \"../../api/interaction/Interaction\";\nimport type {InteractionData} from \"../../api/interaction/InteractionData\";\nimport type {Subscription} from \"rxjs\";\n\n/**\n * Fitt's Law data. Immutable.\n * @category Logging\n */\nexport class FittsLawDataImpl {\n    public readonly t: number;\n\n    public readonly w: number;\n\n    public readonly h: number;\n\n    public readonly d: number;\n\n    /**\n     * Creates the data.\n     * @param t - The time in ms. Be careful about fingerprinting protection:\n     * https://developer.mozilla.org/en-US/docs/Web/API/Performance/now#reduced_time_precision\n     * @param w - The width of the target object\n     * @param h - The height of the target object\n     * @param d - the distance from the first mouse event to the center of the target object\n     */\n    public constructor(t: number, w: number, h: number, d: number) {\n        this.d = d;\n        this.h = h;\n        this.w = w;\n        this.t = t;\n    }\n\n    /**\n     * The ID part of the Fitt's law.\n     * @param we - Effective target width (std dev on distances), to be used instead of the classical distance.\n     * @returns The ID\n     */\n    public getID(we?: number): number {\n        return Math.log2((this.d / (we ?? this.w)) + 1);\n    }\n}\n\n/**\n * Permits to compute Fitt's law data based on the usage of two Interacto bindings.\n * @category Logging\n */\nexport class FittsLaw {\n    private readonly obsSrc: Subscription;\n\n    private readonly providedTarget: Element | undefined;\n\n    private readonly data: Array<FittsLawDataImpl>;\n\n    private _startX: number | undefined;\n\n    private _startY: number | undefined;\n\n    private _target: Element | undefined;\n\n    private readonly handler: (evt: MouseEvent) => void;\n\n    /**\n     * @param bSrc - The source binding.\n     * @param bTgt - The target binding.\n     * @param target - The optional target object. If not provided, the target object will be inferred\n     * from event data.\n     */\n    public constructor(bSrc: Binding<Command, Interaction<InteractionData>, unknown>,\n                       bTgt: Binding<Command, Interaction<InteractionData>, unknown>,\n                       target?: Element) {\n        this.data = [];\n        this.providedTarget = target;\n\n        this.handler = (evt: MouseEvent): void => {\n            if (this._startX === undefined) {\n                this._startX = evt.screenX;\n                this._startY = evt.screenY;\n            }\n            this._target = this.providedTarget ?? (evt.target instanceof Element ? evt.target : undefined);\n        };\n\n        this.obsSrc = bSrc.produces.subscribe(() => {\n            this.reinit();\n            document.body.addEventListener(\"mousemove\", this.handler);\n            const t0 = performance.now();\n            const obsTgt = bTgt.produces.subscribe(() => {\n                const t1 = performance.now();\n                this.data.push(new FittsLawDataImpl(\n                    t1 - t0,\n                    this._target?.clientWidth ?? Number.NaN,\n                    this._target?.clientHeight ?? Number.NaN,\n                    this.computeD()));\n                obsTgt.unsubscribe();\n                document.body.removeEventListener(\"mousemove\", this.handler);\n            });\n        });\n    }\n\n    private computeD(): number {\n        if (this._startX === undefined || this.providedTarget === undefined) {\n            return Number.NaN;\n        }\n\n        const a = this.providedTarget.clientLeft + this.providedTarget.clientWidth / 2 + this._startX;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const b = this.providedTarget.clientTop + this.providedTarget.clientHeight / 2 + this._startY!;\n\n        return Math.hypot(a, b);\n    }\n\n    /**\n     * Computes the effective target width (std dev on distances).\n     * @returns The effective target width.\n     */\n    public get we(): number {\n        const ds = this.data.map(d => d.d);\n\n        const mean = ds.reduce((a, b) => a + b) / ds.length;\n        return Math.sqrt(ds.map(x => (x - mean) ** 2).reduce((a, b) => a + b) / ds.length);\n    }\n\n    /**\n     * Computes the a and b coefficent of the regression line.\n     * @param effectiveTargetW - If true, will consider the effective target width. Otherwise will consider\n     * the computed distances.\n     * @returns the regression lien coefficients.\n     */\n    public getAB(effectiveTargetW = false): [a: number, b: number, r: number] {\n        // Linear regression\n\n        // do we consider effective target width\n        const w = effectiveTargetW ? this.we : undefined;\n        // 'id' are the x values\n        const xs = this.data.map(d => d.getID(w));\n        // 't' are the y values\n        const ys = this.data.map(d => d.t);\n        let sumx = 0;\n        let sumy = 0;\n        let sumxy = 0;\n        let sumxx = 0;\n        let sumyy = 0;\n\n        for (const [i, y] of ys.entries()) {\n            sumx += xs[i] ?? 0;\n            sumy += y;\n            sumxy += (xs[i] ?? 0) * y;\n            sumxx += (xs[i] ?? 0) ** 2;\n            sumyy += y * y;\n        }\n\n        const tmp = (ys.length * sumxy) - (sumx * sumy);\n        const tmp2 = (ys.length * sumxx) - (sumx ** 2);\n        // 'a' is the slope\n        const a = tmp / tmp2;\n        // 'b' is the intercept\n        const b = (sumy - a * sumx) / ys.length;\n        // Correlation coefficient 'r'\n        const r = (tmp / Math.sqrt(tmp2 * (ys.length * sumyy - sumy ** 2))) ** 2;\n\n        return [a, b, r];\n    }\n\n    /**\n     * Cleans the object\n     */\n    public uninstall(): void {\n        this.obsSrc.unsubscribe();\n        this.data.length = 0;\n    }\n\n    private reinit(): void {\n        this._startX = undefined;\n        this._startY = undefined;\n        this._target = undefined;\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {TreeUndoHistory} from \"../../api/undo/TreeUndoHistory\";\nimport {remove} from \"../util/ArrayUtil\";\nimport {Subject} from \"rxjs\";\nimport type {UndoableTreeNode, UndoableTreeNodeDTO, TreeUndoHistoryDTO} from \"../../api/undo/TreeUndoHistory\";\nimport type {Undoable, UndoableSnapshot} from \"../../api/undo/Undoable\";\nimport type {Observable} from \"rxjs\";\n\n/**\n * Implementation of UndoableTreeNode\n * @category History\n */\nclass UndoableTreeNodeImpl implements UndoableTreeNode {\n    public lastChildUndone: UndoableTreeNode | undefined;\n\n    public readonly children: Array<UndoableTreeNode>;\n\n    public readonly id: number;\n\n    public readonly parent: UndoableTreeNode | undefined;\n\n    public readonly undoable: Undoable;\n\n    private readonly cacheVisualSnap: UndoableSnapshot;\n\n    public constructor(undoable: Undoable, id: number, parent: UndoableTreeNode | undefined) {\n        this.undoable = undoable;\n        this.id = id;\n        this.children = new Array<UndoableTreeNode>();\n        this.parent = parent;\n        this.cacheVisualSnap = undoable.getVisualSnapshot();\n    }\n\n    public undo(): void {\n        if (this.parent !== undefined) {\n            this.parent.lastChildUndone = this;\n        }\n        this.undoable.undo();\n    }\n\n    public redo(): void {\n        this.undoable.redo();\n    }\n\n    public get visualSnapshot(): UndoableSnapshot {\n        return this.cacheVisualSnap;\n    }\n}\n\nclass UndoableTreeNodeDTOImpl implements UndoableTreeNodeDTO {\n    public readonly children: ReadonlyArray<UndoableTreeNodeDTO>;\n\n    public readonly id: number;\n\n    public readonly undoable: unknown;\n\n    public constructor(node: UndoableTreeNode, fn: (undoable: Undoable) => unknown) {\n        this.id = node.id;\n        this.undoable = fn(node.undoable);\n        this.children = node.children.map(child => new UndoableTreeNodeDTOImpl(child, fn));\n    }\n\n    /**\n     * Produces a tree node from the DTO node. This operates recurcively on\n     * children, so that it converts all the tree node.\n     * @param dto - The DTO to convert\n     * @param fn - The convertion method for the undoable.\n     * @param parent - The parent node of the one to create.\n     * @returns The created tree node (and its children) and the list of created nodes.\n     */\n    public static toNode(dto: UndoableTreeNodeDTO, fn: (dtoUndoable: unknown) => Undoable, parent: UndoableTreeNode):\n    [UndoableTreeNode, Array<UndoableTreeNode>] {\n        const node = new UndoableTreeNodeImpl(fn(dto.undoable), dto.id, parent);\n        const res = dto.children.map(child => UndoableTreeNodeDTOImpl.toNode(child, fn, node));\n\n        node.children.push(...res.map(currNodeTree => currNodeTree[0]));\n        const nodes = [node, ...res.flatMap(currNodeTree => currNodeTree[1])];\n\n        return [node, nodes];\n    }\n}\n\n/**\n * An implementation of the TreeUndoHistory interface\n * @category History\n */\nexport class TreeUndoHistoryImpl extends TreeUndoHistory {\n    private idCounter: number;\n\n    private _currentNode: UndoableTreeNode;\n\n    public readonly undoableNodes: Array<UndoableTreeNode | undefined>;\n\n    private readonly undoPublisher: Subject<Undoable | undefined>;\n\n    private readonly redoPublisher: Subject<Undoable | undefined>;\n\n    public readonly root: UndoableTreeNode;\n\n    private readonly _path: Array<number>;\n\n    private readonly _keepPath: boolean;\n\n    public constructor(keepPath = false) {\n        super();\n        this._keepPath = keepPath;\n        this._path = [];\n        this.undoableNodes = [];\n        this.idCounter = 0;\n        this.root = new UndoableTreeNodeImpl({\n            getUndoName(): string {\n                return \"\";\n            },\n            getVisualSnapshot(): UndoableSnapshot {\n                return \"root\";\n            },\n            redo(): void {},\n            undo(): void {}\n        }, -1, undefined);\n        this._currentNode = this.root;\n        this.undoPublisher = new Subject();\n        this.redoPublisher = new Subject();\n    }\n\n    public add(undoable: Undoable): void {\n        const node = new UndoableTreeNodeImpl(undoable, this.idCounter, this.currentNode);\n        this.undoableNodes[this.idCounter] = node;\n        this.currentNode.children.push(node);\n        this._currentNode = node;\n        this.addToPath();\n        this.idCounter++;\n        this.undoPublisher.next(undoable);\n        this.redoPublisher.next(undefined);\n    }\n\n    public get currentNode(): UndoableTreeNode {\n        return this._currentNode;\n    }\n\n    public clear(): void {\n        this.root.children.length = 0;\n        this._currentNode = this.root;\n        this._path.length = 0;\n        this.undoableNodes.length = 0;\n        this.idCounter = 0;\n        this.undoPublisher.next(undefined);\n        this.redoPublisher.next(undefined);\n    }\n\n    public delete(id: number): void {\n        // Cannot delete if keeping path\n        if (this.keepPath) {\n            return;\n        }\n\n        const node = this.undoableNodes[id];\n\n        if (node === undefined) {\n            return;\n        }\n\n        let nodeBranch = this.currentNode;\n\n        while (nodeBranch !== this.root) {\n            // cannot remove the current branch (older or current undoables)\n            if (nodeBranch.id === id) {\n                return;\n            }\n            nodeBranch = nodeBranch.parent ?? this.root;\n        }\n\n        this.undoableNodes[id] = undefined;\n\n        if (node.parent !== undefined) {\n            remove(node.parent.children, node);\n            if (node.parent.lastChildUndone === node) {\n                node.parent.lastChildUndone = undefined;\n            }\n        }\n\n        // Cloning the array since 'delete' may alter the children list.\n        // eslint-disable-next-line unicorn/no-useless-spread\n        for (const child of Array.from(node.children)) {\n            this.delete(child.id);\n        }\n\n        if (this.currentNode === node) {\n            this._currentNode = this.root;\n        }\n    }\n\n    public goTo(id: number): void {\n        if (this.currentNode.id === id || this.undoableNodes.length === 0 || id >= this.undoableNodes.length || id < -1) {\n            return;\n        }\n\n        if (this.currentNode === this.root) {\n            this.goToFromRoot(id);\n        } else {\n            this.goFromOneNodeToAnotherOne(id);\n        }\n\n        this._currentNode = this.undoableNodes[id] ?? this.root;\n        this.addToPath();\n        this.undoPublisher.next(this.getLastUndo());\n        this.redoPublisher.next(this.getLastRedo());\n    }\n\n    private goToFromRoot(id: number): void {\n        const undoables = this.gatherToRoot(this.undoableNodes[id]);\n        for (let i = undoables.length - 1; i >= 0; i--) {\n            undoables[i]?.redo();\n        }\n    }\n\n    private gatherToRoot(node: UndoableTreeNode | undefined): Array<UndoableTreeNode> {\n        const path = new Array<UndoableTreeNode>();\n        let currentNode = node;\n        while (currentNode !== this.root && currentNode !== undefined) {\n            path.push(currentNode);\n            currentNode = currentNode.parent;\n        }\n        return path.reverse();\n    }\n\n    private goFromOneNodeToAnotherOne(id: number): void {\n        // Go to root\n        const pathSrc = this.gatherToRoot(this.currentNode);\n        const pathTo = id === -1 ? [] : this.gatherToRoot(this.undoableNodes[id]);\n\n        // Following the common path\n        let i = 0;\n        while (pathSrc[i] === pathTo[i]) {\n            i++;\n        }\n\n        /*\n         * When taking different paths,\n         * we undo from the source path to the common node,\n         */\n        for (let j = pathSrc.length - 1; j > i; j--) {\n            pathSrc[j]?.undo();\n        }\n        if (i < pathSrc.length) {\n            pathSrc[i]?.undo();\n        }\n        // to then redo the target path to the targeted node\n        for (let j = i; j < pathTo.length; j++) {\n            pathTo[j]?.redo();\n        }\n    }\n\n    public redo(): void {\n        const node = this.currentNode.lastChildUndone;\n\n        if (node !== undefined) {\n            node.undoable.redo();\n            this._currentNode = node;\n            this.addToPath();\n            this.undoPublisher.next(node.undoable);\n            this.redoPublisher.next(this.getLastRedo());\n        }\n    }\n\n    public undo(): void {\n        if (this.currentNode !== this.root) {\n            const currentUndoable = this.currentNode.undoable;\n            this.currentNode.undo();\n            this._currentNode = this.currentNode.parent ?? this.root;\n            this.addToPath();\n            this.undoPublisher.next(this.getLastUndo());\n            this.redoPublisher.next(currentUndoable);\n        }\n    }\n\n    public getPositions(): Map<number, number> {\n        const positions = new Map<number, number>();\n        this.getPositionNode(this.root, positions, 0);\n        return positions;\n    }\n\n    private getPositionNode(node: UndoableTreeNode, positions: Map<number, number>, counter: number): number {\n        const [child0, child1] = node.children;\n\n        // length === 0\n        if (child0 === undefined) {\n            positions.set(node.id, counter);\n            return counter + 1;\n        }\n\n        // length === 1\n        if (child1 === undefined) {\n            const newCounter = this.getPositionNode(child0, positions, counter);\n            positions.set(node.id, positions.get(child0.id) ?? -1);\n            return newCounter;\n        }\n\n        let newCounter = counter;\n        for (let i = 0; i < Math.floor(node.children.length / 2); i++) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            newCounter = this.getPositionNode(node.children[i]!, positions, newCounter);\n        }\n\n        if (node.children.length % 2 === 0) {\n            positions.set(node.id, newCounter);\n            newCounter++;\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const value = node.children[Math.floor(node.children.length / 2)]!;\n            newCounter = this.getPositionNode(value, positions, newCounter);\n            positions.set(node.id, positions.get(value.id) ?? -1);\n        }\n\n        for (let i = Math.ceil(node.children.length / 2); i < node.children.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            newCounter = this.getPositionNode(node.children[i]!, positions, newCounter);\n        }\n\n        return newCounter;\n    }\n\n    public getLastOrEmptyRedoMessage(): string {\n        return this.getLastRedoMessage() ?? \"\";\n    }\n\n    public getLastOrEmptyUndoMessage(): string {\n        return this.getLastUndoMessage() ?? \"\";\n    }\n\n    public getLastRedo(): Undoable | undefined {\n        if (this.currentNode.lastChildUndone !== undefined) {\n            return this.currentNode.lastChildUndone.undoable;\n        }\n\n        return this.currentNode.children[0]?.undoable;\n    }\n\n    public getLastRedoMessage(): string | undefined {\n        return this.getLastRedo()?.getUndoName();\n    }\n\n    public getLastUndo(): Undoable | undefined {\n        return this.currentNode === this.root ? undefined : this.currentNode.undoable;\n    }\n\n    public getLastUndoMessage(): string | undefined {\n        return this.getLastUndo()?.getUndoName();\n    }\n\n    public undosObservable(): Observable<Undoable | undefined> {\n        return this.undoPublisher;\n    }\n\n    public redosObservable(): Observable<Undoable | undefined> {\n        return this.redoPublisher;\n    }\n\n    public get path(): ReadonlyArray<number> {\n        return this._path;\n    }\n\n    public get keepPath(): boolean {\n        return this._keepPath;\n    }\n\n    private addToPath(): void {\n        if (this.keepPath) {\n            this._path.push(this._currentNode.id);\n        }\n    }\n\n    public override export(fn: (undoable: Undoable) => unknown): TreeUndoHistoryDTO {\n        return {\n            \"roots\": this.root.children.map(child => new UndoableTreeNodeDTOImpl(child, fn)),\n            \"path\": this.path\n        };\n    }\n\n    public override import(dtoHistory: TreeUndoHistoryDTO, fn: (dtoUndoable: unknown) => Undoable): void {\n        this.clear();\n\n        if (this.keepPath) {\n            this._path.push(...dtoHistory.path);\n        }\n\n        const res = dtoHistory.roots.map(root => UndoableTreeNodeDTOImpl.toNode(root, fn, this.root));\n        this.root.children.push(...res.map(currRoot => currRoot[0]));\n\n        for (const currNode of res.flatMap(currRoot => currRoot[1])) {\n            this.undoableNodes[currNode.id] = currNode;\n        }\n\n        this._currentNode = this.root;\n        this.idCounter = Math.max(...this._path) + 1;\n        const gotoId = this.path.at(-1);\n\n        // Executing the nominal path\n        if (gotoId !== undefined) {\n            this.goTo(gotoId);\n            this.goTo(-1);\n        }\n\n        this.undoPublisher.next(this.getLastUndo());\n        this.redoPublisher.next(this.getLastRedo());\n    }\n}\n","/*\n * This file is part of Interacto.\n * Interacto is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * Interacto is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with Interacto.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {UndoHistory} from \"../../api/undo/UndoHistory\";\nimport {Subject} from \"rxjs\";\nimport type {Undoable} from \"../../api/undo/Undoable\";\nimport type {Observable} from \"rxjs\";\n\n/**\n * Implementation of the undo history (linear)\n * @category History\n */\nexport class UndoHistoryImpl extends UndoHistory {\n    /**\n     * Contains the undoable objects.\n     */\n    private readonly undos: Array<Undoable>;\n\n    /**\n     * Contains the redoable objects.\n     */\n    private readonly redos: Array<Undoable>;\n\n    /**\n     * The maximal number of undo.\n     */\n    private sizeMax: number;\n\n    private readonly undoPublisher: Subject<Undoable | undefined>;\n\n    private readonly redoPublisher: Subject<Undoable | undefined>;\n\n    /**\n     * Create the undo history\n     */\n    public constructor() {\n        super();\n        this.sizeMax = 0;\n        this.undos = [];\n        this.redos = [];\n        this.sizeMax = 20;\n        this.undoPublisher = new Subject();\n        this.redoPublisher = new Subject();\n    }\n\n    public undosObservable(): Observable<Undoable | undefined> {\n        return this.undoPublisher;\n    }\n\n    public redosObservable(): Observable<Undoable | undefined> {\n        return this.redoPublisher;\n    }\n\n    public clear(): void {\n        if (this.undos.length > 0) {\n            this.undos.length = 0;\n            this.undoPublisher.next(undefined);\n        }\n        this.clearRedo();\n    }\n\n    private clearRedo(): void {\n        if (this.redos.length > 0) {\n            this.redos.length = 0;\n            this.redoPublisher.next(undefined);\n        }\n    }\n\n    public add(undoable: Undoable): void {\n        if (this.sizeMax > 0) {\n            if (this.undos.length === this.sizeMax) {\n                this.undos.shift();\n            }\n\n            this.undos.push(undoable);\n            this.undoPublisher.next(undoable);\n            this.clearRedo();\n        }\n    }\n\n    public undo(): void {\n        const undoable = this.undos.pop();\n\n        if (undoable !== undefined) {\n            try {\n                undoable.undo();\n            } finally {\n                this.redos.push(undoable);\n                this.undoPublisher.next(this.getLastUndo());\n                this.redoPublisher.next(undoable);\n            }\n        }\n    }\n\n    public redo(): void {\n        const undoable = this.redos.pop();\n\n        if (undoable !== undefined) {\n            try {\n                undoable.redo();\n            } finally {\n                this.undos.push(undoable);\n                this.undoPublisher.next(undoable);\n                this.redoPublisher.next(this.getLastRedo());\n            }\n        }\n    }\n\n    public getLastUndoMessage(): string | undefined {\n        return this.undos.at(-1)?.getUndoName();\n    }\n\n    public getLastRedoMessage(): string | undefined {\n        return this.redos.at(-1)?.getUndoName();\n    }\n\n    public getLastOrEmptyUndoMessage(): string {\n        return this.getLastUndoMessage() ?? \"\";\n    }\n\n    public getLastOrEmptyRedoMessage(): string {\n        return this.getLastRedoMessage() ?? \"\";\n    }\n\n    public getLastUndo(): Undoable | undefined {\n        return this.undos.at(-1);\n    }\n\n    public getLastRedo(): Undoable | undefined {\n        return this.redos.at(-1);\n    }\n\n    public getSizeMax(): number {\n        return this.sizeMax;\n    }\n\n    public setSizeMax(max: number): void {\n        if (max >= 0) {\n            const removed = this.undos.splice(0, this.undos.length - max);\n            if (this.undos.length === 0 && removed.length > 0) {\n                this.undoPublisher.next(undefined);\n            }\n            this.sizeMax = max;\n        }\n    }\n\n    public getUndo(): ReadonlyArray<Undoable> {\n        return this.undos;\n    }\n\n    public getRedo(): ReadonlyArray<Undoable> {\n        return this.redos;\n    }\n}\n"],"names":["__publicField","currWidget","Subject","KeyCode","newCounter"],"mappings":"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"}